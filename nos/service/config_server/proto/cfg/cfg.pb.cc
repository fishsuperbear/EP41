// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/cfg/cfg.proto

#include "proto/cfg/cfg.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_proto_2fcfg_2fcfg_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CfgClientInfo_proto_2fcfg_2fcfg_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2fcfg_2fcfg_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CfgMethodEventInfo_proto_2fcfg_2fcfg_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_proto_2fcfg_2fcfg_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CfgParamInfo_proto_2fcfg_2fcfg_2eproto;
class CfgInitclientReqMethodDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CfgInitclientReqMethod> _instance;
} _CfgInitclientReqMethod_default_instance_;
class CfgInitclientResMethodDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CfgInitclientResMethod> _instance;
} _CfgInitclientResMethod_default_instance_;
class CfgDeinitclientReqMethodDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CfgDeinitclientReqMethod> _instance;
} _CfgDeinitclientReqMethod_default_instance_;
class CfgDeinitclientResMethodDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CfgDeinitclientResMethod> _instance;
} _CfgDeinitclientResMethod_default_instance_;
class CfgSetparamReqMethodDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CfgSetparamReqMethod> _instance;
} _CfgSetparamReqMethod_default_instance_;
class CfgSetparamResMethodDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CfgSetparamResMethod> _instance;
} _CfgSetparamResMethod_default_instance_;
class CfgGetparamReqMethodDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CfgGetparamReqMethod> _instance;
} _CfgGetparamReqMethod_default_instance_;
class CfgGetparamResMethodDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CfgGetparamResMethod> _instance;
} _CfgGetparamResMethod_default_instance_;
class CfgResetparamReqMethodDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CfgResetparamReqMethod> _instance;
} _CfgResetparamReqMethod_default_instance_;
class CfgResetparamResMethodDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CfgResetparamResMethod> _instance;
} _CfgResetparamResMethod_default_instance_;
class CfgMonitorparamReqMethodDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CfgMonitorparamReqMethod> _instance;
} _CfgMonitorparamReqMethod_default_instance_;
class CfgMonitorparamResMethodDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CfgMonitorparamResMethod> _instance;
} _CfgMonitorparamResMethod_default_instance_;
class CfgUnmonitorparamReqMethodDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CfgUnmonitorparamReqMethod> _instance;
} _CfgUnmonitorparamReqMethod_default_instance_;
class CfgUnmonitorparamResMethodDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CfgUnmonitorparamResMethod> _instance;
} _CfgUnmonitorparamResMethod_default_instance_;
class CfgDelparamReqMethodDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CfgDelparamReqMethod> _instance;
} _CfgDelparamReqMethod_default_instance_;
class CfgDelparamResMethodDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CfgDelparamResMethod> _instance;
} _CfgDelparamResMethod_default_instance_;
class CfgParamupdatedataresReqMethodDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CfgParamupdatedataresReqMethod> _instance;
} _CfgParamupdatedataresReqMethod_default_instance_;
class CfgParamupdatedataresResMethodDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CfgParamupdatedataresResMethod> _instance;
} _CfgParamupdatedataresResMethod_default_instance_;
class CfgGetmonitorclientsReqMethodDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CfgGetmonitorclientsReqMethod> _instance;
} _CfgGetmonitorclientsReqMethod_default_instance_;
class CfgGetmonitorclientsResMethodDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CfgGetmonitorclientsResMethod> _instance;
} _CfgGetmonitorclientsResMethod_default_instance_;
class CfgGetclientinfolistReqMethodDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CfgGetclientinfolistReqMethod> _instance;
} _CfgGetclientinfolistReqMethod_default_instance_;
class CfgMethodEventInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CfgMethodEventInfo> _instance;
} _CfgMethodEventInfo_default_instance_;
class CfgClientInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CfgClientInfo> _instance;
} _CfgClientInfo_default_instance_;
class CfgGetclientinfolistResMethodDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CfgGetclientinfolistResMethod> _instance;
} _CfgGetclientinfolistResMethod_default_instance_;
class CfgGetparaminfolistReqMethodDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CfgGetparaminfolistReqMethod> _instance;
} _CfgGetparaminfolistReqMethod_default_instance_;
class CfgParamInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CfgParamInfo> _instance;
} _CfgParamInfo_default_instance_;
class CfgGetparaminfolistResMethodDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CfgGetparaminfolistResMethod> _instance;
} _CfgGetparaminfolistResMethod_default_instance_;
class CfgParamupdatedataEventDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CfgParamupdatedataEvent> _instance;
} _CfgParamupdatedataEvent_default_instance_;
class CfgParamupdatedataresEventDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CfgParamupdatedataresEvent> _instance;
} _CfgParamupdatedataresEvent_default_instance_;
static void InitDefaultsscc_info_CfgClientInfo_proto_2fcfg_2fcfg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CfgClientInfo_default_instance_;
    new (ptr) ::CfgClientInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CfgClientInfo::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CfgClientInfo_proto_2fcfg_2fcfg_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CfgClientInfo_proto_2fcfg_2fcfg_2eproto}, {
      &scc_info_CfgMethodEventInfo_proto_2fcfg_2fcfg_2eproto.base,}};

static void InitDefaultsscc_info_CfgDeinitclientReqMethod_proto_2fcfg_2fcfg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CfgDeinitclientReqMethod_default_instance_;
    new (ptr) ::CfgDeinitclientReqMethod();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CfgDeinitclientReqMethod::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CfgDeinitclientReqMethod_proto_2fcfg_2fcfg_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CfgDeinitclientReqMethod_proto_2fcfg_2fcfg_2eproto}, {}};

static void InitDefaultsscc_info_CfgDeinitclientResMethod_proto_2fcfg_2fcfg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CfgDeinitclientResMethod_default_instance_;
    new (ptr) ::CfgDeinitclientResMethod();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CfgDeinitclientResMethod::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CfgDeinitclientResMethod_proto_2fcfg_2fcfg_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CfgDeinitclientResMethod_proto_2fcfg_2fcfg_2eproto}, {}};

static void InitDefaultsscc_info_CfgDelparamReqMethod_proto_2fcfg_2fcfg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CfgDelparamReqMethod_default_instance_;
    new (ptr) ::CfgDelparamReqMethod();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CfgDelparamReqMethod::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CfgDelparamReqMethod_proto_2fcfg_2fcfg_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CfgDelparamReqMethod_proto_2fcfg_2fcfg_2eproto}, {}};

static void InitDefaultsscc_info_CfgDelparamResMethod_proto_2fcfg_2fcfg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CfgDelparamResMethod_default_instance_;
    new (ptr) ::CfgDelparamResMethod();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CfgDelparamResMethod::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CfgDelparamResMethod_proto_2fcfg_2fcfg_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CfgDelparamResMethod_proto_2fcfg_2fcfg_2eproto}, {}};

static void InitDefaultsscc_info_CfgGetclientinfolistReqMethod_proto_2fcfg_2fcfg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CfgGetclientinfolistReqMethod_default_instance_;
    new (ptr) ::CfgGetclientinfolistReqMethod();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CfgGetclientinfolistReqMethod::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CfgGetclientinfolistReqMethod_proto_2fcfg_2fcfg_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CfgGetclientinfolistReqMethod_proto_2fcfg_2fcfg_2eproto}, {}};

static void InitDefaultsscc_info_CfgGetclientinfolistResMethod_proto_2fcfg_2fcfg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CfgGetclientinfolistResMethod_default_instance_;
    new (ptr) ::CfgGetclientinfolistResMethod();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CfgGetclientinfolistResMethod::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CfgGetclientinfolistResMethod_proto_2fcfg_2fcfg_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CfgGetclientinfolistResMethod_proto_2fcfg_2fcfg_2eproto}, {
      &scc_info_CfgClientInfo_proto_2fcfg_2fcfg_2eproto.base,}};

static void InitDefaultsscc_info_CfgGetmonitorclientsReqMethod_proto_2fcfg_2fcfg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CfgGetmonitorclientsReqMethod_default_instance_;
    new (ptr) ::CfgGetmonitorclientsReqMethod();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CfgGetmonitorclientsReqMethod::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CfgGetmonitorclientsReqMethod_proto_2fcfg_2fcfg_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CfgGetmonitorclientsReqMethod_proto_2fcfg_2fcfg_2eproto}, {}};

static void InitDefaultsscc_info_CfgGetmonitorclientsResMethod_proto_2fcfg_2fcfg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CfgGetmonitorclientsResMethod_default_instance_;
    new (ptr) ::CfgGetmonitorclientsResMethod();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CfgGetmonitorclientsResMethod::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CfgGetmonitorclientsResMethod_proto_2fcfg_2fcfg_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CfgGetmonitorclientsResMethod_proto_2fcfg_2fcfg_2eproto}, {}};

static void InitDefaultsscc_info_CfgGetparamReqMethod_proto_2fcfg_2fcfg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CfgGetparamReqMethod_default_instance_;
    new (ptr) ::CfgGetparamReqMethod();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CfgGetparamReqMethod::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CfgGetparamReqMethod_proto_2fcfg_2fcfg_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CfgGetparamReqMethod_proto_2fcfg_2fcfg_2eproto}, {}};

static void InitDefaultsscc_info_CfgGetparamResMethod_proto_2fcfg_2fcfg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CfgGetparamResMethod_default_instance_;
    new (ptr) ::CfgGetparamResMethod();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CfgGetparamResMethod::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CfgGetparamResMethod_proto_2fcfg_2fcfg_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CfgGetparamResMethod_proto_2fcfg_2fcfg_2eproto}, {}};

static void InitDefaultsscc_info_CfgGetparaminfolistReqMethod_proto_2fcfg_2fcfg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CfgGetparaminfolistReqMethod_default_instance_;
    new (ptr) ::CfgGetparaminfolistReqMethod();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CfgGetparaminfolistReqMethod::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CfgGetparaminfolistReqMethod_proto_2fcfg_2fcfg_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CfgGetparaminfolistReqMethod_proto_2fcfg_2fcfg_2eproto}, {}};

static void InitDefaultsscc_info_CfgGetparaminfolistResMethod_proto_2fcfg_2fcfg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CfgGetparaminfolistResMethod_default_instance_;
    new (ptr) ::CfgGetparaminfolistResMethod();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CfgGetparaminfolistResMethod::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CfgGetparaminfolistResMethod_proto_2fcfg_2fcfg_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CfgGetparaminfolistResMethod_proto_2fcfg_2fcfg_2eproto}, {
      &scc_info_CfgParamInfo_proto_2fcfg_2fcfg_2eproto.base,}};

static void InitDefaultsscc_info_CfgInitclientReqMethod_proto_2fcfg_2fcfg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CfgInitclientReqMethod_default_instance_;
    new (ptr) ::CfgInitclientReqMethod();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CfgInitclientReqMethod::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CfgInitclientReqMethod_proto_2fcfg_2fcfg_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CfgInitclientReqMethod_proto_2fcfg_2fcfg_2eproto}, {}};

static void InitDefaultsscc_info_CfgInitclientResMethod_proto_2fcfg_2fcfg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CfgInitclientResMethod_default_instance_;
    new (ptr) ::CfgInitclientResMethod();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CfgInitclientResMethod::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CfgInitclientResMethod_proto_2fcfg_2fcfg_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CfgInitclientResMethod_proto_2fcfg_2fcfg_2eproto}, {}};

static void InitDefaultsscc_info_CfgMethodEventInfo_proto_2fcfg_2fcfg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CfgMethodEventInfo_default_instance_;
    new (ptr) ::CfgMethodEventInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CfgMethodEventInfo::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CfgMethodEventInfo_proto_2fcfg_2fcfg_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CfgMethodEventInfo_proto_2fcfg_2fcfg_2eproto}, {}};

static void InitDefaultsscc_info_CfgMonitorparamReqMethod_proto_2fcfg_2fcfg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CfgMonitorparamReqMethod_default_instance_;
    new (ptr) ::CfgMonitorparamReqMethod();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CfgMonitorparamReqMethod::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CfgMonitorparamReqMethod_proto_2fcfg_2fcfg_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CfgMonitorparamReqMethod_proto_2fcfg_2fcfg_2eproto}, {}};

static void InitDefaultsscc_info_CfgMonitorparamResMethod_proto_2fcfg_2fcfg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CfgMonitorparamResMethod_default_instance_;
    new (ptr) ::CfgMonitorparamResMethod();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CfgMonitorparamResMethod::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CfgMonitorparamResMethod_proto_2fcfg_2fcfg_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CfgMonitorparamResMethod_proto_2fcfg_2fcfg_2eproto}, {}};

static void InitDefaultsscc_info_CfgParamInfo_proto_2fcfg_2fcfg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CfgParamInfo_default_instance_;
    new (ptr) ::CfgParamInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CfgParamInfo::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CfgParamInfo_proto_2fcfg_2fcfg_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CfgParamInfo_proto_2fcfg_2fcfg_2eproto}, {}};

static void InitDefaultsscc_info_CfgParamupdatedataEvent_proto_2fcfg_2fcfg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CfgParamupdatedataEvent_default_instance_;
    new (ptr) ::CfgParamupdatedataEvent();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CfgParamupdatedataEvent::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CfgParamupdatedataEvent_proto_2fcfg_2fcfg_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CfgParamupdatedataEvent_proto_2fcfg_2fcfg_2eproto}, {}};

static void InitDefaultsscc_info_CfgParamupdatedataresEvent_proto_2fcfg_2fcfg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CfgParamupdatedataresEvent_default_instance_;
    new (ptr) ::CfgParamupdatedataresEvent();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CfgParamupdatedataresEvent::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CfgParamupdatedataresEvent_proto_2fcfg_2fcfg_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CfgParamupdatedataresEvent_proto_2fcfg_2fcfg_2eproto}, {}};

static void InitDefaultsscc_info_CfgParamupdatedataresReqMethod_proto_2fcfg_2fcfg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CfgParamupdatedataresReqMethod_default_instance_;
    new (ptr) ::CfgParamupdatedataresReqMethod();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CfgParamupdatedataresReqMethod::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CfgParamupdatedataresReqMethod_proto_2fcfg_2fcfg_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CfgParamupdatedataresReqMethod_proto_2fcfg_2fcfg_2eproto}, {}};

static void InitDefaultsscc_info_CfgParamupdatedataresResMethod_proto_2fcfg_2fcfg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CfgParamupdatedataresResMethod_default_instance_;
    new (ptr) ::CfgParamupdatedataresResMethod();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CfgParamupdatedataresResMethod::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CfgParamupdatedataresResMethod_proto_2fcfg_2fcfg_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CfgParamupdatedataresResMethod_proto_2fcfg_2fcfg_2eproto}, {}};

static void InitDefaultsscc_info_CfgResetparamReqMethod_proto_2fcfg_2fcfg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CfgResetparamReqMethod_default_instance_;
    new (ptr) ::CfgResetparamReqMethod();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CfgResetparamReqMethod::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CfgResetparamReqMethod_proto_2fcfg_2fcfg_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CfgResetparamReqMethod_proto_2fcfg_2fcfg_2eproto}, {}};

static void InitDefaultsscc_info_CfgResetparamResMethod_proto_2fcfg_2fcfg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CfgResetparamResMethod_default_instance_;
    new (ptr) ::CfgResetparamResMethod();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CfgResetparamResMethod::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CfgResetparamResMethod_proto_2fcfg_2fcfg_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CfgResetparamResMethod_proto_2fcfg_2fcfg_2eproto}, {}};

static void InitDefaultsscc_info_CfgSetparamReqMethod_proto_2fcfg_2fcfg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CfgSetparamReqMethod_default_instance_;
    new (ptr) ::CfgSetparamReqMethod();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CfgSetparamReqMethod::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CfgSetparamReqMethod_proto_2fcfg_2fcfg_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CfgSetparamReqMethod_proto_2fcfg_2fcfg_2eproto}, {}};

static void InitDefaultsscc_info_CfgSetparamResMethod_proto_2fcfg_2fcfg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CfgSetparamResMethod_default_instance_;
    new (ptr) ::CfgSetparamResMethod();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CfgSetparamResMethod::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CfgSetparamResMethod_proto_2fcfg_2fcfg_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CfgSetparamResMethod_proto_2fcfg_2fcfg_2eproto}, {}};

static void InitDefaultsscc_info_CfgUnmonitorparamReqMethod_proto_2fcfg_2fcfg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CfgUnmonitorparamReqMethod_default_instance_;
    new (ptr) ::CfgUnmonitorparamReqMethod();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CfgUnmonitorparamReqMethod::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CfgUnmonitorparamReqMethod_proto_2fcfg_2fcfg_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CfgUnmonitorparamReqMethod_proto_2fcfg_2fcfg_2eproto}, {}};

static void InitDefaultsscc_info_CfgUnmonitorparamResMethod_proto_2fcfg_2fcfg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CfgUnmonitorparamResMethod_default_instance_;
    new (ptr) ::CfgUnmonitorparamResMethod();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CfgUnmonitorparamResMethod::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CfgUnmonitorparamResMethod_proto_2fcfg_2fcfg_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CfgUnmonitorparamResMethod_proto_2fcfg_2fcfg_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_proto_2fcfg_2fcfg_2eproto[29];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_proto_2fcfg_2fcfg_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_proto_2fcfg_2fcfg_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_proto_2fcfg_2fcfg_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::CfgInitclientReqMethod, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CfgInitclientReqMethod, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CfgInitclientReqMethod, client_name_),
  0,
  PROTOBUF_FIELD_OFFSET(::CfgInitclientResMethod, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CfgInitclientResMethod, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CfgInitclientResMethod, result_),
  0,
  PROTOBUF_FIELD_OFFSET(::CfgDeinitclientReqMethod, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CfgDeinitclientReqMethod, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CfgDeinitclientReqMethod, client_name_),
  0,
  PROTOBUF_FIELD_OFFSET(::CfgDeinitclientResMethod, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CfgDeinitclientResMethod, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CfgDeinitclientResMethod, result_),
  0,
  PROTOBUF_FIELD_OFFSET(::CfgSetparamReqMethod, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CfgSetparamReqMethod, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CfgSetparamReqMethod, client_name_),
  PROTOBUF_FIELD_OFFSET(::CfgSetparamReqMethod, param_name_),
  PROTOBUF_FIELD_OFFSET(::CfgSetparamReqMethod, param_value_),
  PROTOBUF_FIELD_OFFSET(::CfgSetparamReqMethod, param_type_),
  PROTOBUF_FIELD_OFFSET(::CfgSetparamReqMethod, isdefault_value_),
  PROTOBUF_FIELD_OFFSET(::CfgSetparamReqMethod, persist_flag_),
  0,
  1,
  ~0u,
  2,
  3,
  4,
  PROTOBUF_FIELD_OFFSET(::CfgSetparamResMethod, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CfgSetparamResMethod, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CfgSetparamResMethod, result_),
  0,
  PROTOBUF_FIELD_OFFSET(::CfgGetparamReqMethod, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CfgGetparamReqMethod, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CfgGetparamReqMethod, client_name_),
  PROTOBUF_FIELD_OFFSET(::CfgGetparamReqMethod, param_name_),
  PROTOBUF_FIELD_OFFSET(::CfgGetparamReqMethod, param_type_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::CfgGetparamResMethod, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CfgGetparamResMethod, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CfgGetparamResMethod, param_value_),
  PROTOBUF_FIELD_OFFSET(::CfgGetparamResMethod, param_type_),
  PROTOBUF_FIELD_OFFSET(::CfgGetparamResMethod, result_),
  ~0u,
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::CfgResetparamReqMethod, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CfgResetparamReqMethod, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CfgResetparamReqMethod, client_name_),
  PROTOBUF_FIELD_OFFSET(::CfgResetparamReqMethod, param_name_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::CfgResetparamResMethod, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CfgResetparamResMethod, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CfgResetparamResMethod, result_),
  0,
  PROTOBUF_FIELD_OFFSET(::CfgMonitorparamReqMethod, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CfgMonitorparamReqMethod, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CfgMonitorparamReqMethod, client_name_),
  PROTOBUF_FIELD_OFFSET(::CfgMonitorparamReqMethod, param_name_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::CfgMonitorparamResMethod, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CfgMonitorparamResMethod, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CfgMonitorparamResMethod, result_),
  0,
  PROTOBUF_FIELD_OFFSET(::CfgUnmonitorparamReqMethod, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CfgUnmonitorparamReqMethod, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CfgUnmonitorparamReqMethod, client_name_),
  PROTOBUF_FIELD_OFFSET(::CfgUnmonitorparamReqMethod, param_name_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::CfgUnmonitorparamResMethod, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CfgUnmonitorparamResMethod, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CfgUnmonitorparamResMethod, result_),
  0,
  PROTOBUF_FIELD_OFFSET(::CfgDelparamReqMethod, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CfgDelparamReqMethod, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CfgDelparamReqMethod, client_name_),
  PROTOBUF_FIELD_OFFSET(::CfgDelparamReqMethod, param_name_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::CfgDelparamResMethod, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CfgDelparamResMethod, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CfgDelparamResMethod, result_),
  0,
  PROTOBUF_FIELD_OFFSET(::CfgParamupdatedataresReqMethod, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CfgParamupdatedataresReqMethod, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CfgParamupdatedataresReqMethod, client_name_),
  PROTOBUF_FIELD_OFFSET(::CfgParamupdatedataresReqMethod, param_name_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::CfgParamupdatedataresResMethod, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CfgParamupdatedataresResMethod, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CfgParamupdatedataresResMethod, result_),
  0,
  PROTOBUF_FIELD_OFFSET(::CfgGetmonitorclientsReqMethod, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CfgGetmonitorclientsReqMethod, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CfgGetmonitorclientsReqMethod, client_name_),
  PROTOBUF_FIELD_OFFSET(::CfgGetmonitorclientsReqMethod, param_name_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::CfgGetmonitorclientsResMethod, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CfgGetmonitorclientsResMethod, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CfgGetmonitorclientsResMethod, monitor_clients_),
  PROTOBUF_FIELD_OFFSET(::CfgGetmonitorclientsResMethod, result_),
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::CfgGetclientinfolistReqMethod, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CfgGetclientinfolistReqMethod, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CfgGetclientinfolistReqMethod, client_name_),
  0,
  PROTOBUF_FIELD_OFFSET(::CfgMethodEventInfo, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CfgMethodEventInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CfgMethodEventInfo, type_),
  PROTOBUF_FIELD_OFFSET(::CfgMethodEventInfo, param_name_),
  PROTOBUF_FIELD_OFFSET(::CfgMethodEventInfo, count_),
  1,
  0,
  2,
  PROTOBUF_FIELD_OFFSET(::CfgClientInfo, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CfgClientInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CfgClientInfo, client_name_),
  PROTOBUF_FIELD_OFFSET(::CfgClientInfo, monitor_params_),
  PROTOBUF_FIELD_OFFSET(::CfgClientInfo, running_status_),
  PROTOBUF_FIELD_OFFSET(::CfgClientInfo, start_time_),
  PROTOBUF_FIELD_OFFSET(::CfgClientInfo, end_time_),
  PROTOBUF_FIELD_OFFSET(::CfgClientInfo, methodevent_info_),
  0,
  ~0u,
  3,
  1,
  2,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::CfgGetclientinfolistResMethod, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CfgGetclientinfolistResMethod, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CfgGetclientinfolistResMethod, clientlist_),
  PROTOBUF_FIELD_OFFSET(::CfgGetclientinfolistResMethod, result_),
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::CfgGetparaminfolistReqMethod, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CfgGetparaminfolistReqMethod, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CfgGetparaminfolistReqMethod, client_name_),
  0,
  PROTOBUF_FIELD_OFFSET(::CfgParamInfo, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CfgParamInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CfgParamInfo, param_name_),
  PROTOBUF_FIELD_OFFSET(::CfgParamInfo, data_type_),
  PROTOBUF_FIELD_OFFSET(::CfgParamInfo, data_size_),
  PROTOBUF_FIELD_OFFSET(::CfgParamInfo, lastupdate_clientname_),
  PROTOBUF_FIELD_OFFSET(::CfgParamInfo, lastupdate_time_),
  PROTOBUF_FIELD_OFFSET(::CfgParamInfo, per_plag_),
  0,
  3,
  4,
  1,
  2,
  5,
  PROTOBUF_FIELD_OFFSET(::CfgGetparaminfolistResMethod, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CfgGetparaminfolistResMethod, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CfgGetparaminfolistResMethod, paramlist_),
  PROTOBUF_FIELD_OFFSET(::CfgGetparaminfolistResMethod, result_),
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::CfgParamupdatedataEvent, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CfgParamupdatedataEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CfgParamupdatedataEvent, param_name_),
  PROTOBUF_FIELD_OFFSET(::CfgParamupdatedataEvent, param_value_),
  PROTOBUF_FIELD_OFFSET(::CfgParamupdatedataEvent, param_type_),
  PROTOBUF_FIELD_OFFSET(::CfgParamupdatedataEvent, client_name_),
  PROTOBUF_FIELD_OFFSET(::CfgParamupdatedataEvent, update_client_name_),
  0,
  ~0u,
  3,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::CfgParamupdatedataresEvent, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CfgParamupdatedataresEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CfgParamupdatedataresEvent, client_name_),
  PROTOBUF_FIELD_OFFSET(::CfgParamupdatedataresEvent, param_name_),
  PROTOBUF_FIELD_OFFSET(::CfgParamupdatedataresEvent, result_),
  0,
  1,
  2,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 6, sizeof(::CfgInitclientReqMethod)},
  { 7, 13, sizeof(::CfgInitclientResMethod)},
  { 14, 20, sizeof(::CfgDeinitclientReqMethod)},
  { 21, 27, sizeof(::CfgDeinitclientResMethod)},
  { 28, 39, sizeof(::CfgSetparamReqMethod)},
  { 45, 51, sizeof(::CfgSetparamResMethod)},
  { 52, 60, sizeof(::CfgGetparamReqMethod)},
  { 63, 71, sizeof(::CfgGetparamResMethod)},
  { 74, 81, sizeof(::CfgResetparamReqMethod)},
  { 83, 89, sizeof(::CfgResetparamResMethod)},
  { 90, 97, sizeof(::CfgMonitorparamReqMethod)},
  { 99, 105, sizeof(::CfgMonitorparamResMethod)},
  { 106, 113, sizeof(::CfgUnmonitorparamReqMethod)},
  { 115, 121, sizeof(::CfgUnmonitorparamResMethod)},
  { 122, 129, sizeof(::CfgDelparamReqMethod)},
  { 131, 137, sizeof(::CfgDelparamResMethod)},
  { 138, 145, sizeof(::CfgParamupdatedataresReqMethod)},
  { 147, 153, sizeof(::CfgParamupdatedataresResMethod)},
  { 154, 161, sizeof(::CfgGetmonitorclientsReqMethod)},
  { 163, 170, sizeof(::CfgGetmonitorclientsResMethod)},
  { 172, 178, sizeof(::CfgGetclientinfolistReqMethod)},
  { 179, 187, sizeof(::CfgMethodEventInfo)},
  { 190, 201, sizeof(::CfgClientInfo)},
  { 207, 214, sizeof(::CfgGetclientinfolistResMethod)},
  { 216, 222, sizeof(::CfgGetparaminfolistReqMethod)},
  { 223, 234, sizeof(::CfgParamInfo)},
  { 240, 247, sizeof(::CfgGetparaminfolistResMethod)},
  { 249, 259, sizeof(::CfgParamupdatedataEvent)},
  { 264, 272, sizeof(::CfgParamupdatedataresEvent)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CfgInitclientReqMethod_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CfgInitclientResMethod_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CfgDeinitclientReqMethod_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CfgDeinitclientResMethod_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CfgSetparamReqMethod_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CfgSetparamResMethod_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CfgGetparamReqMethod_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CfgGetparamResMethod_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CfgResetparamReqMethod_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CfgResetparamResMethod_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CfgMonitorparamReqMethod_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CfgMonitorparamResMethod_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CfgUnmonitorparamReqMethod_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CfgUnmonitorparamResMethod_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CfgDelparamReqMethod_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CfgDelparamResMethod_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CfgParamupdatedataresReqMethod_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CfgParamupdatedataresResMethod_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CfgGetmonitorclientsReqMethod_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CfgGetmonitorclientsResMethod_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CfgGetclientinfolistReqMethod_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CfgMethodEventInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CfgClientInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CfgGetclientinfolistResMethod_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CfgGetparaminfolistReqMethod_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CfgParamInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CfgGetparaminfolistResMethod_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CfgParamupdatedataEvent_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CfgParamupdatedataresEvent_default_instance_),
};

const char descriptor_table_protodef_proto_2fcfg_2fcfg_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\023proto/cfg/cfg.proto\"-\n\026CfgInitclientRe"
  "qMethod\022\023\n\013client_name\030\001 \001(\t\"(\n\026CfgInitc"
  "lientResMethod\022\016\n\006result\030\001 \001(\005\"/\n\030CfgDei"
  "nitclientReqMethod\022\023\n\013client_name\030\001 \001(\t\""
  "*\n\030CfgDeinitclientResMethod\022\016\n\006result\030\001 "
  "\001(\005\"\227\001\n\024CfgSetparamReqMethod\022\023\n\013client_n"
  "ame\030\001 \001(\t\022\022\n\nparam_name\030\002 \001(\t\022\023\n\013param_v"
  "alue\030\003 \003(\014\022\022\n\nparam_type\030\004 \001(\005\022\027\n\017isdefa"
  "ult_value\030\005 \001(\010\022\024\n\014persist_flag\030\006 \001(\005\"&\n"
  "\024CfgSetparamResMethod\022\016\n\006result\030\001 \001(\005\"S\n"
  "\024CfgGetparamReqMethod\022\023\n\013client_name\030\001 \001"
  "(\t\022\022\n\nparam_name\030\002 \001(\t\022\022\n\nparam_type\030\003 \001"
  "(\005\"O\n\024CfgGetparamResMethod\022\023\n\013param_valu"
  "e\030\001 \003(\014\022\022\n\nparam_type\030\002 \001(\005\022\016\n\006result\030\003 "
  "\001(\005\"A\n\026CfgResetparamReqMethod\022\023\n\013client_"
  "name\030\001 \001(\t\022\022\n\nparam_name\030\002 \001(\t\"(\n\026CfgRes"
  "etparamResMethod\022\016\n\006result\030\001 \001(\005\"C\n\030CfgM"
  "onitorparamReqMethod\022\023\n\013client_name\030\001 \001("
  "\t\022\022\n\nparam_name\030\002 \001(\t\"*\n\030CfgMonitorparam"
  "ResMethod\022\016\n\006result\030\001 \001(\005\"E\n\032CfgUnmonito"
  "rparamReqMethod\022\023\n\013client_name\030\001 \001(\t\022\022\n\n"
  "param_name\030\002 \001(\t\",\n\032CfgUnmonitorparamRes"
  "Method\022\016\n\006result\030\001 \001(\005\"\?\n\024CfgDelparamReq"
  "Method\022\023\n\013client_name\030\001 \001(\t\022\022\n\nparam_nam"
  "e\030\002 \001(\t\"&\n\024CfgDelparamResMethod\022\016\n\006resul"
  "t\030\001 \001(\005\"I\n\036CfgParamupdatedataresReqMetho"
  "d\022\023\n\013client_name\030\001 \001(\t\022\022\n\nparam_name\030\002 \001"
  "(\t\"0\n\036CfgParamupdatedataresResMethod\022\016\n\006"
  "result\030\001 \001(\005\"H\n\035CfgGetmonitorclientsReqM"
  "ethod\022\023\n\013client_name\030\001 \001(\t\022\022\n\nparam_name"
  "\030\002 \001(\t\"H\n\035CfgGetmonitorclientsResMethod\022"
  "\027\n\017monitor_clients\030\001 \003(\t\022\016\n\006result\030\002 \001(\005"
  "\"4\n\035CfgGetclientinfolistReqMethod\022\023\n\013cli"
  "ent_name\030\001 \001(\t\"E\n\022CfgMethodEventInfo\022\014\n\004"
  "type\030\001 \001(\005\022\022\n\nparam_name\030\002 \001(\t\022\r\n\005count\030"
  "\003 \001(\005\"\251\001\n\rCfgClientInfo\022\023\n\013client_name\030\001"
  " \001(\t\022\026\n\016monitor_params\030\002 \003(\t\022\026\n\016running_"
  "status\030\003 \001(\005\022\022\n\nstart_time\030\004 \001(\t\022\020\n\010end_"
  "time\030\005 \001(\t\022-\n\020methodevent_info\030\006 \003(\0132\023.C"
  "fgMethodEventInfo\"S\n\035CfgGetclientinfolis"
  "tResMethod\022\"\n\nclientlist\030\001 \003(\0132\016.CfgClie"
  "ntInfo\022\016\n\006result\030\002 \001(\005\"3\n\034CfgGetparaminf"
  "olistReqMethod\022\023\n\013client_name\030\001 \001(\t\"\222\001\n\014"
  "CfgParamInfo\022\022\n\nparam_name\030\001 \001(\t\022\021\n\tdata"
  "_type\030\002 \001(\005\022\021\n\tdata_size\030\003 \001(\005\022\035\n\025lastup"
  "date_clientname\030\004 \001(\t\022\027\n\017lastupdate_time"
  "\030\005 \001(\t\022\020\n\010per_plag\030\006 \001(\005\"P\n\034CfgGetparami"
  "nfolistResMethod\022 \n\tparamlist\030\001 \003(\0132\r.Cf"
  "gParamInfo\022\016\n\006result\030\002 \001(\005\"\207\001\n\027CfgParamu"
  "pdatedataEvent\022\022\n\nparam_name\030\001 \001(\t\022\023\n\013pa"
  "ram_value\030\002 \003(\014\022\022\n\nparam_type\030\003 \001(\005\022\023\n\013c"
  "lient_name\030\004 \001(\t\022\032\n\022update_client_name\030\005"
  " \001(\t\"U\n\032CfgParamupdatedataresEvent\022\023\n\013cl"
  "ient_name\030\001 \001(\t\022\022\n\nparam_name\030\002 \001(\t\022\016\n\006r"
  "esult\030\003 \001(\005"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_proto_2fcfg_2fcfg_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_proto_2fcfg_2fcfg_2eproto_sccs[29] = {
  &scc_info_CfgClientInfo_proto_2fcfg_2fcfg_2eproto.base,
  &scc_info_CfgDeinitclientReqMethod_proto_2fcfg_2fcfg_2eproto.base,
  &scc_info_CfgDeinitclientResMethod_proto_2fcfg_2fcfg_2eproto.base,
  &scc_info_CfgDelparamReqMethod_proto_2fcfg_2fcfg_2eproto.base,
  &scc_info_CfgDelparamResMethod_proto_2fcfg_2fcfg_2eproto.base,
  &scc_info_CfgGetclientinfolistReqMethod_proto_2fcfg_2fcfg_2eproto.base,
  &scc_info_CfgGetclientinfolistResMethod_proto_2fcfg_2fcfg_2eproto.base,
  &scc_info_CfgGetmonitorclientsReqMethod_proto_2fcfg_2fcfg_2eproto.base,
  &scc_info_CfgGetmonitorclientsResMethod_proto_2fcfg_2fcfg_2eproto.base,
  &scc_info_CfgGetparamReqMethod_proto_2fcfg_2fcfg_2eproto.base,
  &scc_info_CfgGetparamResMethod_proto_2fcfg_2fcfg_2eproto.base,
  &scc_info_CfgGetparaminfolistReqMethod_proto_2fcfg_2fcfg_2eproto.base,
  &scc_info_CfgGetparaminfolistResMethod_proto_2fcfg_2fcfg_2eproto.base,
  &scc_info_CfgInitclientReqMethod_proto_2fcfg_2fcfg_2eproto.base,
  &scc_info_CfgInitclientResMethod_proto_2fcfg_2fcfg_2eproto.base,
  &scc_info_CfgMethodEventInfo_proto_2fcfg_2fcfg_2eproto.base,
  &scc_info_CfgMonitorparamReqMethod_proto_2fcfg_2fcfg_2eproto.base,
  &scc_info_CfgMonitorparamResMethod_proto_2fcfg_2fcfg_2eproto.base,
  &scc_info_CfgParamInfo_proto_2fcfg_2fcfg_2eproto.base,
  &scc_info_CfgParamupdatedataEvent_proto_2fcfg_2fcfg_2eproto.base,
  &scc_info_CfgParamupdatedataresEvent_proto_2fcfg_2fcfg_2eproto.base,
  &scc_info_CfgParamupdatedataresReqMethod_proto_2fcfg_2fcfg_2eproto.base,
  &scc_info_CfgParamupdatedataresResMethod_proto_2fcfg_2fcfg_2eproto.base,
  &scc_info_CfgResetparamReqMethod_proto_2fcfg_2fcfg_2eproto.base,
  &scc_info_CfgResetparamResMethod_proto_2fcfg_2fcfg_2eproto.base,
  &scc_info_CfgSetparamReqMethod_proto_2fcfg_2fcfg_2eproto.base,
  &scc_info_CfgSetparamResMethod_proto_2fcfg_2fcfg_2eproto.base,
  &scc_info_CfgUnmonitorparamReqMethod_proto_2fcfg_2fcfg_2eproto.base,
  &scc_info_CfgUnmonitorparamResMethod_proto_2fcfg_2fcfg_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_proto_2fcfg_2fcfg_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_proto_2fcfg_2fcfg_2eproto = {
  false, false, descriptor_table_protodef_proto_2fcfg_2fcfg_2eproto, "proto/cfg/cfg.proto", 2171,
  &descriptor_table_proto_2fcfg_2fcfg_2eproto_once, descriptor_table_proto_2fcfg_2fcfg_2eproto_sccs, descriptor_table_proto_2fcfg_2fcfg_2eproto_deps, 29, 0,
  schemas, file_default_instances, TableStruct_proto_2fcfg_2fcfg_2eproto::offsets,
  file_level_metadata_proto_2fcfg_2fcfg_2eproto, 29, file_level_enum_descriptors_proto_2fcfg_2fcfg_2eproto, file_level_service_descriptors_proto_2fcfg_2fcfg_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_proto_2fcfg_2fcfg_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_proto_2fcfg_2fcfg_2eproto)), true);

// ===================================================================

void CfgInitclientReqMethod::InitAsDefaultInstance() {
}
class CfgInitclientReqMethod::_Internal {
 public:
  using HasBits = decltype(std::declval<CfgInitclientReqMethod>()._has_bits_);
  static void set_has_client_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CfgInitclientReqMethod::CfgInitclientReqMethod(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CfgInitclientReqMethod)
}
CfgInitclientReqMethod::CfgInitclientReqMethod(const CfgInitclientReqMethod& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  client_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_client_name()) {
    client_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_client_name(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:CfgInitclientReqMethod)
}

void CfgInitclientReqMethod::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CfgInitclientReqMethod_proto_2fcfg_2fcfg_2eproto.base);
  client_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CfgInitclientReqMethod::~CfgInitclientReqMethod() {
  // @@protoc_insertion_point(destructor:CfgInitclientReqMethod)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CfgInitclientReqMethod::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  client_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CfgInitclientReqMethod::ArenaDtor(void* object) {
  CfgInitclientReqMethod* _this = reinterpret_cast< CfgInitclientReqMethod* >(object);
  (void)_this;
}
void CfgInitclientReqMethod::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CfgInitclientReqMethod::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CfgInitclientReqMethod& CfgInitclientReqMethod::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CfgInitclientReqMethod_proto_2fcfg_2fcfg_2eproto.base);
  return *internal_default_instance();
}


void CfgInitclientReqMethod::Clear() {
// @@protoc_insertion_point(message_clear_start:CfgInitclientReqMethod)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    client_name_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CfgInitclientReqMethod::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string client_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_client_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CfgInitclientReqMethod.client_name");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CfgInitclientReqMethod::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CfgInitclientReqMethod)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string client_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_client_name().data(), static_cast<int>(this->_internal_client_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CfgInitclientReqMethod.client_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_client_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CfgInitclientReqMethod)
  return target;
}

size_t CfgInitclientReqMethod::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CfgInitclientReqMethod)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string client_name = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_client_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CfgInitclientReqMethod::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CfgInitclientReqMethod)
  GOOGLE_DCHECK_NE(&from, this);
  const CfgInitclientReqMethod* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CfgInitclientReqMethod>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CfgInitclientReqMethod)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CfgInitclientReqMethod)
    MergeFrom(*source);
  }
}

void CfgInitclientReqMethod::MergeFrom(const CfgInitclientReqMethod& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CfgInitclientReqMethod)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_client_name()) {
    _internal_set_client_name(from._internal_client_name());
  }
}

void CfgInitclientReqMethod::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CfgInitclientReqMethod)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CfgInitclientReqMethod::CopyFrom(const CfgInitclientReqMethod& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CfgInitclientReqMethod)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CfgInitclientReqMethod::IsInitialized() const {
  return true;
}

void CfgInitclientReqMethod::InternalSwap(CfgInitclientReqMethod* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  client_name_.Swap(&other->client_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata CfgInitclientReqMethod::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CfgInitclientResMethod::InitAsDefaultInstance() {
}
class CfgInitclientResMethod::_Internal {
 public:
  using HasBits = decltype(std::declval<CfgInitclientResMethod>()._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CfgInitclientResMethod::CfgInitclientResMethod(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CfgInitclientResMethod)
}
CfgInitclientResMethod::CfgInitclientResMethod(const CfgInitclientResMethod& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:CfgInitclientResMethod)
}

void CfgInitclientResMethod::SharedCtor() {
  result_ = 0;
}

CfgInitclientResMethod::~CfgInitclientResMethod() {
  // @@protoc_insertion_point(destructor:CfgInitclientResMethod)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CfgInitclientResMethod::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CfgInitclientResMethod::ArenaDtor(void* object) {
  CfgInitclientResMethod* _this = reinterpret_cast< CfgInitclientResMethod* >(object);
  (void)_this;
}
void CfgInitclientResMethod::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CfgInitclientResMethod::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CfgInitclientResMethod& CfgInitclientResMethod::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CfgInitclientResMethod_proto_2fcfg_2fcfg_2eproto.base);
  return *internal_default_instance();
}


void CfgInitclientResMethod::Clear() {
// @@protoc_insertion_point(message_clear_start:CfgInitclientResMethod)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CfgInitclientResMethod::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_result(&has_bits);
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CfgInitclientResMethod::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CfgInitclientResMethod)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CfgInitclientResMethod)
  return target;
}

size_t CfgInitclientResMethod::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CfgInitclientResMethod)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int32 result = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CfgInitclientResMethod::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CfgInitclientResMethod)
  GOOGLE_DCHECK_NE(&from, this);
  const CfgInitclientResMethod* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CfgInitclientResMethod>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CfgInitclientResMethod)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CfgInitclientResMethod)
    MergeFrom(*source);
  }
}

void CfgInitclientResMethod::MergeFrom(const CfgInitclientResMethod& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CfgInitclientResMethod)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_result()) {
    _internal_set_result(from._internal_result());
  }
}

void CfgInitclientResMethod::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CfgInitclientResMethod)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CfgInitclientResMethod::CopyFrom(const CfgInitclientResMethod& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CfgInitclientResMethod)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CfgInitclientResMethod::IsInitialized() const {
  return true;
}

void CfgInitclientResMethod::InternalSwap(CfgInitclientResMethod* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CfgInitclientResMethod::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CfgDeinitclientReqMethod::InitAsDefaultInstance() {
}
class CfgDeinitclientReqMethod::_Internal {
 public:
  using HasBits = decltype(std::declval<CfgDeinitclientReqMethod>()._has_bits_);
  static void set_has_client_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CfgDeinitclientReqMethod::CfgDeinitclientReqMethod(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CfgDeinitclientReqMethod)
}
CfgDeinitclientReqMethod::CfgDeinitclientReqMethod(const CfgDeinitclientReqMethod& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  client_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_client_name()) {
    client_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_client_name(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:CfgDeinitclientReqMethod)
}

void CfgDeinitclientReqMethod::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CfgDeinitclientReqMethod_proto_2fcfg_2fcfg_2eproto.base);
  client_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CfgDeinitclientReqMethod::~CfgDeinitclientReqMethod() {
  // @@protoc_insertion_point(destructor:CfgDeinitclientReqMethod)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CfgDeinitclientReqMethod::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  client_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CfgDeinitclientReqMethod::ArenaDtor(void* object) {
  CfgDeinitclientReqMethod* _this = reinterpret_cast< CfgDeinitclientReqMethod* >(object);
  (void)_this;
}
void CfgDeinitclientReqMethod::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CfgDeinitclientReqMethod::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CfgDeinitclientReqMethod& CfgDeinitclientReqMethod::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CfgDeinitclientReqMethod_proto_2fcfg_2fcfg_2eproto.base);
  return *internal_default_instance();
}


void CfgDeinitclientReqMethod::Clear() {
// @@protoc_insertion_point(message_clear_start:CfgDeinitclientReqMethod)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    client_name_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CfgDeinitclientReqMethod::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string client_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_client_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CfgDeinitclientReqMethod.client_name");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CfgDeinitclientReqMethod::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CfgDeinitclientReqMethod)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string client_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_client_name().data(), static_cast<int>(this->_internal_client_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CfgDeinitclientReqMethod.client_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_client_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CfgDeinitclientReqMethod)
  return target;
}

size_t CfgDeinitclientReqMethod::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CfgDeinitclientReqMethod)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string client_name = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_client_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CfgDeinitclientReqMethod::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CfgDeinitclientReqMethod)
  GOOGLE_DCHECK_NE(&from, this);
  const CfgDeinitclientReqMethod* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CfgDeinitclientReqMethod>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CfgDeinitclientReqMethod)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CfgDeinitclientReqMethod)
    MergeFrom(*source);
  }
}

void CfgDeinitclientReqMethod::MergeFrom(const CfgDeinitclientReqMethod& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CfgDeinitclientReqMethod)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_client_name()) {
    _internal_set_client_name(from._internal_client_name());
  }
}

void CfgDeinitclientReqMethod::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CfgDeinitclientReqMethod)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CfgDeinitclientReqMethod::CopyFrom(const CfgDeinitclientReqMethod& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CfgDeinitclientReqMethod)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CfgDeinitclientReqMethod::IsInitialized() const {
  return true;
}

void CfgDeinitclientReqMethod::InternalSwap(CfgDeinitclientReqMethod* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  client_name_.Swap(&other->client_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata CfgDeinitclientReqMethod::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CfgDeinitclientResMethod::InitAsDefaultInstance() {
}
class CfgDeinitclientResMethod::_Internal {
 public:
  using HasBits = decltype(std::declval<CfgDeinitclientResMethod>()._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CfgDeinitclientResMethod::CfgDeinitclientResMethod(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CfgDeinitclientResMethod)
}
CfgDeinitclientResMethod::CfgDeinitclientResMethod(const CfgDeinitclientResMethod& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:CfgDeinitclientResMethod)
}

void CfgDeinitclientResMethod::SharedCtor() {
  result_ = 0;
}

CfgDeinitclientResMethod::~CfgDeinitclientResMethod() {
  // @@protoc_insertion_point(destructor:CfgDeinitclientResMethod)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CfgDeinitclientResMethod::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CfgDeinitclientResMethod::ArenaDtor(void* object) {
  CfgDeinitclientResMethod* _this = reinterpret_cast< CfgDeinitclientResMethod* >(object);
  (void)_this;
}
void CfgDeinitclientResMethod::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CfgDeinitclientResMethod::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CfgDeinitclientResMethod& CfgDeinitclientResMethod::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CfgDeinitclientResMethod_proto_2fcfg_2fcfg_2eproto.base);
  return *internal_default_instance();
}


void CfgDeinitclientResMethod::Clear() {
// @@protoc_insertion_point(message_clear_start:CfgDeinitclientResMethod)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CfgDeinitclientResMethod::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_result(&has_bits);
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CfgDeinitclientResMethod::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CfgDeinitclientResMethod)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CfgDeinitclientResMethod)
  return target;
}

size_t CfgDeinitclientResMethod::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CfgDeinitclientResMethod)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int32 result = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CfgDeinitclientResMethod::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CfgDeinitclientResMethod)
  GOOGLE_DCHECK_NE(&from, this);
  const CfgDeinitclientResMethod* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CfgDeinitclientResMethod>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CfgDeinitclientResMethod)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CfgDeinitclientResMethod)
    MergeFrom(*source);
  }
}

void CfgDeinitclientResMethod::MergeFrom(const CfgDeinitclientResMethod& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CfgDeinitclientResMethod)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_result()) {
    _internal_set_result(from._internal_result());
  }
}

void CfgDeinitclientResMethod::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CfgDeinitclientResMethod)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CfgDeinitclientResMethod::CopyFrom(const CfgDeinitclientResMethod& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CfgDeinitclientResMethod)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CfgDeinitclientResMethod::IsInitialized() const {
  return true;
}

void CfgDeinitclientResMethod::InternalSwap(CfgDeinitclientResMethod* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CfgDeinitclientResMethod::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CfgSetparamReqMethod::InitAsDefaultInstance() {
}
class CfgSetparamReqMethod::_Internal {
 public:
  using HasBits = decltype(std::declval<CfgSetparamReqMethod>()._has_bits_);
  static void set_has_client_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_param_name(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_param_type(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_isdefault_value(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_persist_flag(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
};

CfgSetparamReqMethod::CfgSetparamReqMethod(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  param_value_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CfgSetparamReqMethod)
}
CfgSetparamReqMethod::CfgSetparamReqMethod(const CfgSetparamReqMethod& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      param_value_(from.param_value_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  client_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_client_name()) {
    client_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_client_name(),
      GetArena());
  }
  param_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_param_name()) {
    param_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_param_name(),
      GetArena());
  }
  ::memcpy(&param_type_, &from.param_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&persist_flag_) -
    reinterpret_cast<char*>(&param_type_)) + sizeof(persist_flag_));
  // @@protoc_insertion_point(copy_constructor:CfgSetparamReqMethod)
}

void CfgSetparamReqMethod::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CfgSetparamReqMethod_proto_2fcfg_2fcfg_2eproto.base);
  client_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  param_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&param_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&persist_flag_) -
      reinterpret_cast<char*>(&param_type_)) + sizeof(persist_flag_));
}

CfgSetparamReqMethod::~CfgSetparamReqMethod() {
  // @@protoc_insertion_point(destructor:CfgSetparamReqMethod)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CfgSetparamReqMethod::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  client_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  param_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CfgSetparamReqMethod::ArenaDtor(void* object) {
  CfgSetparamReqMethod* _this = reinterpret_cast< CfgSetparamReqMethod* >(object);
  (void)_this;
}
void CfgSetparamReqMethod::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CfgSetparamReqMethod::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CfgSetparamReqMethod& CfgSetparamReqMethod::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CfgSetparamReqMethod_proto_2fcfg_2fcfg_2eproto.base);
  return *internal_default_instance();
}


void CfgSetparamReqMethod::Clear() {
// @@protoc_insertion_point(message_clear_start:CfgSetparamReqMethod)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  param_value_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      client_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      param_name_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x0000001cu) {
    ::memset(&param_type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&persist_flag_) -
        reinterpret_cast<char*>(&param_type_)) + sizeof(persist_flag_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CfgSetparamReqMethod::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string client_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_client_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CfgSetparamReqMethod.client_name");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string param_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_param_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CfgSetparamReqMethod.param_name");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated bytes param_value = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_param_value();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // optional int32 param_type = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_param_type(&has_bits);
          param_type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool isdefault_value = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_isdefault_value(&has_bits);
          isdefault_value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 persist_flag = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_persist_flag(&has_bits);
          persist_flag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CfgSetparamReqMethod::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CfgSetparamReqMethod)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string client_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_client_name().data(), static_cast<int>(this->_internal_client_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CfgSetparamReqMethod.client_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_client_name(), target);
  }

  // optional string param_name = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_param_name().data(), static_cast<int>(this->_internal_param_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CfgSetparamReqMethod.param_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_param_name(), target);
  }

  // repeated bytes param_value = 3;
  for (int i = 0, n = this->_internal_param_value_size(); i < n; i++) {
    const auto& s = this->_internal_param_value(i);
    target = stream->WriteBytes(3, s, target);
  }

  // optional int32 param_type = 4;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_param_type(), target);
  }

  // optional bool isdefault_value = 5;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(5, this->_internal_isdefault_value(), target);
  }

  // optional int32 persist_flag = 6;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_persist_flag(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CfgSetparamReqMethod)
  return target;
}

size_t CfgSetparamReqMethod::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CfgSetparamReqMethod)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bytes param_value = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(param_value_.size());
  for (int i = 0, n = param_value_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
      param_value_.Get(i));
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional string client_name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_client_name());
    }

    // optional string param_name = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_param_name());
    }

    // optional int32 param_type = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_param_type());
    }

    // optional bool isdefault_value = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 1;
    }

    // optional int32 persist_flag = 6;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_persist_flag());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CfgSetparamReqMethod::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CfgSetparamReqMethod)
  GOOGLE_DCHECK_NE(&from, this);
  const CfgSetparamReqMethod* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CfgSetparamReqMethod>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CfgSetparamReqMethod)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CfgSetparamReqMethod)
    MergeFrom(*source);
  }
}

void CfgSetparamReqMethod::MergeFrom(const CfgSetparamReqMethod& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CfgSetparamReqMethod)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  param_value_.MergeFrom(from.param_value_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_client_name(from._internal_client_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_param_name(from._internal_param_name());
    }
    if (cached_has_bits & 0x00000004u) {
      param_type_ = from.param_type_;
    }
    if (cached_has_bits & 0x00000008u) {
      isdefault_value_ = from.isdefault_value_;
    }
    if (cached_has_bits & 0x00000010u) {
      persist_flag_ = from.persist_flag_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CfgSetparamReqMethod::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CfgSetparamReqMethod)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CfgSetparamReqMethod::CopyFrom(const CfgSetparamReqMethod& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CfgSetparamReqMethod)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CfgSetparamReqMethod::IsInitialized() const {
  return true;
}

void CfgSetparamReqMethod::InternalSwap(CfgSetparamReqMethod* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  param_value_.InternalSwap(&other->param_value_);
  client_name_.Swap(&other->client_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  param_name_.Swap(&other->param_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CfgSetparamReqMethod, persist_flag_)
      + sizeof(CfgSetparamReqMethod::persist_flag_)
      - PROTOBUF_FIELD_OFFSET(CfgSetparamReqMethod, param_type_)>(
          reinterpret_cast<char*>(&param_type_),
          reinterpret_cast<char*>(&other->param_type_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CfgSetparamReqMethod::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CfgSetparamResMethod::InitAsDefaultInstance() {
}
class CfgSetparamResMethod::_Internal {
 public:
  using HasBits = decltype(std::declval<CfgSetparamResMethod>()._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CfgSetparamResMethod::CfgSetparamResMethod(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CfgSetparamResMethod)
}
CfgSetparamResMethod::CfgSetparamResMethod(const CfgSetparamResMethod& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:CfgSetparamResMethod)
}

void CfgSetparamResMethod::SharedCtor() {
  result_ = 0;
}

CfgSetparamResMethod::~CfgSetparamResMethod() {
  // @@protoc_insertion_point(destructor:CfgSetparamResMethod)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CfgSetparamResMethod::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CfgSetparamResMethod::ArenaDtor(void* object) {
  CfgSetparamResMethod* _this = reinterpret_cast< CfgSetparamResMethod* >(object);
  (void)_this;
}
void CfgSetparamResMethod::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CfgSetparamResMethod::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CfgSetparamResMethod& CfgSetparamResMethod::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CfgSetparamResMethod_proto_2fcfg_2fcfg_2eproto.base);
  return *internal_default_instance();
}


void CfgSetparamResMethod::Clear() {
// @@protoc_insertion_point(message_clear_start:CfgSetparamResMethod)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CfgSetparamResMethod::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_result(&has_bits);
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CfgSetparamResMethod::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CfgSetparamResMethod)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CfgSetparamResMethod)
  return target;
}

size_t CfgSetparamResMethod::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CfgSetparamResMethod)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int32 result = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CfgSetparamResMethod::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CfgSetparamResMethod)
  GOOGLE_DCHECK_NE(&from, this);
  const CfgSetparamResMethod* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CfgSetparamResMethod>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CfgSetparamResMethod)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CfgSetparamResMethod)
    MergeFrom(*source);
  }
}

void CfgSetparamResMethod::MergeFrom(const CfgSetparamResMethod& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CfgSetparamResMethod)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_result()) {
    _internal_set_result(from._internal_result());
  }
}

void CfgSetparamResMethod::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CfgSetparamResMethod)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CfgSetparamResMethod::CopyFrom(const CfgSetparamResMethod& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CfgSetparamResMethod)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CfgSetparamResMethod::IsInitialized() const {
  return true;
}

void CfgSetparamResMethod::InternalSwap(CfgSetparamResMethod* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CfgSetparamResMethod::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CfgGetparamReqMethod::InitAsDefaultInstance() {
}
class CfgGetparamReqMethod::_Internal {
 public:
  using HasBits = decltype(std::declval<CfgGetparamReqMethod>()._has_bits_);
  static void set_has_client_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_param_name(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_param_type(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

CfgGetparamReqMethod::CfgGetparamReqMethod(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CfgGetparamReqMethod)
}
CfgGetparamReqMethod::CfgGetparamReqMethod(const CfgGetparamReqMethod& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  client_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_client_name()) {
    client_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_client_name(),
      GetArena());
  }
  param_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_param_name()) {
    param_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_param_name(),
      GetArena());
  }
  param_type_ = from.param_type_;
  // @@protoc_insertion_point(copy_constructor:CfgGetparamReqMethod)
}

void CfgGetparamReqMethod::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CfgGetparamReqMethod_proto_2fcfg_2fcfg_2eproto.base);
  client_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  param_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  param_type_ = 0;
}

CfgGetparamReqMethod::~CfgGetparamReqMethod() {
  // @@protoc_insertion_point(destructor:CfgGetparamReqMethod)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CfgGetparamReqMethod::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  client_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  param_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CfgGetparamReqMethod::ArenaDtor(void* object) {
  CfgGetparamReqMethod* _this = reinterpret_cast< CfgGetparamReqMethod* >(object);
  (void)_this;
}
void CfgGetparamReqMethod::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CfgGetparamReqMethod::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CfgGetparamReqMethod& CfgGetparamReqMethod::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CfgGetparamReqMethod_proto_2fcfg_2fcfg_2eproto.base);
  return *internal_default_instance();
}


void CfgGetparamReqMethod::Clear() {
// @@protoc_insertion_point(message_clear_start:CfgGetparamReqMethod)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      client_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      param_name_.ClearNonDefaultToEmpty();
    }
  }
  param_type_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CfgGetparamReqMethod::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string client_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_client_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CfgGetparamReqMethod.client_name");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string param_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_param_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CfgGetparamReqMethod.param_name");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 param_type = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_param_type(&has_bits);
          param_type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CfgGetparamReqMethod::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CfgGetparamReqMethod)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string client_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_client_name().data(), static_cast<int>(this->_internal_client_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CfgGetparamReqMethod.client_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_client_name(), target);
  }

  // optional string param_name = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_param_name().data(), static_cast<int>(this->_internal_param_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CfgGetparamReqMethod.param_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_param_name(), target);
  }

  // optional int32 param_type = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_param_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CfgGetparamReqMethod)
  return target;
}

size_t CfgGetparamReqMethod::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CfgGetparamReqMethod)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string client_name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_client_name());
    }

    // optional string param_name = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_param_name());
    }

    // optional int32 param_type = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_param_type());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CfgGetparamReqMethod::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CfgGetparamReqMethod)
  GOOGLE_DCHECK_NE(&from, this);
  const CfgGetparamReqMethod* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CfgGetparamReqMethod>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CfgGetparamReqMethod)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CfgGetparamReqMethod)
    MergeFrom(*source);
  }
}

void CfgGetparamReqMethod::MergeFrom(const CfgGetparamReqMethod& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CfgGetparamReqMethod)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_client_name(from._internal_client_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_param_name(from._internal_param_name());
    }
    if (cached_has_bits & 0x00000004u) {
      param_type_ = from.param_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CfgGetparamReqMethod::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CfgGetparamReqMethod)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CfgGetparamReqMethod::CopyFrom(const CfgGetparamReqMethod& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CfgGetparamReqMethod)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CfgGetparamReqMethod::IsInitialized() const {
  return true;
}

void CfgGetparamReqMethod::InternalSwap(CfgGetparamReqMethod* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  client_name_.Swap(&other->client_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  param_name_.Swap(&other->param_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(param_type_, other->param_type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CfgGetparamReqMethod::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CfgGetparamResMethod::InitAsDefaultInstance() {
}
class CfgGetparamResMethod::_Internal {
 public:
  using HasBits = decltype(std::declval<CfgGetparamResMethod>()._has_bits_);
  static void set_has_param_type(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CfgGetparamResMethod::CfgGetparamResMethod(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  param_value_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CfgGetparamResMethod)
}
CfgGetparamResMethod::CfgGetparamResMethod(const CfgGetparamResMethod& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      param_value_(from.param_value_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&param_type_, &from.param_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&param_type_)) + sizeof(result_));
  // @@protoc_insertion_point(copy_constructor:CfgGetparamResMethod)
}

void CfgGetparamResMethod::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CfgGetparamResMethod_proto_2fcfg_2fcfg_2eproto.base);
  ::memset(&param_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&param_type_)) + sizeof(result_));
}

CfgGetparamResMethod::~CfgGetparamResMethod() {
  // @@protoc_insertion_point(destructor:CfgGetparamResMethod)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CfgGetparamResMethod::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CfgGetparamResMethod::ArenaDtor(void* object) {
  CfgGetparamResMethod* _this = reinterpret_cast< CfgGetparamResMethod* >(object);
  (void)_this;
}
void CfgGetparamResMethod::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CfgGetparamResMethod::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CfgGetparamResMethod& CfgGetparamResMethod::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CfgGetparamResMethod_proto_2fcfg_2fcfg_2eproto.base);
  return *internal_default_instance();
}


void CfgGetparamResMethod::Clear() {
// @@protoc_insertion_point(message_clear_start:CfgGetparamResMethod)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  param_value_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&param_type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&result_) -
        reinterpret_cast<char*>(&param_type_)) + sizeof(result_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CfgGetparamResMethod::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated bytes param_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_param_value();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // optional int32 param_type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_param_type(&has_bits);
          param_type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_result(&has_bits);
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CfgGetparamResMethod::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CfgGetparamResMethod)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes param_value = 1;
  for (int i = 0, n = this->_internal_param_value_size(); i < n; i++) {
    const auto& s = this->_internal_param_value(i);
    target = stream->WriteBytes(1, s, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional int32 param_type = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_param_type(), target);
  }

  // optional int32 result = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CfgGetparamResMethod)
  return target;
}

size_t CfgGetparamResMethod::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CfgGetparamResMethod)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bytes param_value = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(param_value_.size());
  for (int i = 0, n = param_value_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
      param_value_.Get(i));
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional int32 param_type = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_param_type());
    }

    // optional int32 result = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_result());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CfgGetparamResMethod::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CfgGetparamResMethod)
  GOOGLE_DCHECK_NE(&from, this);
  const CfgGetparamResMethod* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CfgGetparamResMethod>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CfgGetparamResMethod)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CfgGetparamResMethod)
    MergeFrom(*source);
  }
}

void CfgGetparamResMethod::MergeFrom(const CfgGetparamResMethod& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CfgGetparamResMethod)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  param_value_.MergeFrom(from.param_value_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      param_type_ = from.param_type_;
    }
    if (cached_has_bits & 0x00000002u) {
      result_ = from.result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CfgGetparamResMethod::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CfgGetparamResMethod)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CfgGetparamResMethod::CopyFrom(const CfgGetparamResMethod& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CfgGetparamResMethod)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CfgGetparamResMethod::IsInitialized() const {
  return true;
}

void CfgGetparamResMethod::InternalSwap(CfgGetparamResMethod* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  param_value_.InternalSwap(&other->param_value_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CfgGetparamResMethod, result_)
      + sizeof(CfgGetparamResMethod::result_)
      - PROTOBUF_FIELD_OFFSET(CfgGetparamResMethod, param_type_)>(
          reinterpret_cast<char*>(&param_type_),
          reinterpret_cast<char*>(&other->param_type_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CfgGetparamResMethod::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CfgResetparamReqMethod::InitAsDefaultInstance() {
}
class CfgResetparamReqMethod::_Internal {
 public:
  using HasBits = decltype(std::declval<CfgResetparamReqMethod>()._has_bits_);
  static void set_has_client_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_param_name(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CfgResetparamReqMethod::CfgResetparamReqMethod(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CfgResetparamReqMethod)
}
CfgResetparamReqMethod::CfgResetparamReqMethod(const CfgResetparamReqMethod& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  client_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_client_name()) {
    client_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_client_name(),
      GetArena());
  }
  param_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_param_name()) {
    param_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_param_name(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:CfgResetparamReqMethod)
}

void CfgResetparamReqMethod::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CfgResetparamReqMethod_proto_2fcfg_2fcfg_2eproto.base);
  client_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  param_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CfgResetparamReqMethod::~CfgResetparamReqMethod() {
  // @@protoc_insertion_point(destructor:CfgResetparamReqMethod)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CfgResetparamReqMethod::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  client_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  param_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CfgResetparamReqMethod::ArenaDtor(void* object) {
  CfgResetparamReqMethod* _this = reinterpret_cast< CfgResetparamReqMethod* >(object);
  (void)_this;
}
void CfgResetparamReqMethod::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CfgResetparamReqMethod::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CfgResetparamReqMethod& CfgResetparamReqMethod::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CfgResetparamReqMethod_proto_2fcfg_2fcfg_2eproto.base);
  return *internal_default_instance();
}


void CfgResetparamReqMethod::Clear() {
// @@protoc_insertion_point(message_clear_start:CfgResetparamReqMethod)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      client_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      param_name_.ClearNonDefaultToEmpty();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CfgResetparamReqMethod::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string client_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_client_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CfgResetparamReqMethod.client_name");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string param_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_param_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CfgResetparamReqMethod.param_name");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CfgResetparamReqMethod::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CfgResetparamReqMethod)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string client_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_client_name().data(), static_cast<int>(this->_internal_client_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CfgResetparamReqMethod.client_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_client_name(), target);
  }

  // optional string param_name = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_param_name().data(), static_cast<int>(this->_internal_param_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CfgResetparamReqMethod.param_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_param_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CfgResetparamReqMethod)
  return target;
}

size_t CfgResetparamReqMethod::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CfgResetparamReqMethod)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string client_name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_client_name());
    }

    // optional string param_name = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_param_name());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CfgResetparamReqMethod::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CfgResetparamReqMethod)
  GOOGLE_DCHECK_NE(&from, this);
  const CfgResetparamReqMethod* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CfgResetparamReqMethod>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CfgResetparamReqMethod)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CfgResetparamReqMethod)
    MergeFrom(*source);
  }
}

void CfgResetparamReqMethod::MergeFrom(const CfgResetparamReqMethod& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CfgResetparamReqMethod)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_client_name(from._internal_client_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_param_name(from._internal_param_name());
    }
  }
}

void CfgResetparamReqMethod::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CfgResetparamReqMethod)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CfgResetparamReqMethod::CopyFrom(const CfgResetparamReqMethod& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CfgResetparamReqMethod)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CfgResetparamReqMethod::IsInitialized() const {
  return true;
}

void CfgResetparamReqMethod::InternalSwap(CfgResetparamReqMethod* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  client_name_.Swap(&other->client_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  param_name_.Swap(&other->param_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata CfgResetparamReqMethod::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CfgResetparamResMethod::InitAsDefaultInstance() {
}
class CfgResetparamResMethod::_Internal {
 public:
  using HasBits = decltype(std::declval<CfgResetparamResMethod>()._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CfgResetparamResMethod::CfgResetparamResMethod(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CfgResetparamResMethod)
}
CfgResetparamResMethod::CfgResetparamResMethod(const CfgResetparamResMethod& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:CfgResetparamResMethod)
}

void CfgResetparamResMethod::SharedCtor() {
  result_ = 0;
}

CfgResetparamResMethod::~CfgResetparamResMethod() {
  // @@protoc_insertion_point(destructor:CfgResetparamResMethod)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CfgResetparamResMethod::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CfgResetparamResMethod::ArenaDtor(void* object) {
  CfgResetparamResMethod* _this = reinterpret_cast< CfgResetparamResMethod* >(object);
  (void)_this;
}
void CfgResetparamResMethod::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CfgResetparamResMethod::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CfgResetparamResMethod& CfgResetparamResMethod::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CfgResetparamResMethod_proto_2fcfg_2fcfg_2eproto.base);
  return *internal_default_instance();
}


void CfgResetparamResMethod::Clear() {
// @@protoc_insertion_point(message_clear_start:CfgResetparamResMethod)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CfgResetparamResMethod::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_result(&has_bits);
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CfgResetparamResMethod::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CfgResetparamResMethod)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CfgResetparamResMethod)
  return target;
}

size_t CfgResetparamResMethod::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CfgResetparamResMethod)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int32 result = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CfgResetparamResMethod::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CfgResetparamResMethod)
  GOOGLE_DCHECK_NE(&from, this);
  const CfgResetparamResMethod* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CfgResetparamResMethod>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CfgResetparamResMethod)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CfgResetparamResMethod)
    MergeFrom(*source);
  }
}

void CfgResetparamResMethod::MergeFrom(const CfgResetparamResMethod& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CfgResetparamResMethod)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_result()) {
    _internal_set_result(from._internal_result());
  }
}

void CfgResetparamResMethod::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CfgResetparamResMethod)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CfgResetparamResMethod::CopyFrom(const CfgResetparamResMethod& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CfgResetparamResMethod)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CfgResetparamResMethod::IsInitialized() const {
  return true;
}

void CfgResetparamResMethod::InternalSwap(CfgResetparamResMethod* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CfgResetparamResMethod::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CfgMonitorparamReqMethod::InitAsDefaultInstance() {
}
class CfgMonitorparamReqMethod::_Internal {
 public:
  using HasBits = decltype(std::declval<CfgMonitorparamReqMethod>()._has_bits_);
  static void set_has_client_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_param_name(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CfgMonitorparamReqMethod::CfgMonitorparamReqMethod(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CfgMonitorparamReqMethod)
}
CfgMonitorparamReqMethod::CfgMonitorparamReqMethod(const CfgMonitorparamReqMethod& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  client_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_client_name()) {
    client_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_client_name(),
      GetArena());
  }
  param_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_param_name()) {
    param_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_param_name(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:CfgMonitorparamReqMethod)
}

void CfgMonitorparamReqMethod::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CfgMonitorparamReqMethod_proto_2fcfg_2fcfg_2eproto.base);
  client_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  param_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CfgMonitorparamReqMethod::~CfgMonitorparamReqMethod() {
  // @@protoc_insertion_point(destructor:CfgMonitorparamReqMethod)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CfgMonitorparamReqMethod::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  client_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  param_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CfgMonitorparamReqMethod::ArenaDtor(void* object) {
  CfgMonitorparamReqMethod* _this = reinterpret_cast< CfgMonitorparamReqMethod* >(object);
  (void)_this;
}
void CfgMonitorparamReqMethod::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CfgMonitorparamReqMethod::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CfgMonitorparamReqMethod& CfgMonitorparamReqMethod::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CfgMonitorparamReqMethod_proto_2fcfg_2fcfg_2eproto.base);
  return *internal_default_instance();
}


void CfgMonitorparamReqMethod::Clear() {
// @@protoc_insertion_point(message_clear_start:CfgMonitorparamReqMethod)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      client_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      param_name_.ClearNonDefaultToEmpty();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CfgMonitorparamReqMethod::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string client_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_client_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CfgMonitorparamReqMethod.client_name");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string param_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_param_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CfgMonitorparamReqMethod.param_name");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CfgMonitorparamReqMethod::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CfgMonitorparamReqMethod)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string client_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_client_name().data(), static_cast<int>(this->_internal_client_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CfgMonitorparamReqMethod.client_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_client_name(), target);
  }

  // optional string param_name = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_param_name().data(), static_cast<int>(this->_internal_param_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CfgMonitorparamReqMethod.param_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_param_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CfgMonitorparamReqMethod)
  return target;
}

size_t CfgMonitorparamReqMethod::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CfgMonitorparamReqMethod)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string client_name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_client_name());
    }

    // optional string param_name = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_param_name());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CfgMonitorparamReqMethod::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CfgMonitorparamReqMethod)
  GOOGLE_DCHECK_NE(&from, this);
  const CfgMonitorparamReqMethod* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CfgMonitorparamReqMethod>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CfgMonitorparamReqMethod)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CfgMonitorparamReqMethod)
    MergeFrom(*source);
  }
}

void CfgMonitorparamReqMethod::MergeFrom(const CfgMonitorparamReqMethod& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CfgMonitorparamReqMethod)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_client_name(from._internal_client_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_param_name(from._internal_param_name());
    }
  }
}

void CfgMonitorparamReqMethod::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CfgMonitorparamReqMethod)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CfgMonitorparamReqMethod::CopyFrom(const CfgMonitorparamReqMethod& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CfgMonitorparamReqMethod)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CfgMonitorparamReqMethod::IsInitialized() const {
  return true;
}

void CfgMonitorparamReqMethod::InternalSwap(CfgMonitorparamReqMethod* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  client_name_.Swap(&other->client_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  param_name_.Swap(&other->param_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata CfgMonitorparamReqMethod::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CfgMonitorparamResMethod::InitAsDefaultInstance() {
}
class CfgMonitorparamResMethod::_Internal {
 public:
  using HasBits = decltype(std::declval<CfgMonitorparamResMethod>()._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CfgMonitorparamResMethod::CfgMonitorparamResMethod(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CfgMonitorparamResMethod)
}
CfgMonitorparamResMethod::CfgMonitorparamResMethod(const CfgMonitorparamResMethod& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:CfgMonitorparamResMethod)
}

void CfgMonitorparamResMethod::SharedCtor() {
  result_ = 0;
}

CfgMonitorparamResMethod::~CfgMonitorparamResMethod() {
  // @@protoc_insertion_point(destructor:CfgMonitorparamResMethod)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CfgMonitorparamResMethod::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CfgMonitorparamResMethod::ArenaDtor(void* object) {
  CfgMonitorparamResMethod* _this = reinterpret_cast< CfgMonitorparamResMethod* >(object);
  (void)_this;
}
void CfgMonitorparamResMethod::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CfgMonitorparamResMethod::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CfgMonitorparamResMethod& CfgMonitorparamResMethod::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CfgMonitorparamResMethod_proto_2fcfg_2fcfg_2eproto.base);
  return *internal_default_instance();
}


void CfgMonitorparamResMethod::Clear() {
// @@protoc_insertion_point(message_clear_start:CfgMonitorparamResMethod)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CfgMonitorparamResMethod::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_result(&has_bits);
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CfgMonitorparamResMethod::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CfgMonitorparamResMethod)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CfgMonitorparamResMethod)
  return target;
}

size_t CfgMonitorparamResMethod::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CfgMonitorparamResMethod)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int32 result = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CfgMonitorparamResMethod::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CfgMonitorparamResMethod)
  GOOGLE_DCHECK_NE(&from, this);
  const CfgMonitorparamResMethod* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CfgMonitorparamResMethod>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CfgMonitorparamResMethod)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CfgMonitorparamResMethod)
    MergeFrom(*source);
  }
}

void CfgMonitorparamResMethod::MergeFrom(const CfgMonitorparamResMethod& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CfgMonitorparamResMethod)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_result()) {
    _internal_set_result(from._internal_result());
  }
}

void CfgMonitorparamResMethod::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CfgMonitorparamResMethod)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CfgMonitorparamResMethod::CopyFrom(const CfgMonitorparamResMethod& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CfgMonitorparamResMethod)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CfgMonitorparamResMethod::IsInitialized() const {
  return true;
}

void CfgMonitorparamResMethod::InternalSwap(CfgMonitorparamResMethod* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CfgMonitorparamResMethod::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CfgUnmonitorparamReqMethod::InitAsDefaultInstance() {
}
class CfgUnmonitorparamReqMethod::_Internal {
 public:
  using HasBits = decltype(std::declval<CfgUnmonitorparamReqMethod>()._has_bits_);
  static void set_has_client_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_param_name(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CfgUnmonitorparamReqMethod::CfgUnmonitorparamReqMethod(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CfgUnmonitorparamReqMethod)
}
CfgUnmonitorparamReqMethod::CfgUnmonitorparamReqMethod(const CfgUnmonitorparamReqMethod& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  client_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_client_name()) {
    client_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_client_name(),
      GetArena());
  }
  param_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_param_name()) {
    param_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_param_name(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:CfgUnmonitorparamReqMethod)
}

void CfgUnmonitorparamReqMethod::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CfgUnmonitorparamReqMethod_proto_2fcfg_2fcfg_2eproto.base);
  client_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  param_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CfgUnmonitorparamReqMethod::~CfgUnmonitorparamReqMethod() {
  // @@protoc_insertion_point(destructor:CfgUnmonitorparamReqMethod)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CfgUnmonitorparamReqMethod::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  client_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  param_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CfgUnmonitorparamReqMethod::ArenaDtor(void* object) {
  CfgUnmonitorparamReqMethod* _this = reinterpret_cast< CfgUnmonitorparamReqMethod* >(object);
  (void)_this;
}
void CfgUnmonitorparamReqMethod::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CfgUnmonitorparamReqMethod::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CfgUnmonitorparamReqMethod& CfgUnmonitorparamReqMethod::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CfgUnmonitorparamReqMethod_proto_2fcfg_2fcfg_2eproto.base);
  return *internal_default_instance();
}


void CfgUnmonitorparamReqMethod::Clear() {
// @@protoc_insertion_point(message_clear_start:CfgUnmonitorparamReqMethod)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      client_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      param_name_.ClearNonDefaultToEmpty();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CfgUnmonitorparamReqMethod::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string client_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_client_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CfgUnmonitorparamReqMethod.client_name");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string param_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_param_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CfgUnmonitorparamReqMethod.param_name");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CfgUnmonitorparamReqMethod::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CfgUnmonitorparamReqMethod)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string client_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_client_name().data(), static_cast<int>(this->_internal_client_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CfgUnmonitorparamReqMethod.client_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_client_name(), target);
  }

  // optional string param_name = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_param_name().data(), static_cast<int>(this->_internal_param_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CfgUnmonitorparamReqMethod.param_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_param_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CfgUnmonitorparamReqMethod)
  return target;
}

size_t CfgUnmonitorparamReqMethod::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CfgUnmonitorparamReqMethod)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string client_name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_client_name());
    }

    // optional string param_name = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_param_name());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CfgUnmonitorparamReqMethod::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CfgUnmonitorparamReqMethod)
  GOOGLE_DCHECK_NE(&from, this);
  const CfgUnmonitorparamReqMethod* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CfgUnmonitorparamReqMethod>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CfgUnmonitorparamReqMethod)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CfgUnmonitorparamReqMethod)
    MergeFrom(*source);
  }
}

void CfgUnmonitorparamReqMethod::MergeFrom(const CfgUnmonitorparamReqMethod& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CfgUnmonitorparamReqMethod)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_client_name(from._internal_client_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_param_name(from._internal_param_name());
    }
  }
}

void CfgUnmonitorparamReqMethod::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CfgUnmonitorparamReqMethod)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CfgUnmonitorparamReqMethod::CopyFrom(const CfgUnmonitorparamReqMethod& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CfgUnmonitorparamReqMethod)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CfgUnmonitorparamReqMethod::IsInitialized() const {
  return true;
}

void CfgUnmonitorparamReqMethod::InternalSwap(CfgUnmonitorparamReqMethod* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  client_name_.Swap(&other->client_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  param_name_.Swap(&other->param_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata CfgUnmonitorparamReqMethod::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CfgUnmonitorparamResMethod::InitAsDefaultInstance() {
}
class CfgUnmonitorparamResMethod::_Internal {
 public:
  using HasBits = decltype(std::declval<CfgUnmonitorparamResMethod>()._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CfgUnmonitorparamResMethod::CfgUnmonitorparamResMethod(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CfgUnmonitorparamResMethod)
}
CfgUnmonitorparamResMethod::CfgUnmonitorparamResMethod(const CfgUnmonitorparamResMethod& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:CfgUnmonitorparamResMethod)
}

void CfgUnmonitorparamResMethod::SharedCtor() {
  result_ = 0;
}

CfgUnmonitorparamResMethod::~CfgUnmonitorparamResMethod() {
  // @@protoc_insertion_point(destructor:CfgUnmonitorparamResMethod)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CfgUnmonitorparamResMethod::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CfgUnmonitorparamResMethod::ArenaDtor(void* object) {
  CfgUnmonitorparamResMethod* _this = reinterpret_cast< CfgUnmonitorparamResMethod* >(object);
  (void)_this;
}
void CfgUnmonitorparamResMethod::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CfgUnmonitorparamResMethod::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CfgUnmonitorparamResMethod& CfgUnmonitorparamResMethod::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CfgUnmonitorparamResMethod_proto_2fcfg_2fcfg_2eproto.base);
  return *internal_default_instance();
}


void CfgUnmonitorparamResMethod::Clear() {
// @@protoc_insertion_point(message_clear_start:CfgUnmonitorparamResMethod)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CfgUnmonitorparamResMethod::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_result(&has_bits);
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CfgUnmonitorparamResMethod::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CfgUnmonitorparamResMethod)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CfgUnmonitorparamResMethod)
  return target;
}

size_t CfgUnmonitorparamResMethod::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CfgUnmonitorparamResMethod)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int32 result = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CfgUnmonitorparamResMethod::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CfgUnmonitorparamResMethod)
  GOOGLE_DCHECK_NE(&from, this);
  const CfgUnmonitorparamResMethod* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CfgUnmonitorparamResMethod>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CfgUnmonitorparamResMethod)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CfgUnmonitorparamResMethod)
    MergeFrom(*source);
  }
}

void CfgUnmonitorparamResMethod::MergeFrom(const CfgUnmonitorparamResMethod& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CfgUnmonitorparamResMethod)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_result()) {
    _internal_set_result(from._internal_result());
  }
}

void CfgUnmonitorparamResMethod::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CfgUnmonitorparamResMethod)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CfgUnmonitorparamResMethod::CopyFrom(const CfgUnmonitorparamResMethod& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CfgUnmonitorparamResMethod)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CfgUnmonitorparamResMethod::IsInitialized() const {
  return true;
}

void CfgUnmonitorparamResMethod::InternalSwap(CfgUnmonitorparamResMethod* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CfgUnmonitorparamResMethod::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CfgDelparamReqMethod::InitAsDefaultInstance() {
}
class CfgDelparamReqMethod::_Internal {
 public:
  using HasBits = decltype(std::declval<CfgDelparamReqMethod>()._has_bits_);
  static void set_has_client_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_param_name(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CfgDelparamReqMethod::CfgDelparamReqMethod(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CfgDelparamReqMethod)
}
CfgDelparamReqMethod::CfgDelparamReqMethod(const CfgDelparamReqMethod& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  client_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_client_name()) {
    client_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_client_name(),
      GetArena());
  }
  param_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_param_name()) {
    param_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_param_name(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:CfgDelparamReqMethod)
}

void CfgDelparamReqMethod::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CfgDelparamReqMethod_proto_2fcfg_2fcfg_2eproto.base);
  client_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  param_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CfgDelparamReqMethod::~CfgDelparamReqMethod() {
  // @@protoc_insertion_point(destructor:CfgDelparamReqMethod)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CfgDelparamReqMethod::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  client_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  param_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CfgDelparamReqMethod::ArenaDtor(void* object) {
  CfgDelparamReqMethod* _this = reinterpret_cast< CfgDelparamReqMethod* >(object);
  (void)_this;
}
void CfgDelparamReqMethod::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CfgDelparamReqMethod::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CfgDelparamReqMethod& CfgDelparamReqMethod::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CfgDelparamReqMethod_proto_2fcfg_2fcfg_2eproto.base);
  return *internal_default_instance();
}


void CfgDelparamReqMethod::Clear() {
// @@protoc_insertion_point(message_clear_start:CfgDelparamReqMethod)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      client_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      param_name_.ClearNonDefaultToEmpty();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CfgDelparamReqMethod::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string client_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_client_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CfgDelparamReqMethod.client_name");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string param_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_param_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CfgDelparamReqMethod.param_name");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CfgDelparamReqMethod::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CfgDelparamReqMethod)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string client_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_client_name().data(), static_cast<int>(this->_internal_client_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CfgDelparamReqMethod.client_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_client_name(), target);
  }

  // optional string param_name = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_param_name().data(), static_cast<int>(this->_internal_param_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CfgDelparamReqMethod.param_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_param_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CfgDelparamReqMethod)
  return target;
}

size_t CfgDelparamReqMethod::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CfgDelparamReqMethod)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string client_name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_client_name());
    }

    // optional string param_name = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_param_name());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CfgDelparamReqMethod::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CfgDelparamReqMethod)
  GOOGLE_DCHECK_NE(&from, this);
  const CfgDelparamReqMethod* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CfgDelparamReqMethod>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CfgDelparamReqMethod)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CfgDelparamReqMethod)
    MergeFrom(*source);
  }
}

void CfgDelparamReqMethod::MergeFrom(const CfgDelparamReqMethod& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CfgDelparamReqMethod)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_client_name(from._internal_client_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_param_name(from._internal_param_name());
    }
  }
}

void CfgDelparamReqMethod::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CfgDelparamReqMethod)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CfgDelparamReqMethod::CopyFrom(const CfgDelparamReqMethod& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CfgDelparamReqMethod)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CfgDelparamReqMethod::IsInitialized() const {
  return true;
}

void CfgDelparamReqMethod::InternalSwap(CfgDelparamReqMethod* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  client_name_.Swap(&other->client_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  param_name_.Swap(&other->param_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata CfgDelparamReqMethod::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CfgDelparamResMethod::InitAsDefaultInstance() {
}
class CfgDelparamResMethod::_Internal {
 public:
  using HasBits = decltype(std::declval<CfgDelparamResMethod>()._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CfgDelparamResMethod::CfgDelparamResMethod(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CfgDelparamResMethod)
}
CfgDelparamResMethod::CfgDelparamResMethod(const CfgDelparamResMethod& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:CfgDelparamResMethod)
}

void CfgDelparamResMethod::SharedCtor() {
  result_ = 0;
}

CfgDelparamResMethod::~CfgDelparamResMethod() {
  // @@protoc_insertion_point(destructor:CfgDelparamResMethod)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CfgDelparamResMethod::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CfgDelparamResMethod::ArenaDtor(void* object) {
  CfgDelparamResMethod* _this = reinterpret_cast< CfgDelparamResMethod* >(object);
  (void)_this;
}
void CfgDelparamResMethod::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CfgDelparamResMethod::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CfgDelparamResMethod& CfgDelparamResMethod::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CfgDelparamResMethod_proto_2fcfg_2fcfg_2eproto.base);
  return *internal_default_instance();
}


void CfgDelparamResMethod::Clear() {
// @@protoc_insertion_point(message_clear_start:CfgDelparamResMethod)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CfgDelparamResMethod::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_result(&has_bits);
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CfgDelparamResMethod::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CfgDelparamResMethod)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CfgDelparamResMethod)
  return target;
}

size_t CfgDelparamResMethod::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CfgDelparamResMethod)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int32 result = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CfgDelparamResMethod::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CfgDelparamResMethod)
  GOOGLE_DCHECK_NE(&from, this);
  const CfgDelparamResMethod* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CfgDelparamResMethod>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CfgDelparamResMethod)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CfgDelparamResMethod)
    MergeFrom(*source);
  }
}

void CfgDelparamResMethod::MergeFrom(const CfgDelparamResMethod& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CfgDelparamResMethod)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_result()) {
    _internal_set_result(from._internal_result());
  }
}

void CfgDelparamResMethod::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CfgDelparamResMethod)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CfgDelparamResMethod::CopyFrom(const CfgDelparamResMethod& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CfgDelparamResMethod)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CfgDelparamResMethod::IsInitialized() const {
  return true;
}

void CfgDelparamResMethod::InternalSwap(CfgDelparamResMethod* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CfgDelparamResMethod::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CfgParamupdatedataresReqMethod::InitAsDefaultInstance() {
}
class CfgParamupdatedataresReqMethod::_Internal {
 public:
  using HasBits = decltype(std::declval<CfgParamupdatedataresReqMethod>()._has_bits_);
  static void set_has_client_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_param_name(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CfgParamupdatedataresReqMethod::CfgParamupdatedataresReqMethod(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CfgParamupdatedataresReqMethod)
}
CfgParamupdatedataresReqMethod::CfgParamupdatedataresReqMethod(const CfgParamupdatedataresReqMethod& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  client_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_client_name()) {
    client_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_client_name(),
      GetArena());
  }
  param_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_param_name()) {
    param_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_param_name(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:CfgParamupdatedataresReqMethod)
}

void CfgParamupdatedataresReqMethod::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CfgParamupdatedataresReqMethod_proto_2fcfg_2fcfg_2eproto.base);
  client_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  param_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CfgParamupdatedataresReqMethod::~CfgParamupdatedataresReqMethod() {
  // @@protoc_insertion_point(destructor:CfgParamupdatedataresReqMethod)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CfgParamupdatedataresReqMethod::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  client_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  param_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CfgParamupdatedataresReqMethod::ArenaDtor(void* object) {
  CfgParamupdatedataresReqMethod* _this = reinterpret_cast< CfgParamupdatedataresReqMethod* >(object);
  (void)_this;
}
void CfgParamupdatedataresReqMethod::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CfgParamupdatedataresReqMethod::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CfgParamupdatedataresReqMethod& CfgParamupdatedataresReqMethod::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CfgParamupdatedataresReqMethod_proto_2fcfg_2fcfg_2eproto.base);
  return *internal_default_instance();
}


void CfgParamupdatedataresReqMethod::Clear() {
// @@protoc_insertion_point(message_clear_start:CfgParamupdatedataresReqMethod)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      client_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      param_name_.ClearNonDefaultToEmpty();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CfgParamupdatedataresReqMethod::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string client_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_client_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CfgParamupdatedataresReqMethod.client_name");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string param_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_param_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CfgParamupdatedataresReqMethod.param_name");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CfgParamupdatedataresReqMethod::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CfgParamupdatedataresReqMethod)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string client_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_client_name().data(), static_cast<int>(this->_internal_client_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CfgParamupdatedataresReqMethod.client_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_client_name(), target);
  }

  // optional string param_name = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_param_name().data(), static_cast<int>(this->_internal_param_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CfgParamupdatedataresReqMethod.param_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_param_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CfgParamupdatedataresReqMethod)
  return target;
}

size_t CfgParamupdatedataresReqMethod::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CfgParamupdatedataresReqMethod)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string client_name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_client_name());
    }

    // optional string param_name = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_param_name());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CfgParamupdatedataresReqMethod::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CfgParamupdatedataresReqMethod)
  GOOGLE_DCHECK_NE(&from, this);
  const CfgParamupdatedataresReqMethod* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CfgParamupdatedataresReqMethod>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CfgParamupdatedataresReqMethod)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CfgParamupdatedataresReqMethod)
    MergeFrom(*source);
  }
}

void CfgParamupdatedataresReqMethod::MergeFrom(const CfgParamupdatedataresReqMethod& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CfgParamupdatedataresReqMethod)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_client_name(from._internal_client_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_param_name(from._internal_param_name());
    }
  }
}

void CfgParamupdatedataresReqMethod::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CfgParamupdatedataresReqMethod)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CfgParamupdatedataresReqMethod::CopyFrom(const CfgParamupdatedataresReqMethod& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CfgParamupdatedataresReqMethod)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CfgParamupdatedataresReqMethod::IsInitialized() const {
  return true;
}

void CfgParamupdatedataresReqMethod::InternalSwap(CfgParamupdatedataresReqMethod* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  client_name_.Swap(&other->client_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  param_name_.Swap(&other->param_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata CfgParamupdatedataresReqMethod::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CfgParamupdatedataresResMethod::InitAsDefaultInstance() {
}
class CfgParamupdatedataresResMethod::_Internal {
 public:
  using HasBits = decltype(std::declval<CfgParamupdatedataresResMethod>()._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CfgParamupdatedataresResMethod::CfgParamupdatedataresResMethod(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CfgParamupdatedataresResMethod)
}
CfgParamupdatedataresResMethod::CfgParamupdatedataresResMethod(const CfgParamupdatedataresResMethod& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:CfgParamupdatedataresResMethod)
}

void CfgParamupdatedataresResMethod::SharedCtor() {
  result_ = 0;
}

CfgParamupdatedataresResMethod::~CfgParamupdatedataresResMethod() {
  // @@protoc_insertion_point(destructor:CfgParamupdatedataresResMethod)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CfgParamupdatedataresResMethod::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CfgParamupdatedataresResMethod::ArenaDtor(void* object) {
  CfgParamupdatedataresResMethod* _this = reinterpret_cast< CfgParamupdatedataresResMethod* >(object);
  (void)_this;
}
void CfgParamupdatedataresResMethod::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CfgParamupdatedataresResMethod::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CfgParamupdatedataresResMethod& CfgParamupdatedataresResMethod::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CfgParamupdatedataresResMethod_proto_2fcfg_2fcfg_2eproto.base);
  return *internal_default_instance();
}


void CfgParamupdatedataresResMethod::Clear() {
// @@protoc_insertion_point(message_clear_start:CfgParamupdatedataresResMethod)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CfgParamupdatedataresResMethod::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_result(&has_bits);
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CfgParamupdatedataresResMethod::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CfgParamupdatedataresResMethod)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CfgParamupdatedataresResMethod)
  return target;
}

size_t CfgParamupdatedataresResMethod::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CfgParamupdatedataresResMethod)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int32 result = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CfgParamupdatedataresResMethod::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CfgParamupdatedataresResMethod)
  GOOGLE_DCHECK_NE(&from, this);
  const CfgParamupdatedataresResMethod* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CfgParamupdatedataresResMethod>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CfgParamupdatedataresResMethod)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CfgParamupdatedataresResMethod)
    MergeFrom(*source);
  }
}

void CfgParamupdatedataresResMethod::MergeFrom(const CfgParamupdatedataresResMethod& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CfgParamupdatedataresResMethod)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_result()) {
    _internal_set_result(from._internal_result());
  }
}

void CfgParamupdatedataresResMethod::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CfgParamupdatedataresResMethod)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CfgParamupdatedataresResMethod::CopyFrom(const CfgParamupdatedataresResMethod& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CfgParamupdatedataresResMethod)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CfgParamupdatedataresResMethod::IsInitialized() const {
  return true;
}

void CfgParamupdatedataresResMethod::InternalSwap(CfgParamupdatedataresResMethod* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CfgParamupdatedataresResMethod::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CfgGetmonitorclientsReqMethod::InitAsDefaultInstance() {
}
class CfgGetmonitorclientsReqMethod::_Internal {
 public:
  using HasBits = decltype(std::declval<CfgGetmonitorclientsReqMethod>()._has_bits_);
  static void set_has_client_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_param_name(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CfgGetmonitorclientsReqMethod::CfgGetmonitorclientsReqMethod(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CfgGetmonitorclientsReqMethod)
}
CfgGetmonitorclientsReqMethod::CfgGetmonitorclientsReqMethod(const CfgGetmonitorclientsReqMethod& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  client_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_client_name()) {
    client_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_client_name(),
      GetArena());
  }
  param_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_param_name()) {
    param_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_param_name(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:CfgGetmonitorclientsReqMethod)
}

void CfgGetmonitorclientsReqMethod::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CfgGetmonitorclientsReqMethod_proto_2fcfg_2fcfg_2eproto.base);
  client_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  param_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CfgGetmonitorclientsReqMethod::~CfgGetmonitorclientsReqMethod() {
  // @@protoc_insertion_point(destructor:CfgGetmonitorclientsReqMethod)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CfgGetmonitorclientsReqMethod::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  client_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  param_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CfgGetmonitorclientsReqMethod::ArenaDtor(void* object) {
  CfgGetmonitorclientsReqMethod* _this = reinterpret_cast< CfgGetmonitorclientsReqMethod* >(object);
  (void)_this;
}
void CfgGetmonitorclientsReqMethod::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CfgGetmonitorclientsReqMethod::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CfgGetmonitorclientsReqMethod& CfgGetmonitorclientsReqMethod::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CfgGetmonitorclientsReqMethod_proto_2fcfg_2fcfg_2eproto.base);
  return *internal_default_instance();
}


void CfgGetmonitorclientsReqMethod::Clear() {
// @@protoc_insertion_point(message_clear_start:CfgGetmonitorclientsReqMethod)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      client_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      param_name_.ClearNonDefaultToEmpty();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CfgGetmonitorclientsReqMethod::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string client_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_client_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CfgGetmonitorclientsReqMethod.client_name");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string param_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_param_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CfgGetmonitorclientsReqMethod.param_name");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CfgGetmonitorclientsReqMethod::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CfgGetmonitorclientsReqMethod)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string client_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_client_name().data(), static_cast<int>(this->_internal_client_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CfgGetmonitorclientsReqMethod.client_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_client_name(), target);
  }

  // optional string param_name = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_param_name().data(), static_cast<int>(this->_internal_param_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CfgGetmonitorclientsReqMethod.param_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_param_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CfgGetmonitorclientsReqMethod)
  return target;
}

size_t CfgGetmonitorclientsReqMethod::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CfgGetmonitorclientsReqMethod)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string client_name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_client_name());
    }

    // optional string param_name = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_param_name());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CfgGetmonitorclientsReqMethod::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CfgGetmonitorclientsReqMethod)
  GOOGLE_DCHECK_NE(&from, this);
  const CfgGetmonitorclientsReqMethod* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CfgGetmonitorclientsReqMethod>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CfgGetmonitorclientsReqMethod)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CfgGetmonitorclientsReqMethod)
    MergeFrom(*source);
  }
}

void CfgGetmonitorclientsReqMethod::MergeFrom(const CfgGetmonitorclientsReqMethod& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CfgGetmonitorclientsReqMethod)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_client_name(from._internal_client_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_param_name(from._internal_param_name());
    }
  }
}

void CfgGetmonitorclientsReqMethod::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CfgGetmonitorclientsReqMethod)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CfgGetmonitorclientsReqMethod::CopyFrom(const CfgGetmonitorclientsReqMethod& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CfgGetmonitorclientsReqMethod)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CfgGetmonitorclientsReqMethod::IsInitialized() const {
  return true;
}

void CfgGetmonitorclientsReqMethod::InternalSwap(CfgGetmonitorclientsReqMethod* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  client_name_.Swap(&other->client_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  param_name_.Swap(&other->param_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata CfgGetmonitorclientsReqMethod::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CfgGetmonitorclientsResMethod::InitAsDefaultInstance() {
}
class CfgGetmonitorclientsResMethod::_Internal {
 public:
  using HasBits = decltype(std::declval<CfgGetmonitorclientsResMethod>()._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CfgGetmonitorclientsResMethod::CfgGetmonitorclientsResMethod(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  monitor_clients_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CfgGetmonitorclientsResMethod)
}
CfgGetmonitorclientsResMethod::CfgGetmonitorclientsResMethod(const CfgGetmonitorclientsResMethod& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      monitor_clients_(from.monitor_clients_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:CfgGetmonitorclientsResMethod)
}

void CfgGetmonitorclientsResMethod::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CfgGetmonitorclientsResMethod_proto_2fcfg_2fcfg_2eproto.base);
  result_ = 0;
}

CfgGetmonitorclientsResMethod::~CfgGetmonitorclientsResMethod() {
  // @@protoc_insertion_point(destructor:CfgGetmonitorclientsResMethod)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CfgGetmonitorclientsResMethod::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CfgGetmonitorclientsResMethod::ArenaDtor(void* object) {
  CfgGetmonitorclientsResMethod* _this = reinterpret_cast< CfgGetmonitorclientsResMethod* >(object);
  (void)_this;
}
void CfgGetmonitorclientsResMethod::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CfgGetmonitorclientsResMethod::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CfgGetmonitorclientsResMethod& CfgGetmonitorclientsResMethod::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CfgGetmonitorclientsResMethod_proto_2fcfg_2fcfg_2eproto.base);
  return *internal_default_instance();
}


void CfgGetmonitorclientsResMethod::Clear() {
// @@protoc_insertion_point(message_clear_start:CfgGetmonitorclientsResMethod)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  monitor_clients_.Clear();
  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CfgGetmonitorclientsResMethod::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string monitor_clients = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_monitor_clients();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            #ifndef NDEBUG
            ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CfgGetmonitorclientsResMethod.monitor_clients");
            #endif  // !NDEBUG
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // optional int32 result = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_result(&has_bits);
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CfgGetmonitorclientsResMethod::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CfgGetmonitorclientsResMethod)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string monitor_clients = 1;
  for (int i = 0, n = this->_internal_monitor_clients_size(); i < n; i++) {
    const auto& s = this->_internal_monitor_clients(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CfgGetmonitorclientsResMethod.monitor_clients");
    target = stream->WriteString(1, s, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CfgGetmonitorclientsResMethod)
  return target;
}

size_t CfgGetmonitorclientsResMethod::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CfgGetmonitorclientsResMethod)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string monitor_clients = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(monitor_clients_.size());
  for (int i = 0, n = monitor_clients_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      monitor_clients_.Get(i));
  }

  // optional int32 result = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CfgGetmonitorclientsResMethod::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CfgGetmonitorclientsResMethod)
  GOOGLE_DCHECK_NE(&from, this);
  const CfgGetmonitorclientsResMethod* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CfgGetmonitorclientsResMethod>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CfgGetmonitorclientsResMethod)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CfgGetmonitorclientsResMethod)
    MergeFrom(*source);
  }
}

void CfgGetmonitorclientsResMethod::MergeFrom(const CfgGetmonitorclientsResMethod& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CfgGetmonitorclientsResMethod)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  monitor_clients_.MergeFrom(from.monitor_clients_);
  if (from._internal_has_result()) {
    _internal_set_result(from._internal_result());
  }
}

void CfgGetmonitorclientsResMethod::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CfgGetmonitorclientsResMethod)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CfgGetmonitorclientsResMethod::CopyFrom(const CfgGetmonitorclientsResMethod& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CfgGetmonitorclientsResMethod)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CfgGetmonitorclientsResMethod::IsInitialized() const {
  return true;
}

void CfgGetmonitorclientsResMethod::InternalSwap(CfgGetmonitorclientsResMethod* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  monitor_clients_.InternalSwap(&other->monitor_clients_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CfgGetmonitorclientsResMethod::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CfgGetclientinfolistReqMethod::InitAsDefaultInstance() {
}
class CfgGetclientinfolistReqMethod::_Internal {
 public:
  using HasBits = decltype(std::declval<CfgGetclientinfolistReqMethod>()._has_bits_);
  static void set_has_client_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CfgGetclientinfolistReqMethod::CfgGetclientinfolistReqMethod(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CfgGetclientinfolistReqMethod)
}
CfgGetclientinfolistReqMethod::CfgGetclientinfolistReqMethod(const CfgGetclientinfolistReqMethod& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  client_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_client_name()) {
    client_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_client_name(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:CfgGetclientinfolistReqMethod)
}

void CfgGetclientinfolistReqMethod::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CfgGetclientinfolistReqMethod_proto_2fcfg_2fcfg_2eproto.base);
  client_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CfgGetclientinfolistReqMethod::~CfgGetclientinfolistReqMethod() {
  // @@protoc_insertion_point(destructor:CfgGetclientinfolistReqMethod)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CfgGetclientinfolistReqMethod::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  client_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CfgGetclientinfolistReqMethod::ArenaDtor(void* object) {
  CfgGetclientinfolistReqMethod* _this = reinterpret_cast< CfgGetclientinfolistReqMethod* >(object);
  (void)_this;
}
void CfgGetclientinfolistReqMethod::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CfgGetclientinfolistReqMethod::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CfgGetclientinfolistReqMethod& CfgGetclientinfolistReqMethod::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CfgGetclientinfolistReqMethod_proto_2fcfg_2fcfg_2eproto.base);
  return *internal_default_instance();
}


void CfgGetclientinfolistReqMethod::Clear() {
// @@protoc_insertion_point(message_clear_start:CfgGetclientinfolistReqMethod)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    client_name_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CfgGetclientinfolistReqMethod::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string client_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_client_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CfgGetclientinfolistReqMethod.client_name");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CfgGetclientinfolistReqMethod::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CfgGetclientinfolistReqMethod)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string client_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_client_name().data(), static_cast<int>(this->_internal_client_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CfgGetclientinfolistReqMethod.client_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_client_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CfgGetclientinfolistReqMethod)
  return target;
}

size_t CfgGetclientinfolistReqMethod::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CfgGetclientinfolistReqMethod)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string client_name = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_client_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CfgGetclientinfolistReqMethod::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CfgGetclientinfolistReqMethod)
  GOOGLE_DCHECK_NE(&from, this);
  const CfgGetclientinfolistReqMethod* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CfgGetclientinfolistReqMethod>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CfgGetclientinfolistReqMethod)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CfgGetclientinfolistReqMethod)
    MergeFrom(*source);
  }
}

void CfgGetclientinfolistReqMethod::MergeFrom(const CfgGetclientinfolistReqMethod& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CfgGetclientinfolistReqMethod)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_client_name()) {
    _internal_set_client_name(from._internal_client_name());
  }
}

void CfgGetclientinfolistReqMethod::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CfgGetclientinfolistReqMethod)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CfgGetclientinfolistReqMethod::CopyFrom(const CfgGetclientinfolistReqMethod& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CfgGetclientinfolistReqMethod)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CfgGetclientinfolistReqMethod::IsInitialized() const {
  return true;
}

void CfgGetclientinfolistReqMethod::InternalSwap(CfgGetclientinfolistReqMethod* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  client_name_.Swap(&other->client_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata CfgGetclientinfolistReqMethod::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CfgMethodEventInfo::InitAsDefaultInstance() {
}
class CfgMethodEventInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<CfgMethodEventInfo>()._has_bits_);
  static void set_has_type(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_param_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_count(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

CfgMethodEventInfo::CfgMethodEventInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CfgMethodEventInfo)
}
CfgMethodEventInfo::CfgMethodEventInfo(const CfgMethodEventInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  param_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_param_name()) {
    param_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_param_name(),
      GetArena());
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&type_)) + sizeof(count_));
  // @@protoc_insertion_point(copy_constructor:CfgMethodEventInfo)
}

void CfgMethodEventInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CfgMethodEventInfo_proto_2fcfg_2fcfg_2eproto.base);
  param_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&type_)) + sizeof(count_));
}

CfgMethodEventInfo::~CfgMethodEventInfo() {
  // @@protoc_insertion_point(destructor:CfgMethodEventInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CfgMethodEventInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  param_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CfgMethodEventInfo::ArenaDtor(void* object) {
  CfgMethodEventInfo* _this = reinterpret_cast< CfgMethodEventInfo* >(object);
  (void)_this;
}
void CfgMethodEventInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CfgMethodEventInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CfgMethodEventInfo& CfgMethodEventInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CfgMethodEventInfo_proto_2fcfg_2fcfg_2eproto.base);
  return *internal_default_instance();
}


void CfgMethodEventInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CfgMethodEventInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    param_name_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&count_) -
        reinterpret_cast<char*>(&type_)) + sizeof(count_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CfgMethodEventInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_type(&has_bits);
          type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string param_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_param_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CfgMethodEventInfo.param_name");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 count = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_count(&has_bits);
          count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CfgMethodEventInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CfgMethodEventInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 type = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_type(), target);
  }

  // optional string param_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_param_name().data(), static_cast<int>(this->_internal_param_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CfgMethodEventInfo.param_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_param_name(), target);
  }

  // optional int32 count = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CfgMethodEventInfo)
  return target;
}

size_t CfgMethodEventInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CfgMethodEventInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string param_name = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_param_name());
    }

    // optional int32 type = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_type());
    }

    // optional int32 count = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_count());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CfgMethodEventInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CfgMethodEventInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CfgMethodEventInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CfgMethodEventInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CfgMethodEventInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CfgMethodEventInfo)
    MergeFrom(*source);
  }
}

void CfgMethodEventInfo::MergeFrom(const CfgMethodEventInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CfgMethodEventInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_param_name(from._internal_param_name());
    }
    if (cached_has_bits & 0x00000002u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00000004u) {
      count_ = from.count_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CfgMethodEventInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CfgMethodEventInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CfgMethodEventInfo::CopyFrom(const CfgMethodEventInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CfgMethodEventInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CfgMethodEventInfo::IsInitialized() const {
  return true;
}

void CfgMethodEventInfo::InternalSwap(CfgMethodEventInfo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  param_name_.Swap(&other->param_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CfgMethodEventInfo, count_)
      + sizeof(CfgMethodEventInfo::count_)
      - PROTOBUF_FIELD_OFFSET(CfgMethodEventInfo, type_)>(
          reinterpret_cast<char*>(&type_),
          reinterpret_cast<char*>(&other->type_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CfgMethodEventInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CfgClientInfo::InitAsDefaultInstance() {
}
class CfgClientInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<CfgClientInfo>()._has_bits_);
  static void set_has_client_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_running_status(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_start_time(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_end_time(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

CfgClientInfo::CfgClientInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  monitor_params_(arena),
  methodevent_info_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CfgClientInfo)
}
CfgClientInfo::CfgClientInfo(const CfgClientInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      monitor_params_(from.monitor_params_),
      methodevent_info_(from.methodevent_info_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  client_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_client_name()) {
    client_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_client_name(),
      GetArena());
  }
  start_time_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_start_time()) {
    start_time_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_start_time(),
      GetArena());
  }
  end_time_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_end_time()) {
    end_time_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_end_time(),
      GetArena());
  }
  running_status_ = from.running_status_;
  // @@protoc_insertion_point(copy_constructor:CfgClientInfo)
}

void CfgClientInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CfgClientInfo_proto_2fcfg_2fcfg_2eproto.base);
  client_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  start_time_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  end_time_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  running_status_ = 0;
}

CfgClientInfo::~CfgClientInfo() {
  // @@protoc_insertion_point(destructor:CfgClientInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CfgClientInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  client_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  start_time_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  end_time_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CfgClientInfo::ArenaDtor(void* object) {
  CfgClientInfo* _this = reinterpret_cast< CfgClientInfo* >(object);
  (void)_this;
}
void CfgClientInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CfgClientInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CfgClientInfo& CfgClientInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CfgClientInfo_proto_2fcfg_2fcfg_2eproto.base);
  return *internal_default_instance();
}


void CfgClientInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CfgClientInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  monitor_params_.Clear();
  methodevent_info_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      client_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      start_time_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      end_time_.ClearNonDefaultToEmpty();
    }
  }
  running_status_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CfgClientInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string client_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_client_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CfgClientInfo.client_name");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string monitor_params = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_monitor_params();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            #ifndef NDEBUG
            ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CfgClientInfo.monitor_params");
            #endif  // !NDEBUG
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // optional int32 running_status = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_running_status(&has_bits);
          running_status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string start_time = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_start_time();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CfgClientInfo.start_time");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string end_time = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_end_time();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CfgClientInfo.end_time");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .CfgMethodEventInfo methodevent_info = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_methodevent_info(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CfgClientInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CfgClientInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string client_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_client_name().data(), static_cast<int>(this->_internal_client_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CfgClientInfo.client_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_client_name(), target);
  }

  // repeated string monitor_params = 2;
  for (int i = 0, n = this->_internal_monitor_params_size(); i < n; i++) {
    const auto& s = this->_internal_monitor_params(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CfgClientInfo.monitor_params");
    target = stream->WriteString(2, s, target);
  }

  // optional int32 running_status = 3;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_running_status(), target);
  }

  // optional string start_time = 4;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_start_time().data(), static_cast<int>(this->_internal_start_time().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CfgClientInfo.start_time");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_start_time(), target);
  }

  // optional string end_time = 5;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_end_time().data(), static_cast<int>(this->_internal_end_time().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CfgClientInfo.end_time");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_end_time(), target);
  }

  // repeated .CfgMethodEventInfo methodevent_info = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_methodevent_info_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, this->_internal_methodevent_info(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CfgClientInfo)
  return target;
}

size_t CfgClientInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CfgClientInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string monitor_params = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(monitor_params_.size());
  for (int i = 0, n = monitor_params_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      monitor_params_.Get(i));
  }

  // repeated .CfgMethodEventInfo methodevent_info = 6;
  total_size += 1UL * this->_internal_methodevent_info_size();
  for (const auto& msg : this->methodevent_info_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string client_name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_client_name());
    }

    // optional string start_time = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_start_time());
    }

    // optional string end_time = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_end_time());
    }

    // optional int32 running_status = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_running_status());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CfgClientInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CfgClientInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CfgClientInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CfgClientInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CfgClientInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CfgClientInfo)
    MergeFrom(*source);
  }
}

void CfgClientInfo::MergeFrom(const CfgClientInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CfgClientInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  monitor_params_.MergeFrom(from.monitor_params_);
  methodevent_info_.MergeFrom(from.methodevent_info_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_client_name(from._internal_client_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_start_time(from._internal_start_time());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_set_end_time(from._internal_end_time());
    }
    if (cached_has_bits & 0x00000008u) {
      running_status_ = from.running_status_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CfgClientInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CfgClientInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CfgClientInfo::CopyFrom(const CfgClientInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CfgClientInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CfgClientInfo::IsInitialized() const {
  return true;
}

void CfgClientInfo::InternalSwap(CfgClientInfo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  monitor_params_.InternalSwap(&other->monitor_params_);
  methodevent_info_.InternalSwap(&other->methodevent_info_);
  client_name_.Swap(&other->client_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  start_time_.Swap(&other->start_time_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  end_time_.Swap(&other->end_time_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(running_status_, other->running_status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CfgClientInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CfgGetclientinfolistResMethod::InitAsDefaultInstance() {
}
class CfgGetclientinfolistResMethod::_Internal {
 public:
  using HasBits = decltype(std::declval<CfgGetclientinfolistResMethod>()._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CfgGetclientinfolistResMethod::CfgGetclientinfolistResMethod(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  clientlist_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CfgGetclientinfolistResMethod)
}
CfgGetclientinfolistResMethod::CfgGetclientinfolistResMethod(const CfgGetclientinfolistResMethod& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      clientlist_(from.clientlist_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:CfgGetclientinfolistResMethod)
}

void CfgGetclientinfolistResMethod::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CfgGetclientinfolistResMethod_proto_2fcfg_2fcfg_2eproto.base);
  result_ = 0;
}

CfgGetclientinfolistResMethod::~CfgGetclientinfolistResMethod() {
  // @@protoc_insertion_point(destructor:CfgGetclientinfolistResMethod)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CfgGetclientinfolistResMethod::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CfgGetclientinfolistResMethod::ArenaDtor(void* object) {
  CfgGetclientinfolistResMethod* _this = reinterpret_cast< CfgGetclientinfolistResMethod* >(object);
  (void)_this;
}
void CfgGetclientinfolistResMethod::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CfgGetclientinfolistResMethod::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CfgGetclientinfolistResMethod& CfgGetclientinfolistResMethod::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CfgGetclientinfolistResMethod_proto_2fcfg_2fcfg_2eproto.base);
  return *internal_default_instance();
}


void CfgGetclientinfolistResMethod::Clear() {
// @@protoc_insertion_point(message_clear_start:CfgGetclientinfolistResMethod)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clientlist_.Clear();
  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CfgGetclientinfolistResMethod::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .CfgClientInfo clientlist = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_clientlist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // optional int32 result = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_result(&has_bits);
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CfgGetclientinfolistResMethod::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CfgGetclientinfolistResMethod)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CfgClientInfo clientlist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_clientlist_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_clientlist(i), target, stream);
  }

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CfgGetclientinfolistResMethod)
  return target;
}

size_t CfgGetclientinfolistResMethod::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CfgGetclientinfolistResMethod)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CfgClientInfo clientlist = 1;
  total_size += 1UL * this->_internal_clientlist_size();
  for (const auto& msg : this->clientlist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional int32 result = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CfgGetclientinfolistResMethod::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CfgGetclientinfolistResMethod)
  GOOGLE_DCHECK_NE(&from, this);
  const CfgGetclientinfolistResMethod* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CfgGetclientinfolistResMethod>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CfgGetclientinfolistResMethod)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CfgGetclientinfolistResMethod)
    MergeFrom(*source);
  }
}

void CfgGetclientinfolistResMethod::MergeFrom(const CfgGetclientinfolistResMethod& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CfgGetclientinfolistResMethod)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  clientlist_.MergeFrom(from.clientlist_);
  if (from._internal_has_result()) {
    _internal_set_result(from._internal_result());
  }
}

void CfgGetclientinfolistResMethod::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CfgGetclientinfolistResMethod)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CfgGetclientinfolistResMethod::CopyFrom(const CfgGetclientinfolistResMethod& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CfgGetclientinfolistResMethod)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CfgGetclientinfolistResMethod::IsInitialized() const {
  return true;
}

void CfgGetclientinfolistResMethod::InternalSwap(CfgGetclientinfolistResMethod* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  clientlist_.InternalSwap(&other->clientlist_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CfgGetclientinfolistResMethod::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CfgGetparaminfolistReqMethod::InitAsDefaultInstance() {
}
class CfgGetparaminfolistReqMethod::_Internal {
 public:
  using HasBits = decltype(std::declval<CfgGetparaminfolistReqMethod>()._has_bits_);
  static void set_has_client_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CfgGetparaminfolistReqMethod::CfgGetparaminfolistReqMethod(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CfgGetparaminfolistReqMethod)
}
CfgGetparaminfolistReqMethod::CfgGetparaminfolistReqMethod(const CfgGetparaminfolistReqMethod& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  client_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_client_name()) {
    client_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_client_name(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:CfgGetparaminfolistReqMethod)
}

void CfgGetparaminfolistReqMethod::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CfgGetparaminfolistReqMethod_proto_2fcfg_2fcfg_2eproto.base);
  client_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CfgGetparaminfolistReqMethod::~CfgGetparaminfolistReqMethod() {
  // @@protoc_insertion_point(destructor:CfgGetparaminfolistReqMethod)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CfgGetparaminfolistReqMethod::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  client_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CfgGetparaminfolistReqMethod::ArenaDtor(void* object) {
  CfgGetparaminfolistReqMethod* _this = reinterpret_cast< CfgGetparaminfolistReqMethod* >(object);
  (void)_this;
}
void CfgGetparaminfolistReqMethod::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CfgGetparaminfolistReqMethod::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CfgGetparaminfolistReqMethod& CfgGetparaminfolistReqMethod::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CfgGetparaminfolistReqMethod_proto_2fcfg_2fcfg_2eproto.base);
  return *internal_default_instance();
}


void CfgGetparaminfolistReqMethod::Clear() {
// @@protoc_insertion_point(message_clear_start:CfgGetparaminfolistReqMethod)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    client_name_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CfgGetparaminfolistReqMethod::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string client_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_client_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CfgGetparaminfolistReqMethod.client_name");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CfgGetparaminfolistReqMethod::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CfgGetparaminfolistReqMethod)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string client_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_client_name().data(), static_cast<int>(this->_internal_client_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CfgGetparaminfolistReqMethod.client_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_client_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CfgGetparaminfolistReqMethod)
  return target;
}

size_t CfgGetparaminfolistReqMethod::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CfgGetparaminfolistReqMethod)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string client_name = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_client_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CfgGetparaminfolistReqMethod::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CfgGetparaminfolistReqMethod)
  GOOGLE_DCHECK_NE(&from, this);
  const CfgGetparaminfolistReqMethod* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CfgGetparaminfolistReqMethod>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CfgGetparaminfolistReqMethod)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CfgGetparaminfolistReqMethod)
    MergeFrom(*source);
  }
}

void CfgGetparaminfolistReqMethod::MergeFrom(const CfgGetparaminfolistReqMethod& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CfgGetparaminfolistReqMethod)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_client_name()) {
    _internal_set_client_name(from._internal_client_name());
  }
}

void CfgGetparaminfolistReqMethod::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CfgGetparaminfolistReqMethod)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CfgGetparaminfolistReqMethod::CopyFrom(const CfgGetparaminfolistReqMethod& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CfgGetparaminfolistReqMethod)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CfgGetparaminfolistReqMethod::IsInitialized() const {
  return true;
}

void CfgGetparaminfolistReqMethod::InternalSwap(CfgGetparaminfolistReqMethod* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  client_name_.Swap(&other->client_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata CfgGetparaminfolistReqMethod::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CfgParamInfo::InitAsDefaultInstance() {
}
class CfgParamInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<CfgParamInfo>()._has_bits_);
  static void set_has_param_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_data_type(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_data_size(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_lastupdate_clientname(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_lastupdate_time(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_per_plag(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
};

CfgParamInfo::CfgParamInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CfgParamInfo)
}
CfgParamInfo::CfgParamInfo(const CfgParamInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  param_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_param_name()) {
    param_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_param_name(),
      GetArena());
  }
  lastupdate_clientname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_lastupdate_clientname()) {
    lastupdate_clientname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_lastupdate_clientname(),
      GetArena());
  }
  lastupdate_time_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_lastupdate_time()) {
    lastupdate_time_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_lastupdate_time(),
      GetArena());
  }
  ::memcpy(&data_type_, &from.data_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&per_plag_) -
    reinterpret_cast<char*>(&data_type_)) + sizeof(per_plag_));
  // @@protoc_insertion_point(copy_constructor:CfgParamInfo)
}

void CfgParamInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CfgParamInfo_proto_2fcfg_2fcfg_2eproto.base);
  param_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  lastupdate_clientname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  lastupdate_time_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&data_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&per_plag_) -
      reinterpret_cast<char*>(&data_type_)) + sizeof(per_plag_));
}

CfgParamInfo::~CfgParamInfo() {
  // @@protoc_insertion_point(destructor:CfgParamInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CfgParamInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  param_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  lastupdate_clientname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  lastupdate_time_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CfgParamInfo::ArenaDtor(void* object) {
  CfgParamInfo* _this = reinterpret_cast< CfgParamInfo* >(object);
  (void)_this;
}
void CfgParamInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CfgParamInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CfgParamInfo& CfgParamInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CfgParamInfo_proto_2fcfg_2fcfg_2eproto.base);
  return *internal_default_instance();
}


void CfgParamInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CfgParamInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      param_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      lastupdate_clientname_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      lastupdate_time_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x00000038u) {
    ::memset(&data_type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&per_plag_) -
        reinterpret_cast<char*>(&data_type_)) + sizeof(per_plag_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CfgParamInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string param_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_param_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CfgParamInfo.param_name");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 data_type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_data_type(&has_bits);
          data_type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 data_size = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_data_size(&has_bits);
          data_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string lastupdate_clientname = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_lastupdate_clientname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CfgParamInfo.lastupdate_clientname");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string lastupdate_time = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_lastupdate_time();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CfgParamInfo.lastupdate_time");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 per_plag = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_per_plag(&has_bits);
          per_plag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CfgParamInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CfgParamInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string param_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_param_name().data(), static_cast<int>(this->_internal_param_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CfgParamInfo.param_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_param_name(), target);
  }

  // optional int32 data_type = 2;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_data_type(), target);
  }

  // optional int32 data_size = 3;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_data_size(), target);
  }

  // optional string lastupdate_clientname = 4;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_lastupdate_clientname().data(), static_cast<int>(this->_internal_lastupdate_clientname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CfgParamInfo.lastupdate_clientname");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_lastupdate_clientname(), target);
  }

  // optional string lastupdate_time = 5;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_lastupdate_time().data(), static_cast<int>(this->_internal_lastupdate_time().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CfgParamInfo.lastupdate_time");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_lastupdate_time(), target);
  }

  // optional int32 per_plag = 6;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_per_plag(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CfgParamInfo)
  return target;
}

size_t CfgParamInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CfgParamInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional string param_name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_param_name());
    }

    // optional string lastupdate_clientname = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_lastupdate_clientname());
    }

    // optional string lastupdate_time = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_lastupdate_time());
    }

    // optional int32 data_type = 2;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_data_type());
    }

    // optional int32 data_size = 3;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_data_size());
    }

    // optional int32 per_plag = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_per_plag());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CfgParamInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CfgParamInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CfgParamInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CfgParamInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CfgParamInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CfgParamInfo)
    MergeFrom(*source);
  }
}

void CfgParamInfo::MergeFrom(const CfgParamInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CfgParamInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_param_name(from._internal_param_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_lastupdate_clientname(from._internal_lastupdate_clientname());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_set_lastupdate_time(from._internal_lastupdate_time());
    }
    if (cached_has_bits & 0x00000008u) {
      data_type_ = from.data_type_;
    }
    if (cached_has_bits & 0x00000010u) {
      data_size_ = from.data_size_;
    }
    if (cached_has_bits & 0x00000020u) {
      per_plag_ = from.per_plag_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CfgParamInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CfgParamInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CfgParamInfo::CopyFrom(const CfgParamInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CfgParamInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CfgParamInfo::IsInitialized() const {
  return true;
}

void CfgParamInfo::InternalSwap(CfgParamInfo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  param_name_.Swap(&other->param_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  lastupdate_clientname_.Swap(&other->lastupdate_clientname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  lastupdate_time_.Swap(&other->lastupdate_time_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CfgParamInfo, per_plag_)
      + sizeof(CfgParamInfo::per_plag_)
      - PROTOBUF_FIELD_OFFSET(CfgParamInfo, data_type_)>(
          reinterpret_cast<char*>(&data_type_),
          reinterpret_cast<char*>(&other->data_type_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CfgParamInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CfgGetparaminfolistResMethod::InitAsDefaultInstance() {
}
class CfgGetparaminfolistResMethod::_Internal {
 public:
  using HasBits = decltype(std::declval<CfgGetparaminfolistResMethod>()._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CfgGetparaminfolistResMethod::CfgGetparaminfolistResMethod(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  paramlist_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CfgGetparaminfolistResMethod)
}
CfgGetparaminfolistResMethod::CfgGetparaminfolistResMethod(const CfgGetparaminfolistResMethod& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      paramlist_(from.paramlist_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:CfgGetparaminfolistResMethod)
}

void CfgGetparaminfolistResMethod::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CfgGetparaminfolistResMethod_proto_2fcfg_2fcfg_2eproto.base);
  result_ = 0;
}

CfgGetparaminfolistResMethod::~CfgGetparaminfolistResMethod() {
  // @@protoc_insertion_point(destructor:CfgGetparaminfolistResMethod)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CfgGetparaminfolistResMethod::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CfgGetparaminfolistResMethod::ArenaDtor(void* object) {
  CfgGetparaminfolistResMethod* _this = reinterpret_cast< CfgGetparaminfolistResMethod* >(object);
  (void)_this;
}
void CfgGetparaminfolistResMethod::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CfgGetparaminfolistResMethod::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CfgGetparaminfolistResMethod& CfgGetparaminfolistResMethod::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CfgGetparaminfolistResMethod_proto_2fcfg_2fcfg_2eproto.base);
  return *internal_default_instance();
}


void CfgGetparaminfolistResMethod::Clear() {
// @@protoc_insertion_point(message_clear_start:CfgGetparaminfolistResMethod)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  paramlist_.Clear();
  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CfgGetparaminfolistResMethod::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .CfgParamInfo paramlist = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_paramlist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // optional int32 result = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_result(&has_bits);
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CfgGetparaminfolistResMethod::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CfgGetparaminfolistResMethod)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CfgParamInfo paramlist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_paramlist_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_paramlist(i), target, stream);
  }

  cached_has_bits = _has_bits_[0];
  // optional int32 result = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CfgGetparaminfolistResMethod)
  return target;
}

size_t CfgGetparaminfolistResMethod::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CfgGetparaminfolistResMethod)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CfgParamInfo paramlist = 1;
  total_size += 1UL * this->_internal_paramlist_size();
  for (const auto& msg : this->paramlist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional int32 result = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CfgGetparaminfolistResMethod::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CfgGetparaminfolistResMethod)
  GOOGLE_DCHECK_NE(&from, this);
  const CfgGetparaminfolistResMethod* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CfgGetparaminfolistResMethod>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CfgGetparaminfolistResMethod)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CfgGetparaminfolistResMethod)
    MergeFrom(*source);
  }
}

void CfgGetparaminfolistResMethod::MergeFrom(const CfgGetparaminfolistResMethod& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CfgGetparaminfolistResMethod)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  paramlist_.MergeFrom(from.paramlist_);
  if (from._internal_has_result()) {
    _internal_set_result(from._internal_result());
  }
}

void CfgGetparaminfolistResMethod::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CfgGetparaminfolistResMethod)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CfgGetparaminfolistResMethod::CopyFrom(const CfgGetparaminfolistResMethod& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CfgGetparaminfolistResMethod)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CfgGetparaminfolistResMethod::IsInitialized() const {
  return true;
}

void CfgGetparaminfolistResMethod::InternalSwap(CfgGetparaminfolistResMethod* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  paramlist_.InternalSwap(&other->paramlist_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CfgGetparaminfolistResMethod::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CfgParamupdatedataEvent::InitAsDefaultInstance() {
}
class CfgParamupdatedataEvent::_Internal {
 public:
  using HasBits = decltype(std::declval<CfgParamupdatedataEvent>()._has_bits_);
  static void set_has_param_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_param_type(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_client_name(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_update_client_name(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

CfgParamupdatedataEvent::CfgParamupdatedataEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  param_value_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CfgParamupdatedataEvent)
}
CfgParamupdatedataEvent::CfgParamupdatedataEvent(const CfgParamupdatedataEvent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      param_value_(from.param_value_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  param_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_param_name()) {
    param_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_param_name(),
      GetArena());
  }
  client_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_client_name()) {
    client_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_client_name(),
      GetArena());
  }
  update_client_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_update_client_name()) {
    update_client_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_update_client_name(),
      GetArena());
  }
  param_type_ = from.param_type_;
  // @@protoc_insertion_point(copy_constructor:CfgParamupdatedataEvent)
}

void CfgParamupdatedataEvent::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CfgParamupdatedataEvent_proto_2fcfg_2fcfg_2eproto.base);
  param_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  client_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  update_client_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  param_type_ = 0;
}

CfgParamupdatedataEvent::~CfgParamupdatedataEvent() {
  // @@protoc_insertion_point(destructor:CfgParamupdatedataEvent)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CfgParamupdatedataEvent::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  param_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  client_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  update_client_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CfgParamupdatedataEvent::ArenaDtor(void* object) {
  CfgParamupdatedataEvent* _this = reinterpret_cast< CfgParamupdatedataEvent* >(object);
  (void)_this;
}
void CfgParamupdatedataEvent::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CfgParamupdatedataEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CfgParamupdatedataEvent& CfgParamupdatedataEvent::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CfgParamupdatedataEvent_proto_2fcfg_2fcfg_2eproto.base);
  return *internal_default_instance();
}


void CfgParamupdatedataEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:CfgParamupdatedataEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  param_value_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      param_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      client_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      update_client_name_.ClearNonDefaultToEmpty();
    }
  }
  param_type_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CfgParamupdatedataEvent::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string param_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_param_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CfgParamupdatedataEvent.param_name");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated bytes param_value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_param_value();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // optional int32 param_type = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_param_type(&has_bits);
          param_type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string client_name = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_client_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CfgParamupdatedataEvent.client_name");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string update_client_name = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_update_client_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CfgParamupdatedataEvent.update_client_name");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CfgParamupdatedataEvent::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CfgParamupdatedataEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string param_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_param_name().data(), static_cast<int>(this->_internal_param_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CfgParamupdatedataEvent.param_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_param_name(), target);
  }

  // repeated bytes param_value = 2;
  for (int i = 0, n = this->_internal_param_value_size(); i < n; i++) {
    const auto& s = this->_internal_param_value(i);
    target = stream->WriteBytes(2, s, target);
  }

  // optional int32 param_type = 3;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_param_type(), target);
  }

  // optional string client_name = 4;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_client_name().data(), static_cast<int>(this->_internal_client_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CfgParamupdatedataEvent.client_name");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_client_name(), target);
  }

  // optional string update_client_name = 5;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_update_client_name().data(), static_cast<int>(this->_internal_update_client_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CfgParamupdatedataEvent.update_client_name");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_update_client_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CfgParamupdatedataEvent)
  return target;
}

size_t CfgParamupdatedataEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CfgParamupdatedataEvent)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bytes param_value = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(param_value_.size());
  for (int i = 0, n = param_value_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
      param_value_.Get(i));
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string param_name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_param_name());
    }

    // optional string client_name = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_client_name());
    }

    // optional string update_client_name = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_update_client_name());
    }

    // optional int32 param_type = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_param_type());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CfgParamupdatedataEvent::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CfgParamupdatedataEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const CfgParamupdatedataEvent* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CfgParamupdatedataEvent>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CfgParamupdatedataEvent)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CfgParamupdatedataEvent)
    MergeFrom(*source);
  }
}

void CfgParamupdatedataEvent::MergeFrom(const CfgParamupdatedataEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CfgParamupdatedataEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  param_value_.MergeFrom(from.param_value_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_param_name(from._internal_param_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_client_name(from._internal_client_name());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_set_update_client_name(from._internal_update_client_name());
    }
    if (cached_has_bits & 0x00000008u) {
      param_type_ = from.param_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CfgParamupdatedataEvent::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CfgParamupdatedataEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CfgParamupdatedataEvent::CopyFrom(const CfgParamupdatedataEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CfgParamupdatedataEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CfgParamupdatedataEvent::IsInitialized() const {
  return true;
}

void CfgParamupdatedataEvent::InternalSwap(CfgParamupdatedataEvent* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  param_value_.InternalSwap(&other->param_value_);
  param_name_.Swap(&other->param_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  client_name_.Swap(&other->client_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  update_client_name_.Swap(&other->update_client_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(param_type_, other->param_type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CfgParamupdatedataEvent::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CfgParamupdatedataresEvent::InitAsDefaultInstance() {
}
class CfgParamupdatedataresEvent::_Internal {
 public:
  using HasBits = decltype(std::declval<CfgParamupdatedataresEvent>()._has_bits_);
  static void set_has_client_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_param_name(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

CfgParamupdatedataresEvent::CfgParamupdatedataresEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CfgParamupdatedataresEvent)
}
CfgParamupdatedataresEvent::CfgParamupdatedataresEvent(const CfgParamupdatedataresEvent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  client_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_client_name()) {
    client_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_client_name(),
      GetArena());
  }
  param_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_param_name()) {
    param_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_param_name(),
      GetArena());
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:CfgParamupdatedataresEvent)
}

void CfgParamupdatedataresEvent::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CfgParamupdatedataresEvent_proto_2fcfg_2fcfg_2eproto.base);
  client_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  param_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  result_ = 0;
}

CfgParamupdatedataresEvent::~CfgParamupdatedataresEvent() {
  // @@protoc_insertion_point(destructor:CfgParamupdatedataresEvent)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CfgParamupdatedataresEvent::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  client_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  param_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CfgParamupdatedataresEvent::ArenaDtor(void* object) {
  CfgParamupdatedataresEvent* _this = reinterpret_cast< CfgParamupdatedataresEvent* >(object);
  (void)_this;
}
void CfgParamupdatedataresEvent::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CfgParamupdatedataresEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CfgParamupdatedataresEvent& CfgParamupdatedataresEvent::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CfgParamupdatedataresEvent_proto_2fcfg_2fcfg_2eproto.base);
  return *internal_default_instance();
}


void CfgParamupdatedataresEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:CfgParamupdatedataresEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      client_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      param_name_.ClearNonDefaultToEmpty();
    }
  }
  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CfgParamupdatedataresEvent::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string client_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_client_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CfgParamupdatedataresEvent.client_name");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string param_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_param_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CfgParamupdatedataresEvent.param_name");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_result(&has_bits);
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CfgParamupdatedataresEvent::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CfgParamupdatedataresEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string client_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_client_name().data(), static_cast<int>(this->_internal_client_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CfgParamupdatedataresEvent.client_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_client_name(), target);
  }

  // optional string param_name = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_param_name().data(), static_cast<int>(this->_internal_param_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CfgParamupdatedataresEvent.param_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_param_name(), target);
  }

  // optional int32 result = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CfgParamupdatedataresEvent)
  return target;
}

size_t CfgParamupdatedataresEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CfgParamupdatedataresEvent)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string client_name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_client_name());
    }

    // optional string param_name = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_param_name());
    }

    // optional int32 result = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_result());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CfgParamupdatedataresEvent::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CfgParamupdatedataresEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const CfgParamupdatedataresEvent* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CfgParamupdatedataresEvent>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CfgParamupdatedataresEvent)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CfgParamupdatedataresEvent)
    MergeFrom(*source);
  }
}

void CfgParamupdatedataresEvent::MergeFrom(const CfgParamupdatedataresEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CfgParamupdatedataresEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_client_name(from._internal_client_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_param_name(from._internal_param_name());
    }
    if (cached_has_bits & 0x00000004u) {
      result_ = from.result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CfgParamupdatedataresEvent::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CfgParamupdatedataresEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CfgParamupdatedataresEvent::CopyFrom(const CfgParamupdatedataresEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CfgParamupdatedataresEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CfgParamupdatedataresEvent::IsInitialized() const {
  return true;
}

void CfgParamupdatedataresEvent::InternalSwap(CfgParamupdatedataresEvent* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  client_name_.Swap(&other->client_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  param_name_.Swap(&other->param_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CfgParamupdatedataresEvent::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::CfgInitclientReqMethod* Arena::CreateMaybeMessage< ::CfgInitclientReqMethod >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CfgInitclientReqMethod >(arena);
}
template<> PROTOBUF_NOINLINE ::CfgInitclientResMethod* Arena::CreateMaybeMessage< ::CfgInitclientResMethod >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CfgInitclientResMethod >(arena);
}
template<> PROTOBUF_NOINLINE ::CfgDeinitclientReqMethod* Arena::CreateMaybeMessage< ::CfgDeinitclientReqMethod >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CfgDeinitclientReqMethod >(arena);
}
template<> PROTOBUF_NOINLINE ::CfgDeinitclientResMethod* Arena::CreateMaybeMessage< ::CfgDeinitclientResMethod >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CfgDeinitclientResMethod >(arena);
}
template<> PROTOBUF_NOINLINE ::CfgSetparamReqMethod* Arena::CreateMaybeMessage< ::CfgSetparamReqMethod >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CfgSetparamReqMethod >(arena);
}
template<> PROTOBUF_NOINLINE ::CfgSetparamResMethod* Arena::CreateMaybeMessage< ::CfgSetparamResMethod >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CfgSetparamResMethod >(arena);
}
template<> PROTOBUF_NOINLINE ::CfgGetparamReqMethod* Arena::CreateMaybeMessage< ::CfgGetparamReqMethod >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CfgGetparamReqMethod >(arena);
}
template<> PROTOBUF_NOINLINE ::CfgGetparamResMethod* Arena::CreateMaybeMessage< ::CfgGetparamResMethod >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CfgGetparamResMethod >(arena);
}
template<> PROTOBUF_NOINLINE ::CfgResetparamReqMethod* Arena::CreateMaybeMessage< ::CfgResetparamReqMethod >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CfgResetparamReqMethod >(arena);
}
template<> PROTOBUF_NOINLINE ::CfgResetparamResMethod* Arena::CreateMaybeMessage< ::CfgResetparamResMethod >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CfgResetparamResMethod >(arena);
}
template<> PROTOBUF_NOINLINE ::CfgMonitorparamReqMethod* Arena::CreateMaybeMessage< ::CfgMonitorparamReqMethod >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CfgMonitorparamReqMethod >(arena);
}
template<> PROTOBUF_NOINLINE ::CfgMonitorparamResMethod* Arena::CreateMaybeMessage< ::CfgMonitorparamResMethod >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CfgMonitorparamResMethod >(arena);
}
template<> PROTOBUF_NOINLINE ::CfgUnmonitorparamReqMethod* Arena::CreateMaybeMessage< ::CfgUnmonitorparamReqMethod >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CfgUnmonitorparamReqMethod >(arena);
}
template<> PROTOBUF_NOINLINE ::CfgUnmonitorparamResMethod* Arena::CreateMaybeMessage< ::CfgUnmonitorparamResMethod >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CfgUnmonitorparamResMethod >(arena);
}
template<> PROTOBUF_NOINLINE ::CfgDelparamReqMethod* Arena::CreateMaybeMessage< ::CfgDelparamReqMethod >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CfgDelparamReqMethod >(arena);
}
template<> PROTOBUF_NOINLINE ::CfgDelparamResMethod* Arena::CreateMaybeMessage< ::CfgDelparamResMethod >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CfgDelparamResMethod >(arena);
}
template<> PROTOBUF_NOINLINE ::CfgParamupdatedataresReqMethod* Arena::CreateMaybeMessage< ::CfgParamupdatedataresReqMethod >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CfgParamupdatedataresReqMethod >(arena);
}
template<> PROTOBUF_NOINLINE ::CfgParamupdatedataresResMethod* Arena::CreateMaybeMessage< ::CfgParamupdatedataresResMethod >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CfgParamupdatedataresResMethod >(arena);
}
template<> PROTOBUF_NOINLINE ::CfgGetmonitorclientsReqMethod* Arena::CreateMaybeMessage< ::CfgGetmonitorclientsReqMethod >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CfgGetmonitorclientsReqMethod >(arena);
}
template<> PROTOBUF_NOINLINE ::CfgGetmonitorclientsResMethod* Arena::CreateMaybeMessage< ::CfgGetmonitorclientsResMethod >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CfgGetmonitorclientsResMethod >(arena);
}
template<> PROTOBUF_NOINLINE ::CfgGetclientinfolistReqMethod* Arena::CreateMaybeMessage< ::CfgGetclientinfolistReqMethod >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CfgGetclientinfolistReqMethod >(arena);
}
template<> PROTOBUF_NOINLINE ::CfgMethodEventInfo* Arena::CreateMaybeMessage< ::CfgMethodEventInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CfgMethodEventInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::CfgClientInfo* Arena::CreateMaybeMessage< ::CfgClientInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CfgClientInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::CfgGetclientinfolistResMethod* Arena::CreateMaybeMessage< ::CfgGetclientinfolistResMethod >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CfgGetclientinfolistResMethod >(arena);
}
template<> PROTOBUF_NOINLINE ::CfgGetparaminfolistReqMethod* Arena::CreateMaybeMessage< ::CfgGetparaminfolistReqMethod >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CfgGetparaminfolistReqMethod >(arena);
}
template<> PROTOBUF_NOINLINE ::CfgParamInfo* Arena::CreateMaybeMessage< ::CfgParamInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CfgParamInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::CfgGetparaminfolistResMethod* Arena::CreateMaybeMessage< ::CfgGetparaminfolistResMethod >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CfgGetparaminfolistResMethod >(arena);
}
template<> PROTOBUF_NOINLINE ::CfgParamupdatedataEvent* Arena::CreateMaybeMessage< ::CfgParamupdatedataEvent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CfgParamupdatedataEvent >(arena);
}
template<> PROTOBUF_NOINLINE ::CfgParamupdatedataresEvent* Arena::CreateMaybeMessage< ::CfgParamupdatedataresEvent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CfgParamupdatedataresEvent >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
