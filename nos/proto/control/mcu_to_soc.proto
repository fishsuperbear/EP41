syntax = "proto2";
package hozon.common;

import "proto/common/header.proto";


message FctEEPromInfo{
  optional  uint32 MCU_stat_LDWMode_u8 = 1;
  optional  uint32 MCU_V_LKSSetspeed_u8 = 2;
  optional  uint32 MCU_stat_LDPMode_u8 = 3;
  optional  uint32 MCU_stat_VoiceMode_u8 = 4;
  optional  uint32 MCU_stat_ACCOnOffState_u8 = 5;
  optional  uint32 MCU_stat_DCLCSysState_u8 = 6;
  optional  uint32 MCU_stat_NNPState_u8 = 7;
  optional  uint32 MCU_stat_AutoOnOffSet_u8 = 8;
  optional  uint32 MCU_stat_ALCMode_u8 = 9;
  optional  uint32 MCU_stat_ADSDrivingMode_u8 = 10;
  optional  uint32 MCU_stat_SLFStatefeedback_u8 = 11;
}

message Adas_MSG_0x8E{
  optional   uint32 ADCS2_ADAS_EPSAngleReqSt = 1;
  optional   uint32 ADCS2_EPS_LDPState = 2;
  optional   uint32 ADCS2_NNP_SystemFaultStatus = 3;
  optional   uint32 ADCS_Pilot_SystemFaultStatus = 4;
  optional   uint32 ADCS2_ADAS_EPSLateralCtrlType = 5;
  optional   uint32 ADCS2_ADSDriving_mode = 6;
  optional   float ADCS2_ADAS_EPSAngleReq = 7;
  optional   uint32 ADCS2_ALCDirection = 8;
  optional   uint32 ADCS2_EPS_ELKState = 9;
  optional   uint32 ADCS2_longitudCtrlType =10 ;
  optional   uint32 ADCS2_LongitudCtrlDecToStopReq =11 ;
  optional   uint32 ADCS2_LongitudCtrlDriveOff =12 ;
  optional   uint32 ADCS2_LongitudCtrlAccelCtrlReq =13 ;
  optional   float ADCS2_LongitudCtrlTargetAccel =14 ;
}

message Adas_MSG_0x8F{
  optional    uint32 ADCS11_PA_GearReq = 1;
  optional    uint32 ADCS11_PA_GearPosReqVail = 2;
  optional    uint32 ADCS11_PA_prefillReq = 3;
  optional    uint32 ADCS11_PA_GearPosReq = 4;
  optional    uint32 ADCS11_PA_BrakemodeReq = 5;
  optional    uint32 ADCS11_PA_EpbReq = 6;
  optional    float ADCS11_PA_StopDistance = 7;
  optional    float ADCS11_PA_EPSAngleReq = 8;
  optional    uint32 ADCS11_PA_IDBControlReqV =9 ;
  optional    float ADCS11_PA_TarDecel =10 ;
  optional    uint32 ADCS11_PA_EPSAngleReqSt =11 ;
  optional    uint32 ADCS11_PA_EPSAngleReqV =12 ;
  optional    float ADCS11_PA_PAMaxSpd =13 ;
  optional    uint32 ADCS11_PA_IDBControlReq =14 ;
  optional    uint32 ADCS11_PA_TorqReq =15 ;
  optional    uint32 ADCS11_PA_TorqReqValidity =16 ;
  optional    uint32 ADCS11_PA_TarDecelreq =17 ;
  optional    uint32 ADCS11_PA_ParkingFnMd =18 ;
  optional    uint32 ADCS11_PA_StopReq =19 ;
  optional    uint32 ADCS11_PA_StopDistanceValid =20 ;
  optional    float ADCS11_PA_TorqReqValue =21 ;
  optional    uint32 ADCS11_PA_IDB_TorqReqValidity =22 ;
  optional    float ADCS11_PA_IDB_TorqReqValue =23 ;
}

message Adas_MSG_0x136{
  optional  uint32 ADCS12_DCLCAudioplay = 1;
  optional  uint32 ADCS12_PilotAudioPlay = 2;
  optional  uint32 ADCS12_HandOffAudioplay = 3;
  optional  uint32 ADCS12_NNPCancelAudioPlay = 4;
  optional  uint32 ADCS12_MRMAudioPlay = 5;
  optional  uint32 ADCS12_NNP_ResumeAudioplay = 6;
  optional  uint32 ADCS12_Lcsndrequest = 7;
  optional  uint32 ADCS12_Lcsndrconfirm = 8;
  optional  uint32 ADCS12_DriveOffBroadcast = 9;
  optional  uint32 ADCS12_EyeOffBroadcast = 10;
  optional  uint32 ADCS12_longitudDisableInfo = 11;
  optional  uint32 ADCS12_SpeedAdaptComfirm = 12;
  optional  uint32 ADCS12_PayModeConfirm = 13;
  optional  uint32 ADCS12_longitudCtrlSysInfo = 14;
  optional  uint32 ADCS12_ADAS_DriveOffinhibition = 15;
  optional  uint32 ADCS12_P2N_State_Reminder = 16;
  optional  uint32 ADCS12_NNP_State_Reminder = 17;
  optional  uint32 ADCS12_NNP_LightRemind = 18;
  optional  uint32 ADCS12_LaneChangePendingAlert =19;
  optional  uint32 ADCS12_NPilotSysInfo =20;
  optional  uint32 ADCS12_LCAudioPlay =21;
  optional  uint32 ADCS12_NNP_Scenarios_AudioPlay =22; 
  optional  uint32 ADCS12_NNP_RINO   =23; 
}

message Adas_MSG_0x193{
   optional  uint32 ADCS8_LDWState = 1;
   optional  uint32 ADCS8_LDWWarnState = 2;
   optional  uint32 ADCS8_LDWMode = 3;
   optional  uint32 ADCS8_ELKMode = 4;
   optional  uint32 ADCS8_LDPELKWarnState = 5;
   optional  uint32 ADCS8_lateralCtrHandsEyesOffWarning = 6;
   optional  uint32 ADCS8_MissingExitAlert = 7;
   optional  uint32 ADCS8_LKSSetspeed = 8;
   optional  uint32 ADCS8_ACCState = 9;
   optional  uint32 ADCS8_lateralCtrtakeover = 10;
   optional  uint32 ADCS8_LateralCtrHandOffReleasewarning = 11;
   optional  uint32 ADCS8_LDPMode = 12;
   optional  uint32 ADCS8_LDPELKtakeoverWarningstate = 13;
   optional  uint32 ADCS8_longitudCtrlSetSpeed = 14;
   optional  uint32 ADCS8_NNP_Scenarios = 15;
   optional  uint32 ADCS8_longitudCtrlTakeOverReq = 16;
   optional  uint32 ADCS8_longitudCtrlSetDistance = 17;
   optional  uint32 ADCS8_longitudCtrlTargetValidity = 18;
   optional  uint32 ADCS8_ACCSystemFaultStatus = 19;
   optional  uint32 ADCS8_HornReq = 20;
   optional  uint32 ADCS8_DoorUnlock = 21;
   optional  uint32 ADCS8_ACCOnOffState =22 ;
   optional  uint32 ADCS8_NNP_SOAAudioplay=23 ;
   optional  uint32 ADCS8_TSR_SLFStatefeedback=24 ;
   optional  uint32 ADCS8_VoiceNotifFrequency_mode=25 ;
   optional  uint32 ADCS8_NPilot_SystemFaultStatus=26 ;
   optional  uint32 ADCS8_NPilot_SysState=27 ;
   optional  uint32 ADCS8_NNP_AutoOnOffSet=28 ;
   optional  uint32 ADCS8_NNP_SystemFaultStatus=29 ;
   optional  uint32 ADCS8_NNPSysState=30 ;
   optional  uint32 ADCS8_Lanechangeinfor=31 ;
   optional  uint32 ADCS8_DCLCSysState = 32;
   optional  uint32 ADCS8_LaneChangeSystemFaultStatus = 33;
   optional  uint32 ADCS8_LaneChangeWarning = 34;
   optional  uint32 ADCS8_ADAS_DriveOffPossilbe = 35;
   optional  uint32 ADCS8_DriveOffinhibitionObjType = 36;
   optional  uint32 ADCS8_VoiceMode = 37;
   optional  uint32 ADCS8_ALC_mode = 38;
   optional  uint32 ADCS8_NNP_State = 39;
   optional  uint32 ADCS8_Lanechangedirection = 40;
   optional  uint32 ADCS8_ADSDriving_mode = 41;
   optional  uint32 ADCS8_NNP_MRM_status = 42;
}

message Adptr_Out{
  optional  Adas_MSG_0x8E Adptr_Out_Msg_0x8E = 1;
  optional  Adas_MSG_0x8F Adptr_Out_Msg_0x8F =2 ;
  optional  Adas_MSG_0x136 Adptr_Out_Msg_0x136 =3 ;
  optional  Adas_MSG_0x193 Adptr_Out_Msg_0x193 =4 ;
}

message CtrlEEPromInfo {
  optional  float CtrlYawrateOffset = 1;
  optional  float CtrlYawOffset = 2;
  optional  float CtrlAxOffset = 3;
  optional  float CtrlSteerOffset = 4;
  optional  float CtrlAccelDeadzone = 5;
};

message HafChassis {
  optional  uint32 YawrateFdbkValid = 1; 
  optional  uint32 AxFdbkValid = 2; 
  optional  uint32 HsaActive = 3; 
  optional  uint32 HsaFail = 4; 
  optional  uint32 VehicleStandstill = 5; 
  optional  uint32 AccEnable = 6; 
  optional  float AccCmdFdbk = 7; 
  optional  uint32 VehicleSpdValid = 8; 
  optional  uint32 PaPrefillFlag = 9; 
  optional  uint32 FLWhlVelocityValid = 10; 
  optional  float FLWhlVelocity = 11; 
  optional  uint32 FRWhlVelocityValid = 12; 
  optional  float FRWhlVelocity = 13; 
  optional  uint32 RRWhlDir = 14; 
  optional  uint32 RLWhlDir =15; 
  optional  uint32 FRWhlDir =16; 
  optional  uint32 FLWhlDir =17; 
  optional  uint32 RLWhlVelocityValid =18; 
  optional  float RLWhlVelocity =19; 
  optional  uint32 RRWhlVelocityValid =20; 
  optional  float RRWhlVelocity =21; 
  optional  uint32 SteerFdbkValid =22; 
  optional  uint32 SteerFdbkSpdValid =23; 
  optional  uint32 SteerCalibrated =24; 
  optional  uint32 WarningRed =25; 
  optional  uint32 WarningYellow =26; 
  optional  float SteerFdbkSpd =27; 
  optional  uint32 AyFdbkValid =28; 
  optional  float AyFdbk =29; 
  optional  float VxFdbk =30; 
  optional float VehicleSpdDisplay=31;
  optional float AxFdbk=32;
  optional float PitchFdbk=33;
  optional float YawFdbk=34;
  optional float YawRateFdbk=35;
  optional float SteerFdbk=36;
  optional uint32 GearFdbk=37;
  optional float VehicleGyroX=38;
  optional float VehicleGyroY=39;
  optional float VehicleGyroZ=40;
  optional float VehicleAccelX=41;
  optional float VehicleAccelY=42;
  optional float VehicleAccelZ=43;
  optional uint32 IDB6_EPBStatus=44;
  optional uint32 IDB1_BrakePedalApplied=45;
  optional uint32 IDB9_PA_ApaCtrlSts=46;
  optional uint32 EPS2_ADAS_Active=47;
  optional uint32 EPS2_PA_Active=48;
  optional uint32 VCU14_PAActiv=49;
};

message HafGlobalTime {
  optional  uint32 TimeStampSec = 1;
  optional  uint32 TimeStampNsec = 2;
  optional  uint32 GetTimeEnable = 3;
};

message Inputs_MCU {
   optional  uint32 MCU_stat_LDWMode_u8 = 1;
   optional  uint32 MCU_V_LKSSetspeed_u8 = 2;
   optional  uint32 MCU_stat_LDPMode_u8 = 3;
   optional  uint32 MCU_stat_VoiceMode_u8 = 4;
   optional  uint32 MCU_stat_ACCOnOffState_u8 = 5;
   optional  uint32 MCU_stat_DCLCSysState_u8 = 6;
   optional  uint32 MCU_stat_NNPState_u8 = 7;
   optional  uint32 MCU_stat_AutoOnOffSet_u8 = 8;
   optional  uint32 MCU_stat_ALCMode_u8 = 9;
   optional  uint32 MCU_stat_ADSDrivingMode_u8 = 10;
   optional  uint32 MCU_stat_SLFStatefeedback_u8 =11 ;
   optional  uint32 MCU_indx_FuncConfDID_u32 =12 ;
};

message VEH_CAN_Inputs_EP40 {
  optional uint32 IDB1_BrakePedalApplied = 1;
  optional uint32 IDB1_BrakePedalAppliedV = 2;
  optional uint32 CS1_GearPositionReqSt = 3;
  optional uint32 CS1_TurnLightReqSt = 4;
  optional uint32 CS1_GearPositionReqStValid = 5;
  optional uint32 SWSM_A_CruiseDistance_Add = 6;
  optional uint32 SWSM_A_CruiseDistance_Minus = 7;
  optional uint32 Region_A_SwError = 8;
  optional uint32 SWSM_A_CruiseSpeed_Add = 9;
  optional uint32 SWSM_A_CruiseSpeed_Minus = 10;
  optional uint32 SWSM_A_CD_Add_Overtime = 11;
  optional uint32 SWSM_A_CD_Minus_Overtime = 12;
  optional uint32 IDB6_EPBAvailable = 13;
  optional uint32 IDB6_EPBStatus = 14;
  optional uint32 ACU1_CrashStatus = 15;
  optional float ACU2_LatAccSensorValue = 16;
  optional uint32 ACU2_LatAccSensorValueV = 17;
  optional float ACU2_LongAccSensorValue = 18;
  optional uint32 ACU2_LongAccSensorValueV = 19;
  optional float ACU2_VehicleDynYawRate = 20;
  optional uint32 ACU2_VehicleDynYawRateV = 21;
  optional float IDB3_VehicleSpd = 22;
  optional uint32 IDB3_VehicleSpdValid = 23;
  optional float IDB3_MasterCylPressure = 24;
  optional uint32 IDB3_MasterCylPressureInvalid = 25;
  optional float VCU5_AccelPosition = 26;
  optional uint32 VCU5_ActGear = 27;
  optional uint32 VCU5_ActGearValid = 28;
  optional uint32 VCU5_AccelPositionValid = 29;
  optional uint32 VCU5_READYLightSts = 30;
  optional uint32 VCU5_DriverOvertakeMode = 31;
  optional uint32 VCU5_EmuEngineSts = 32;
  optional float EPS1_SteeringAngle = 33;
  optional float EPS1_SteerAngleSpd = 34;
  optional uint32 EPS1_SteerAngleSpdValid = 35;
  optional uint32 EPS1_SteeringAngleValid = 36; 
  optional float EPS1_TorsionBarTorque = 37;
  optional uint32 EPS1_TorsionBarTorqueValid = 38;
  optional uint32 EPS2_ADAS_Available = 39;
  optional float EPS2_MotCntrl = 40;
  optional uint32 EPS2_PA_Available = 41;
  optional uint32 EPS2_PA_Active = 42;
  optional uint32 EPS2_MotCntrlValid = 43;
  optional uint32 EPS2_PA_CtrlAbortFeedback = 44;
  optional uint32 BDCS3_BackDoorAjar = 45;
  optional uint32 BDCS1_FrontLampSt = 46;
  optional uint32 BDCS1_HazardLampSt = 47;
  optional uint32 BDCS1_HazardSwSt = 48;
  optional uint32 BDCS1_HighBeamSW = 49;
  optional uint32 BDCS1_HighBeamSt = 50;
  optional uint32 BDCS1_LeftTurnLightSt = 51;
  optional uint32 BDCS1_LowBeamSt = 52;
  optional uint32 BDCS1_RightTurnLightSt = 53;
  optional uint32 BDCS1_TurnLightSW = 54;
  optional uint32 BDCS1_PowerMode = 55;
  optional uint32 BDCS1_TrunkLockSts = 56;
  optional uint32 BDCS1_HoodAjarSts = 57;
  optional uint32 BDCS4_FLTyre_PressureWarn = 58;
  optional uint32 BDCS4_FRTyre_PressureWarn = 59;
  optional uint32 BDCS4_RLTyre_PressureWarn = 60;
  optional uint32 BDCS4_RRTyre_PressureWarn = 61;
  optional uint32 BDCS6_FrontWiperParkPos = 62;
  optional uint32 BDCS6_FrontWiperSts = 63;
  optional uint32 ACU1_Driver_Buckle = 64;
  optional uint32 IDB7_ABSActive = 65;
  optional uint32 IDB7_ESCActive = 66;
  optional uint32 IDB7_TCSActive = 67;
  optional uint32 IDB7_TCSFail = 68;
  optional uint32 IDB7_ABSFail = 69;
  optional uint32 IDB7_ESCFail = 70;
  optional uint32 IDB7_HDCEnabled = 71;
  optional uint32 IDB7_ESCDisable = 72;
  optional uint32 IDB7_HDCAtive = 73;
  optional uint32 IDB7_DynParkBrkByIDBActive = 74;
  optional uint32 IDB7_TCSDisable = 75;
  optional uint32 IDB7_ARPACTIVE = 76;
  optional uint32 IDB7_EBD_Fail = 77; 
  optional uint32 IDB7_ARPFailure = 78;
  optional uint32 IDB4_FLWhlDir = 79;
  optional float IDB4_FLWhlVelocity = 80;
  optional uint32 IDB4_FLWhlVelocityValid = 81;
  optional uint32 IDB4_FRWhlDir = 82;
  optional float IDB4_FRWhlVelocity = 83;
  optional uint32 IDB4_FRWhlVelocityValid = 84;
  optional uint32 IDB4_RLWhlDir = 85;
  optional float IDB4_RLWhlVelocity = 86;
  optional uint32 IDB4_RLWhlVelocityValid = 87;
  optional uint32 IDB4_RRWhlDir = 88;
  optional float IDB4_RRWhlVelocity = 89;
  optional uint32 IDB4_RRWhlVelocityValid = 90;
  optional uint32 CDCS3_DriveModeSet = 91;
  optional uint32 CDCS15_NNP_DriverStatus = 92;
  optional uint32 CDCS13_SwSmMode = 93;
  optional uint32 DDCU1_FLDoorAjar = 94;
  optional uint32 DDCU1_RLDoorAjar = 95;
  optional uint32 DDCU1_MirrorFoldSt = 96;
  optional uint32 ICU1_VehicleSpdDisplayValid = 97;
  optional float ICU1_VehicleSpdDisplay = 98;
  optional uint32 IDB5_BrakeDiscTempSts = 99;
  optional uint32 IDB5_VehicleStanstill = 100;
  optional uint32 IDB5_ACC_ReqLim = 101;
  optional uint32 IDB5_ABAactive = 102;
  optional uint32 IDB5_ACC_Enable = 103;
  optional float IDB5_ACC_ReferenceAccel = 104;
  optional uint32 IDB5_DriverOverride = 105;
  optional uint32 IDB9_PA_CtrlAbortFeedback = 106;
  optional uint32 IDB9_PA_ParkingBrkMdSeln = 107;
  optional uint32 IDB9_PA_ParkingFnMd = 108;
  optional uint32 IDB9_PA_ParkingAvailable = 109;
  optional uint32 IDB9_PA_ApaCtrlSts = 110;
  optional uint32 IDB9_PAStandStill = 111;
  optional uint32 IDB9_PASts = 112;
  optional float MCU1_MotorSpeed = 113;
  optional float MCU1_ControllerTorque = 114;
  optional float MCU1_CurrentTorque = 115;
  optional uint32 MCU1_CurrentTorqueValid = 116;
  optional uint32 PDCU1_FRDoorAjar = 117;
  optional uint32 PDCU1_RRDoorAjar = 118;
  optional uint32 VCU14_PAAvailable = 119;
  optional uint32 VCU14_ACC_Ready = 120;
  optional uint32 VCU14_PAActive = 121;
  optional uint32 VCU14_PA_ParkingFnMd = 122;
  optional uint32 VCU14_PA_FailCode = 123;
  optional uint32 VCU14_Gear_PAActive = 124;
  optional uint32 VCU14_Gear_PAAvailable = 125;
  optional uint32 VCU14_Gear_ErrorSts_M01 = 126;
  optional uint32 VCU4_PA_DeceltorSts = 127;
  optional uint32 VCU4_PA_TargetTrqValueValidity = 128;
  optional uint32 VCU14_Gear_PACtrlAbortFeedback = 129;
  optional float VCU4_PA_TargetTrqValue = 130;
  optional float VCU7_MaxMotPosTq = 131;
  optional float VCU7_MaxMotGenTq = 132;
  optional float VCU7_MaxFMotPosTq = 133;
  optional float VCU7_MaxFMotGenTq = 134;
  optional uint32 CDCS11_LKSSetspeed = 135;
  optional uint32 CDCS11_LDW_OnOffSet = 136;
  optional uint32 CDCS11_LCA_OnOffSet = 137;
  optional uint32 CDCS11_TSR_OnOffSet = 138;
  optional uint32 CDCS11_NNP_OnOffSet = 139;
  optional uint32 CDCS11_DCLCSysState = 140;
  optional uint32 CDCS11_ALCSysState = 141;
  optional uint32 CDCS11_DriveOffPossilbeswitch = 142;
  optional uint32 CDCS11_DriveOffinhibitionswitch = 143;
  optional uint32 CDCS11_ADAS_SndCtrlOnOff = 144;
  optional uint32 CDCS11_VoiceMode = 145;
  optional uint32 CDCS11_NNP_Active_OnOffSet = 146;
  optional uint32 CDCS11_ALC_mode = 147;
  optional uint32 CDCS11_ADSDriving_mode = 148;
  optional uint32 CDCS11_TSR_OverspeedOnoffSet = 149;
  optional uint32 CDCS11_NNP_AutoOnOffSet = 150;
  optional uint32 CDCS11_SnCtrl_NNP_OnOff = 151;
  optional uint32 CDCS11_TSR_SLFOnOffSet = 152;
  optional uint32 CDCS11_APA_FunctionMode = 153;
  optional uint32 CDCS11_TrackreverseSW = 154;
  optional uint32 CDCS11_SetPathwaySW = 155;
  optional uint32 CDCS11_PA_changeLanguage = 156;
  optional uint32 CDCS11_LDP_OnOffSet = 157;
  optional uint32 CDCS11_RPASw = 158;
  optional uint32 CDCS11_SetSw = 159;
  optional uint32 CDCS11_SoundCtrlSetReq = 160;
  optional uint32 CDCS11_location_sw = 161;
  optional uint32 CDCS11_Pathrefresh = 162;
  optional uint32 CDCS11_HPAGuideSW = 163;
  optional uint32 CDCS11_HPAPathwaytoCloudSW = 164;
  optional uint32 CDCS11_PathlearningSw = 165;
  optional uint32 CDCS11_PA_screenMd = 166;
  optional uint32 CDCS11_PASw = 167;
  optional uint32 CDCS11_PA_Recover = 168;
  optional uint32 CDCS_Lcsndrequest = 169;
  optional uint32 CDCS_Lcsndconfirm = 170;
  optional uint32 CDCS_SpdAdaptComfirm = 171;
  optional uint32 CDCS_PayModeConfirm = 172;
  optional uint32 CDCS11_SelectSlotID = 173;
  optional uint32 CDCS11_ParkingInReq = 174;
  optional uint32 CDCS11_ParkingOutReq = 175;
  optional uint32 CDCS11_RPA_FunctionMode = 176;
  optional uint32 CDCS11_MOD_Sound_Sw = 177;
  optional uint32 CDCS11_MOD_BSD_Sw = 178;
  optional uint32 CDCS11_PA_FRS_OnOffSet = 179;
  optional uint32 CDCS11_PA_3D_OnOffSet = 180;
  optional uint32 CDCS11_PA_measure_OnOffSet = 181;
  optional uint32 CDCS11_MODSw = 182;
  optional uint32 CDCS11_VoiceNotifFrequency_mode = 183;
  optional uint32 CDCS11_ACCOnOffSet = 184;
  optional uint32 CDCS11_HPASw = 185;
  optional uint32 CDCS11_DeleteMapID = 186;
  optional uint32 CDCS11_UploadMapID = 187;
  optional uint32 CDCS11_HPAActiveConfirm = 188;
  optional uint32 CDCS11_HPApreparkingSw = 189;
  optional uint32 CDCS11_HPAPathwaytoCloud_WorkSts = 190;
  optional uint32 CDCS11_ParkingoutSlot_Type = 191;
  optional uint32 CDCS11_ParkingoutSlot_Dire = 192;
  optional uint32 CDCS11_OptionalSlot_Type = 193;
  optional uint32 CDCS11_OptionalSlot_Dire = 194;
  optional float CDCS11_OptionalSlotAngle = 195;
  optional uint32 CDCS11_ELK_OnOffSet = 196;
  optional uint32 ADCS2_AEBPartialBrake = 197;
  optional uint32 ADCS2_AEBFullBrake = 198;
  optional uint32 ADCS2_AEBPrefillReq = 199;
  optional uint32 ADCS2_AEB_JerkReq = 200;
  optional uint32 CDCS5_ResetAllSetup = 201;
  optional uint32 CDCS5_FactoryReset = 202;
  optional uint32 ADCS8_FRS_Fail = 203;
  optional uint32 ADCS8_FVC_120_Fail = 204;
  optional uint32 ADCS8_FVC_30_Fail = 205;
  optional uint32 ADCS8_TSR_SpeedSign = 206;
  optional uint32 ADCS8_TSRState = 207;
  optional uint32 ADCS8_LCALeftWarnSt = 208;
  optional uint32 ADCS8_LCARightWarnSt = 209;
  optional uint32 ADCS11_PA_IDBControlReq = 210;
  optional uint32 ADCS11_Parking_WorkSts = 211;
  optional uint32 BTM2_ConnectSts = 212;
  optional uint32 EPS1_HSTWCalibrated = 213;
  optional uint32 VCU5_DriveMode_fb = 214;
  };

message mcu_to_soc_DebugData {
  optional  hozon.common.Header header = 1;
  optional  FctEEPromInfo pFCT_FctEEPromInfo = 2 ;
  optional  Adptr_Out pAdptrOut_Adptr_Out =  3 ;
  optional  CtrlEEPromInfo pCtrl_CtrlEEPromInfo = 4 ;
  optional  HafChassis rAdptrOut_HafChassisInfo = 5 ;
  optional  HafGlobalTime rCtrl_GlobalTime = 6 ;
  optional  Inputs_MCU rAdptrIn_MCU = 7 ;
  optional  VEH_CAN_Inputs_EP40 rAdptrIn_VEH_CAN = 8 ;
}
