// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: devm_tool.proto

#include "devm_tool.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_devm_5ftool_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DevmCpuInfo_CpuBindingEntry_DoNotUse_devm_5ftool_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_devm_5ftool_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DevmDeviceInfo_SensorVersionEntry_DoNotUse_devm_5ftool_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_devm_5ftool_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DevmDeviceStatus_CameraStatusEntry_DoNotUse_devm_5ftool_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_devm_5ftool_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DevmDeviceStatus_ImuStatusEntry_DoNotUse_devm_5ftool_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_devm_5ftool_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DevmDeviceStatus_LidarStatusEntry_DoNotUse_devm_5ftool_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_devm_5ftool_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DevmDeviceStatus_RadarStatusEntry_DoNotUse_devm_5ftool_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_devm_5ftool_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DevmDeviceStatus_UssStatusEntry_DoNotUse_devm_5ftool_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_devm_5ftool_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UpgradeVersionResp_SensorVersionEntry_DoNotUse_devm_5ftool_2eproto;
namespace hozon {
namespace netaos {
namespace zmqipc {
class DevmDidInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DevmDidInfo> _instance;
} _DevmDidInfo_default_instance_;
class DevmReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DevmReq> _instance;
} _DevmReq_default_instance_;
class DevmCpuInfo_CpuBindingEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DevmCpuInfo_CpuBindingEntry_DoNotUse> _instance;
} _DevmCpuInfo_CpuBindingEntry_DoNotUse_default_instance_;
class DevmCpuInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DevmCpuInfo> _instance;
} _DevmCpuInfo_default_instance_;
class DevmTemperatureDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DevmTemperature> _instance;
} _DevmTemperature_default_instance_;
class DevmVoltageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DevmVoltage> _instance;
} _DevmVoltage_default_instance_;
class DevmDeviceInfo_SensorVersionEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DevmDeviceInfo_SensorVersionEntry_DoNotUse> _instance;
} _DevmDeviceInfo_SensorVersionEntry_DoNotUse_default_instance_;
class DevmDeviceInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DevmDeviceInfo> _instance;
} _DevmDeviceInfo_default_instance_;
class DevmDeviceStatus_CameraStatusEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DevmDeviceStatus_CameraStatusEntry_DoNotUse> _instance;
} _DevmDeviceStatus_CameraStatusEntry_DoNotUse_default_instance_;
class DevmDeviceStatus_LidarStatusEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DevmDeviceStatus_LidarStatusEntry_DoNotUse> _instance;
} _DevmDeviceStatus_LidarStatusEntry_DoNotUse_default_instance_;
class DevmDeviceStatus_RadarStatusEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DevmDeviceStatus_RadarStatusEntry_DoNotUse> _instance;
} _DevmDeviceStatus_RadarStatusEntry_DoNotUse_default_instance_;
class DevmDeviceStatus_ImuStatusEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DevmDeviceStatus_ImuStatusEntry_DoNotUse> _instance;
} _DevmDeviceStatus_ImuStatusEntry_DoNotUse_default_instance_;
class DevmDeviceStatus_UssStatusEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DevmDeviceStatus_UssStatusEntry_DoNotUse> _instance;
} _DevmDeviceStatus_UssStatusEntry_DoNotUse_default_instance_;
class DevmDeviceStatusDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DevmDeviceStatus> _instance;
} _DevmDeviceStatus_default_instance_;
class UpgradeCommonReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpgradeCommonReq> _instance;
} _UpgradeCommonReq_default_instance_;
class UpgradeStatusRespDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpgradeStatusResp> _instance;
} _UpgradeStatusResp_default_instance_;
class UpgradePrecheckRespDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpgradePrecheckResp> _instance;
} _UpgradePrecheckResp_default_instance_;
class UpgradeProgressRespDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpgradeProgressResp> _instance;
} _UpgradeProgressResp_default_instance_;
class UpgradeUpdateReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpgradeUpdateReq> _instance;
} _UpgradeUpdateReq_default_instance_;
class UpgradeUpdateRespDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpgradeUpdateResp> _instance;
} _UpgradeUpdateResp_default_instance_;
class UpgradeVersionResp_SensorVersionEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpgradeVersionResp_SensorVersionEntry_DoNotUse> _instance;
} _UpgradeVersionResp_SensorVersionEntry_DoNotUse_default_instance_;
class UpgradeVersionRespDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpgradeVersionResp> _instance;
} _UpgradeVersionResp_default_instance_;
class UpgradeFinishRespDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpgradeFinishResp> _instance;
} _UpgradeFinishResp_default_instance_;
class UpgradeCurPartitionRespDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpgradeCurPartitionResp> _instance;
} _UpgradeCurPartitionResp_default_instance_;
class UpgradeSwitchSlotRespDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpgradeSwitchSlotResp> _instance;
} _UpgradeSwitchSlotResp_default_instance_;
}  // namespace zmqipc
}  // namespace netaos
}  // namespace hozon
static void InitDefaultsscc_info_DevmCpuInfo_devm_5ftool_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hozon::netaos::zmqipc::_DevmCpuInfo_default_instance_;
    new (ptr) ::hozon::netaos::zmqipc::DevmCpuInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hozon::netaos::zmqipc::DevmCpuInfo::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DevmCpuInfo_devm_5ftool_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_DevmCpuInfo_devm_5ftool_2eproto}, {
      &scc_info_DevmCpuInfo_CpuBindingEntry_DoNotUse_devm_5ftool_2eproto.base,}};

static void InitDefaultsscc_info_DevmCpuInfo_CpuBindingEntry_DoNotUse_devm_5ftool_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hozon::netaos::zmqipc::_DevmCpuInfo_CpuBindingEntry_DoNotUse_default_instance_;
    new (ptr) ::hozon::netaos::zmqipc::DevmCpuInfo_CpuBindingEntry_DoNotUse();
  }
  ::hozon::netaos::zmqipc::DevmCpuInfo_CpuBindingEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DevmCpuInfo_CpuBindingEntry_DoNotUse_devm_5ftool_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DevmCpuInfo_CpuBindingEntry_DoNotUse_devm_5ftool_2eproto}, {}};

static void InitDefaultsscc_info_DevmDeviceInfo_devm_5ftool_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hozon::netaos::zmqipc::_DevmDeviceInfo_default_instance_;
    new (ptr) ::hozon::netaos::zmqipc::DevmDeviceInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hozon::netaos::zmqipc::DevmDeviceInfo::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DevmDeviceInfo_devm_5ftool_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_DevmDeviceInfo_devm_5ftool_2eproto}, {
      &scc_info_DevmDeviceInfo_SensorVersionEntry_DoNotUse_devm_5ftool_2eproto.base,}};

static void InitDefaultsscc_info_DevmDeviceInfo_SensorVersionEntry_DoNotUse_devm_5ftool_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hozon::netaos::zmqipc::_DevmDeviceInfo_SensorVersionEntry_DoNotUse_default_instance_;
    new (ptr) ::hozon::netaos::zmqipc::DevmDeviceInfo_SensorVersionEntry_DoNotUse();
  }
  ::hozon::netaos::zmqipc::DevmDeviceInfo_SensorVersionEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DevmDeviceInfo_SensorVersionEntry_DoNotUse_devm_5ftool_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DevmDeviceInfo_SensorVersionEntry_DoNotUse_devm_5ftool_2eproto}, {}};

static void InitDefaultsscc_info_DevmDeviceStatus_devm_5ftool_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hozon::netaos::zmqipc::_DevmDeviceStatus_default_instance_;
    new (ptr) ::hozon::netaos::zmqipc::DevmDeviceStatus();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hozon::netaos::zmqipc::DevmDeviceStatus::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<5> scc_info_DevmDeviceStatus_devm_5ftool_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 5, 0, InitDefaultsscc_info_DevmDeviceStatus_devm_5ftool_2eproto}, {
      &scc_info_DevmDeviceStatus_CameraStatusEntry_DoNotUse_devm_5ftool_2eproto.base,
      &scc_info_DevmDeviceStatus_LidarStatusEntry_DoNotUse_devm_5ftool_2eproto.base,
      &scc_info_DevmDeviceStatus_RadarStatusEntry_DoNotUse_devm_5ftool_2eproto.base,
      &scc_info_DevmDeviceStatus_ImuStatusEntry_DoNotUse_devm_5ftool_2eproto.base,
      &scc_info_DevmDeviceStatus_UssStatusEntry_DoNotUse_devm_5ftool_2eproto.base,}};

static void InitDefaultsscc_info_DevmDeviceStatus_CameraStatusEntry_DoNotUse_devm_5ftool_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hozon::netaos::zmqipc::_DevmDeviceStatus_CameraStatusEntry_DoNotUse_default_instance_;
    new (ptr) ::hozon::netaos::zmqipc::DevmDeviceStatus_CameraStatusEntry_DoNotUse();
  }
  ::hozon::netaos::zmqipc::DevmDeviceStatus_CameraStatusEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DevmDeviceStatus_CameraStatusEntry_DoNotUse_devm_5ftool_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DevmDeviceStatus_CameraStatusEntry_DoNotUse_devm_5ftool_2eproto}, {}};

static void InitDefaultsscc_info_DevmDeviceStatus_ImuStatusEntry_DoNotUse_devm_5ftool_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hozon::netaos::zmqipc::_DevmDeviceStatus_ImuStatusEntry_DoNotUse_default_instance_;
    new (ptr) ::hozon::netaos::zmqipc::DevmDeviceStatus_ImuStatusEntry_DoNotUse();
  }
  ::hozon::netaos::zmqipc::DevmDeviceStatus_ImuStatusEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DevmDeviceStatus_ImuStatusEntry_DoNotUse_devm_5ftool_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DevmDeviceStatus_ImuStatusEntry_DoNotUse_devm_5ftool_2eproto}, {}};

static void InitDefaultsscc_info_DevmDeviceStatus_LidarStatusEntry_DoNotUse_devm_5ftool_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hozon::netaos::zmqipc::_DevmDeviceStatus_LidarStatusEntry_DoNotUse_default_instance_;
    new (ptr) ::hozon::netaos::zmqipc::DevmDeviceStatus_LidarStatusEntry_DoNotUse();
  }
  ::hozon::netaos::zmqipc::DevmDeviceStatus_LidarStatusEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DevmDeviceStatus_LidarStatusEntry_DoNotUse_devm_5ftool_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DevmDeviceStatus_LidarStatusEntry_DoNotUse_devm_5ftool_2eproto}, {}};

static void InitDefaultsscc_info_DevmDeviceStatus_RadarStatusEntry_DoNotUse_devm_5ftool_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hozon::netaos::zmqipc::_DevmDeviceStatus_RadarStatusEntry_DoNotUse_default_instance_;
    new (ptr) ::hozon::netaos::zmqipc::DevmDeviceStatus_RadarStatusEntry_DoNotUse();
  }
  ::hozon::netaos::zmqipc::DevmDeviceStatus_RadarStatusEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DevmDeviceStatus_RadarStatusEntry_DoNotUse_devm_5ftool_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DevmDeviceStatus_RadarStatusEntry_DoNotUse_devm_5ftool_2eproto}, {}};

static void InitDefaultsscc_info_DevmDeviceStatus_UssStatusEntry_DoNotUse_devm_5ftool_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hozon::netaos::zmqipc::_DevmDeviceStatus_UssStatusEntry_DoNotUse_default_instance_;
    new (ptr) ::hozon::netaos::zmqipc::DevmDeviceStatus_UssStatusEntry_DoNotUse();
  }
  ::hozon::netaos::zmqipc::DevmDeviceStatus_UssStatusEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DevmDeviceStatus_UssStatusEntry_DoNotUse_devm_5ftool_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DevmDeviceStatus_UssStatusEntry_DoNotUse_devm_5ftool_2eproto}, {}};

static void InitDefaultsscc_info_DevmDidInfo_devm_5ftool_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hozon::netaos::zmqipc::_DevmDidInfo_default_instance_;
    new (ptr) ::hozon::netaos::zmqipc::DevmDidInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hozon::netaos::zmqipc::DevmDidInfo::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DevmDidInfo_devm_5ftool_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DevmDidInfo_devm_5ftool_2eproto}, {}};

static void InitDefaultsscc_info_DevmReq_devm_5ftool_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hozon::netaos::zmqipc::_DevmReq_default_instance_;
    new (ptr) ::hozon::netaos::zmqipc::DevmReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hozon::netaos::zmqipc::DevmReq::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DevmReq_devm_5ftool_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DevmReq_devm_5ftool_2eproto}, {}};

static void InitDefaultsscc_info_DevmTemperature_devm_5ftool_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hozon::netaos::zmqipc::_DevmTemperature_default_instance_;
    new (ptr) ::hozon::netaos::zmqipc::DevmTemperature();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hozon::netaos::zmqipc::DevmTemperature::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DevmTemperature_devm_5ftool_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DevmTemperature_devm_5ftool_2eproto}, {}};

static void InitDefaultsscc_info_DevmVoltage_devm_5ftool_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hozon::netaos::zmqipc::_DevmVoltage_default_instance_;
    new (ptr) ::hozon::netaos::zmqipc::DevmVoltage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hozon::netaos::zmqipc::DevmVoltage::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DevmVoltage_devm_5ftool_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DevmVoltage_devm_5ftool_2eproto}, {}};

static void InitDefaultsscc_info_UpgradeCommonReq_devm_5ftool_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hozon::netaos::zmqipc::_UpgradeCommonReq_default_instance_;
    new (ptr) ::hozon::netaos::zmqipc::UpgradeCommonReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hozon::netaos::zmqipc::UpgradeCommonReq::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UpgradeCommonReq_devm_5ftool_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UpgradeCommonReq_devm_5ftool_2eproto}, {}};

static void InitDefaultsscc_info_UpgradeCurPartitionResp_devm_5ftool_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hozon::netaos::zmqipc::_UpgradeCurPartitionResp_default_instance_;
    new (ptr) ::hozon::netaos::zmqipc::UpgradeCurPartitionResp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hozon::netaos::zmqipc::UpgradeCurPartitionResp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UpgradeCurPartitionResp_devm_5ftool_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UpgradeCurPartitionResp_devm_5ftool_2eproto}, {}};

static void InitDefaultsscc_info_UpgradeFinishResp_devm_5ftool_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hozon::netaos::zmqipc::_UpgradeFinishResp_default_instance_;
    new (ptr) ::hozon::netaos::zmqipc::UpgradeFinishResp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hozon::netaos::zmqipc::UpgradeFinishResp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UpgradeFinishResp_devm_5ftool_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UpgradeFinishResp_devm_5ftool_2eproto}, {}};

static void InitDefaultsscc_info_UpgradePrecheckResp_devm_5ftool_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hozon::netaos::zmqipc::_UpgradePrecheckResp_default_instance_;
    new (ptr) ::hozon::netaos::zmqipc::UpgradePrecheckResp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hozon::netaos::zmqipc::UpgradePrecheckResp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UpgradePrecheckResp_devm_5ftool_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UpgradePrecheckResp_devm_5ftool_2eproto}, {}};

static void InitDefaultsscc_info_UpgradeProgressResp_devm_5ftool_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hozon::netaos::zmqipc::_UpgradeProgressResp_default_instance_;
    new (ptr) ::hozon::netaos::zmqipc::UpgradeProgressResp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hozon::netaos::zmqipc::UpgradeProgressResp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UpgradeProgressResp_devm_5ftool_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UpgradeProgressResp_devm_5ftool_2eproto}, {}};

static void InitDefaultsscc_info_UpgradeStatusResp_devm_5ftool_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hozon::netaos::zmqipc::_UpgradeStatusResp_default_instance_;
    new (ptr) ::hozon::netaos::zmqipc::UpgradeStatusResp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hozon::netaos::zmqipc::UpgradeStatusResp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UpgradeStatusResp_devm_5ftool_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UpgradeStatusResp_devm_5ftool_2eproto}, {}};

static void InitDefaultsscc_info_UpgradeSwitchSlotResp_devm_5ftool_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hozon::netaos::zmqipc::_UpgradeSwitchSlotResp_default_instance_;
    new (ptr) ::hozon::netaos::zmqipc::UpgradeSwitchSlotResp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hozon::netaos::zmqipc::UpgradeSwitchSlotResp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UpgradeSwitchSlotResp_devm_5ftool_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UpgradeSwitchSlotResp_devm_5ftool_2eproto}, {}};

static void InitDefaultsscc_info_UpgradeUpdateReq_devm_5ftool_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hozon::netaos::zmqipc::_UpgradeUpdateReq_default_instance_;
    new (ptr) ::hozon::netaos::zmqipc::UpgradeUpdateReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hozon::netaos::zmqipc::UpgradeUpdateReq::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UpgradeUpdateReq_devm_5ftool_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UpgradeUpdateReq_devm_5ftool_2eproto}, {}};

static void InitDefaultsscc_info_UpgradeUpdateResp_devm_5ftool_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hozon::netaos::zmqipc::_UpgradeUpdateResp_default_instance_;
    new (ptr) ::hozon::netaos::zmqipc::UpgradeUpdateResp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hozon::netaos::zmqipc::UpgradeUpdateResp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UpgradeUpdateResp_devm_5ftool_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UpgradeUpdateResp_devm_5ftool_2eproto}, {}};

static void InitDefaultsscc_info_UpgradeVersionResp_devm_5ftool_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hozon::netaos::zmqipc::_UpgradeVersionResp_default_instance_;
    new (ptr) ::hozon::netaos::zmqipc::UpgradeVersionResp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hozon::netaos::zmqipc::UpgradeVersionResp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UpgradeVersionResp_devm_5ftool_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_UpgradeVersionResp_devm_5ftool_2eproto}, {
      &scc_info_UpgradeVersionResp_SensorVersionEntry_DoNotUse_devm_5ftool_2eproto.base,}};

static void InitDefaultsscc_info_UpgradeVersionResp_SensorVersionEntry_DoNotUse_devm_5ftool_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hozon::netaos::zmqipc::_UpgradeVersionResp_SensorVersionEntry_DoNotUse_default_instance_;
    new (ptr) ::hozon::netaos::zmqipc::UpgradeVersionResp_SensorVersionEntry_DoNotUse();
  }
  ::hozon::netaos::zmqipc::UpgradeVersionResp_SensorVersionEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UpgradeVersionResp_SensorVersionEntry_DoNotUse_devm_5ftool_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UpgradeVersionResp_SensorVersionEntry_DoNotUse_devm_5ftool_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_devm_5ftool_2eproto[25];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_devm_5ftool_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_devm_5ftool_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_devm_5ftool_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::DevmDidInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::DevmDidInfo, did_),
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::DevmDidInfo, data_value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::DevmReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::DevmReq, req_type_),
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::DevmReq, data_value_),
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::DevmCpuInfo_CpuBindingEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::DevmCpuInfo_CpuBindingEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::DevmCpuInfo_CpuBindingEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::DevmCpuInfo_CpuBindingEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::DevmCpuInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::DevmCpuInfo, architecture_),
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::DevmCpuInfo, cpus_),
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::DevmCpuInfo, online_cpus_),
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::DevmCpuInfo, offline_cpus_),
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::DevmCpuInfo, model_name_),
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::DevmCpuInfo, cpu_max_mhz_),
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::DevmCpuInfo, cpu_min_mhz_),
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::DevmCpuInfo, l1d_catch_),
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::DevmCpuInfo, l1i_catch_),
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::DevmCpuInfo, l2_catch_),
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::DevmCpuInfo, l3_catch_),
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::DevmCpuInfo, temp_cpu_),
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::DevmCpuInfo, temp_soc0_),
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::DevmCpuInfo, temp_soc1_),
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::DevmCpuInfo, temp_soc2_),
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::DevmCpuInfo, cpu_binding_),
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::DevmCpuInfo, cpus_usage_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::DevmTemperature, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::DevmTemperature, soc_temp_),
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::DevmTemperature, mcu_temp_),
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::DevmTemperature, ext0_temp_),
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::DevmTemperature, ext1_temp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::DevmVoltage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::DevmVoltage, kl15_vol_),
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::DevmVoltage, kl30_vol_),
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::DevmDeviceInfo_SensorVersionEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::DevmDeviceInfo_SensorVersionEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::DevmDeviceInfo_SensorVersionEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::DevmDeviceInfo_SensorVersionEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::DevmDeviceInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::DevmDeviceInfo, soc_version_),
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::DevmDeviceInfo, mcu_version_),
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::DevmDeviceInfo, dsv_version_),
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::DevmDeviceInfo, swt_version_),
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::DevmDeviceInfo, uss_version_),
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::DevmDeviceInfo, soc_type_),
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::DevmDeviceInfo, mcu_type_),
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::DevmDeviceInfo, switch_type_),
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::DevmDeviceInfo, dsv_type_),
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::DevmDeviceInfo, sensor_version_),
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::DevmDeviceStatus_CameraStatusEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::DevmDeviceStatus_CameraStatusEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::DevmDeviceStatus_CameraStatusEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::DevmDeviceStatus_CameraStatusEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::DevmDeviceStatus_LidarStatusEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::DevmDeviceStatus_LidarStatusEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::DevmDeviceStatus_LidarStatusEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::DevmDeviceStatus_LidarStatusEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::DevmDeviceStatus_RadarStatusEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::DevmDeviceStatus_RadarStatusEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::DevmDeviceStatus_RadarStatusEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::DevmDeviceStatus_RadarStatusEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::DevmDeviceStatus_ImuStatusEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::DevmDeviceStatus_ImuStatusEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::DevmDeviceStatus_ImuStatusEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::DevmDeviceStatus_ImuStatusEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::DevmDeviceStatus_UssStatusEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::DevmDeviceStatus_UssStatusEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::DevmDeviceStatus_UssStatusEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::DevmDeviceStatus_UssStatusEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::DevmDeviceStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::DevmDeviceStatus, soc_status_),
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::DevmDeviceStatus, mcu_status_),
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::DevmDeviceStatus, camera_status_),
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::DevmDeviceStatus, lidar_status_),
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::DevmDeviceStatus, radar_status_),
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::DevmDeviceStatus, imu_status_),
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::DevmDeviceStatus, uss_status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::UpgradeCommonReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::UpgradeCommonReq, platform_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::UpgradeStatusResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::UpgradeStatusResp, update_status_),
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::UpgradeStatusResp, error_code_),
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::UpgradeStatusResp, error_msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::UpgradePrecheckResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::UpgradePrecheckResp, space_),
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::UpgradePrecheckResp, speed_),
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::UpgradePrecheckResp, gear_),
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::UpgradePrecheckResp, error_code_),
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::UpgradePrecheckResp, error_msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::UpgradeProgressResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::UpgradeProgressResp, progress_),
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::UpgradeProgressResp, error_code_),
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::UpgradeProgressResp, error_msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::UpgradeUpdateReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::UpgradeUpdateReq, start_with_precheck_),
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::UpgradeUpdateReq, skip_version_),
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::UpgradeUpdateReq, ecu_mode_),
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::UpgradeUpdateReq, package_path_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::UpgradeUpdateResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::UpgradeUpdateResp, error_code_),
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::UpgradeUpdateResp, error_msg_),
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::UpgradeVersionResp_SensorVersionEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::UpgradeVersionResp_SensorVersionEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::UpgradeVersionResp_SensorVersionEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::UpgradeVersionResp_SensorVersionEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::UpgradeVersionResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::UpgradeVersionResp, major_version_),
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::UpgradeVersionResp, soc_version_),
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::UpgradeVersionResp, mcu_version_),
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::UpgradeVersionResp, dsv_version_),
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::UpgradeVersionResp, swt_version_),
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::UpgradeVersionResp, sensor_version_),
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::UpgradeVersionResp, error_code_),
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::UpgradeVersionResp, error_msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::UpgradeFinishResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::UpgradeFinishResp, error_code_),
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::UpgradeFinishResp, error_msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::UpgradeCurPartitionResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::UpgradeCurPartitionResp, cur_partition_),
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::UpgradeCurPartitionResp, error_code_),
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::UpgradeCurPartitionResp, error_msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::UpgradeSwitchSlotResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::UpgradeSwitchSlotResp, error_code_),
  PROTOBUF_FIELD_OFFSET(::hozon::netaos::zmqipc::UpgradeSwitchSlotResp, error_msg_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::hozon::netaos::zmqipc::DevmDidInfo)},
  { 7, -1, sizeof(::hozon::netaos::zmqipc::DevmReq)},
  { 14, 21, sizeof(::hozon::netaos::zmqipc::DevmCpuInfo_CpuBindingEntry_DoNotUse)},
  { 23, -1, sizeof(::hozon::netaos::zmqipc::DevmCpuInfo)},
  { 45, -1, sizeof(::hozon::netaos::zmqipc::DevmTemperature)},
  { 54, -1, sizeof(::hozon::netaos::zmqipc::DevmVoltage)},
  { 61, 68, sizeof(::hozon::netaos::zmqipc::DevmDeviceInfo_SensorVersionEntry_DoNotUse)},
  { 70, -1, sizeof(::hozon::netaos::zmqipc::DevmDeviceInfo)},
  { 85, 92, sizeof(::hozon::netaos::zmqipc::DevmDeviceStatus_CameraStatusEntry_DoNotUse)},
  { 94, 101, sizeof(::hozon::netaos::zmqipc::DevmDeviceStatus_LidarStatusEntry_DoNotUse)},
  { 103, 110, sizeof(::hozon::netaos::zmqipc::DevmDeviceStatus_RadarStatusEntry_DoNotUse)},
  { 112, 119, sizeof(::hozon::netaos::zmqipc::DevmDeviceStatus_ImuStatusEntry_DoNotUse)},
  { 121, 128, sizeof(::hozon::netaos::zmqipc::DevmDeviceStatus_UssStatusEntry_DoNotUse)},
  { 130, -1, sizeof(::hozon::netaos::zmqipc::DevmDeviceStatus)},
  { 142, -1, sizeof(::hozon::netaos::zmqipc::UpgradeCommonReq)},
  { 148, -1, sizeof(::hozon::netaos::zmqipc::UpgradeStatusResp)},
  { 156, -1, sizeof(::hozon::netaos::zmqipc::UpgradePrecheckResp)},
  { 166, -1, sizeof(::hozon::netaos::zmqipc::UpgradeProgressResp)},
  { 174, -1, sizeof(::hozon::netaos::zmqipc::UpgradeUpdateReq)},
  { 183, -1, sizeof(::hozon::netaos::zmqipc::UpgradeUpdateResp)},
  { 190, 197, sizeof(::hozon::netaos::zmqipc::UpgradeVersionResp_SensorVersionEntry_DoNotUse)},
  { 199, -1, sizeof(::hozon::netaos::zmqipc::UpgradeVersionResp)},
  { 212, -1, sizeof(::hozon::netaos::zmqipc::UpgradeFinishResp)},
  { 219, -1, sizeof(::hozon::netaos::zmqipc::UpgradeCurPartitionResp)},
  { 227, -1, sizeof(::hozon::netaos::zmqipc::UpgradeSwitchSlotResp)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hozon::netaos::zmqipc::_DevmDidInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hozon::netaos::zmqipc::_DevmReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hozon::netaos::zmqipc::_DevmCpuInfo_CpuBindingEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hozon::netaos::zmqipc::_DevmCpuInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hozon::netaos::zmqipc::_DevmTemperature_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hozon::netaos::zmqipc::_DevmVoltage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hozon::netaos::zmqipc::_DevmDeviceInfo_SensorVersionEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hozon::netaos::zmqipc::_DevmDeviceInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hozon::netaos::zmqipc::_DevmDeviceStatus_CameraStatusEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hozon::netaos::zmqipc::_DevmDeviceStatus_LidarStatusEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hozon::netaos::zmqipc::_DevmDeviceStatus_RadarStatusEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hozon::netaos::zmqipc::_DevmDeviceStatus_ImuStatusEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hozon::netaos::zmqipc::_DevmDeviceStatus_UssStatusEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hozon::netaos::zmqipc::_DevmDeviceStatus_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hozon::netaos::zmqipc::_UpgradeCommonReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hozon::netaos::zmqipc::_UpgradeStatusResp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hozon::netaos::zmqipc::_UpgradePrecheckResp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hozon::netaos::zmqipc::_UpgradeProgressResp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hozon::netaos::zmqipc::_UpgradeUpdateReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hozon::netaos::zmqipc::_UpgradeUpdateResp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hozon::netaos::zmqipc::_UpgradeVersionResp_SensorVersionEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hozon::netaos::zmqipc::_UpgradeVersionResp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hozon::netaos::zmqipc::_UpgradeFinishResp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hozon::netaos::zmqipc::_UpgradeCurPartitionResp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hozon::netaos::zmqipc::_UpgradeSwitchSlotResp_default_instance_),
};

const char descriptor_table_protodef_devm_5ftool_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\017devm_tool.proto\022\023hozon.netaos.zmqipc\"."
  "\n\013DevmDidInfo\022\013\n\003did\030\001 \001(\r\022\022\n\ndata_value"
  "\030\002 \001(\t\"/\n\007DevmReq\022\020\n\010req_type\030\001 \001(\t\022\022\n\nd"
  "ata_value\030\002 \001(\t\"\275\003\n\013DevmCpuInfo\022\024\n\014archi"
  "tecture\030\001 \001(\t\022\014\n\004cpus\030\002 \001(\003\022\023\n\013online_cp"
  "us\030\003 \001(\t\022\024\n\014offline_cpus\030\004 \001(\t\022\022\n\nmodel_"
  "name\030\005 \001(\t\022\023\n\013cpu_max_mhz\030\006 \001(\002\022\023\n\013cpu_m"
  "in_mhz\030\007 \001(\002\022\021\n\tl1d_catch\030\010 \001(\003\022\021\n\tl1i_c"
  "atch\030\t \001(\003\022\020\n\010l2_catch\030\n \001(\003\022\020\n\010l3_catch"
  "\030\013 \001(\003\022\020\n\010temp_cpu\030\014 \001(\002\022\021\n\ttemp_soc0\030\r "
  "\001(\002\022\021\n\ttemp_soc1\030\016 \001(\002\022\021\n\ttemp_soc2\030\017 \001("
  "\002\022E\n\013cpu_binding\030\020 \003(\01320.hozon.netaos.zm"
  "qipc.DevmCpuInfo.CpuBindingEntry\022\022\n\ncpus"
  "_usage\030\021 \003(\002\0321\n\017CpuBindingEntry\022\013\n\003key\030\001"
  " \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"[\n\017DevmTemperatu"
  "re\022\020\n\010soc_temp\030\001 \001(\002\022\020\n\010mcu_temp\030\002 \001(\002\022\021"
  "\n\text0_temp\030\003 \001(\002\022\021\n\text1_temp\030\004 \001(\002\"1\n\013"
  "DevmVoltage\022\020\n\010kl15_vol\030\001 \001(\005\022\020\n\010kl30_vo"
  "l\030\002 \001(\002\"\312\002\n\016DevmDeviceInfo\022\023\n\013soc_versio"
  "n\030\001 \001(\t\022\023\n\013mcu_version\030\002 \001(\t\022\023\n\013dsv_vers"
  "ion\030\003 \001(\t\022\023\n\013swt_version\030\004 \001(\t\022\023\n\013uss_ve"
  "rsion\030\005 \001(\t\022\020\n\010soc_type\030\006 \001(\t\022\020\n\010mcu_typ"
  "e\030\007 \001(\t\022\023\n\013switch_type\030\010 \001(\t\022\020\n\010dsv_type"
  "\030\t \001(\t\022N\n\016sensor_version\030\n \003(\01326.hozon.n"
  "etaos.zmqipc.DevmDeviceInfo.SensorVersio"
  "nEntry\0324\n\022SensorVersionEntry\022\013\n\003key\030\001 \001("
  "\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\273\005\n\020DevmDeviceStatu"
  "s\022\022\n\nsoc_status\030\001 \001(\t\022\022\n\nmcu_status\030\002 \001("
  "\t\022N\n\rcamera_status\030\003 \003(\01327.hozon.netaos."
  "zmqipc.DevmDeviceStatus.CameraStatusEntr"
  "y\022L\n\014lidar_status\030\004 \003(\01326.hozon.netaos.z"
  "mqipc.DevmDeviceStatus.LidarStatusEntry\022"
  "L\n\014radar_status\030\005 \003(\01326.hozon.netaos.zmq"
  "ipc.DevmDeviceStatus.RadarStatusEntry\022H\n"
  "\nimu_status\030\006 \003(\01324.hozon.netaos.zmqipc."
  "DevmDeviceStatus.ImuStatusEntry\022H\n\nuss_s"
  "tatus\030\007 \003(\01324.hozon.netaos.zmqipc.DevmDe"
  "viceStatus.UssStatusEntry\0323\n\021CameraStatu"
  "sEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\0322"
  "\n\020LidarStatusEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value"
  "\030\002 \001(\t:\0028\001\0322\n\020RadarStatusEntry\022\013\n\003key\030\001 "
  "\001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\0320\n\016ImuStatusEntry"
  "\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\0320\n\016UssS"
  "tatusEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\002"
  "8\001\"$\n\020UpgradeCommonReq\022\020\n\010platform\030\001 \001(\r"
  "\"Q\n\021UpgradeStatusResp\022\025\n\rupdate_status\030\001"
  " \001(\t\022\022\n\nerror_code\030\002 \001(\r\022\021\n\terror_msg\030\003 "
  "\001(\t\"h\n\023UpgradePrecheckResp\022\r\n\005space\030\001 \001("
  "\010\022\r\n\005speed\030\002 \001(\010\022\014\n\004gear\030\003 \001(\010\022\022\n\nerror_"
  "code\030\004 \001(\r\022\021\n\terror_msg\030\005 \001(\t\"N\n\023Upgrade"
  "ProgressResp\022\020\n\010progress\030\001 \001(\r\022\022\n\nerror_"
  "code\030\002 \001(\r\022\021\n\terror_msg\030\003 \001(\t\"m\n\020Upgrade"
  "UpdateReq\022\033\n\023start_with_precheck\030\001 \001(\010\022\024"
  "\n\014skip_version\030\002 \001(\010\022\020\n\010ecu_mode\030\003 \001(\r\022\024"
  "\n\014package_path\030\004 \001(\t\":\n\021UpgradeUpdateRes"
  "p\022\022\n\nerror_code\030\001 \001(\r\022\021\n\terror_msg\030\002 \001(\t"
  "\"\260\002\n\022UpgradeVersionResp\022\025\n\rmajor_version"
  "\030\001 \001(\t\022\023\n\013soc_version\030\002 \001(\t\022\023\n\013mcu_versi"
  "on\030\003 \001(\t\022\023\n\013dsv_version\030\004 \001(\t\022\023\n\013swt_ver"
  "sion\030\005 \001(\t\022R\n\016sensor_version\030\006 \003(\0132:.hoz"
  "on.netaos.zmqipc.UpgradeVersionResp.Sens"
  "orVersionEntry\022\022\n\nerror_code\030\007 \001(\r\022\021\n\ter"
  "ror_msg\030\010 \001(\t\0324\n\022SensorVersionEntry\022\013\n\003k"
  "ey\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\":\n\021UpgradeFi"
  "nishResp\022\022\n\nerror_code\030\001 \001(\r\022\021\n\terror_ms"
  "g\030\002 \001(\t\"W\n\027UpgradeCurPartitionResp\022\025\n\rcu"
  "r_partition\030\001 \001(\t\022\022\n\nerror_code\030\002 \001(\r\022\021\n"
  "\terror_msg\030\003 \001(\t\">\n\025UpgradeSwitchSlotRes"
  "p\022\022\n\nerror_code\030\001 \001(\r\022\021\n\terror_msg\030\002 \001(\t"
  "b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_devm_5ftool_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_devm_5ftool_2eproto_sccs[25] = {
  &scc_info_DevmCpuInfo_devm_5ftool_2eproto.base,
  &scc_info_DevmCpuInfo_CpuBindingEntry_DoNotUse_devm_5ftool_2eproto.base,
  &scc_info_DevmDeviceInfo_devm_5ftool_2eproto.base,
  &scc_info_DevmDeviceInfo_SensorVersionEntry_DoNotUse_devm_5ftool_2eproto.base,
  &scc_info_DevmDeviceStatus_devm_5ftool_2eproto.base,
  &scc_info_DevmDeviceStatus_CameraStatusEntry_DoNotUse_devm_5ftool_2eproto.base,
  &scc_info_DevmDeviceStatus_ImuStatusEntry_DoNotUse_devm_5ftool_2eproto.base,
  &scc_info_DevmDeviceStatus_LidarStatusEntry_DoNotUse_devm_5ftool_2eproto.base,
  &scc_info_DevmDeviceStatus_RadarStatusEntry_DoNotUse_devm_5ftool_2eproto.base,
  &scc_info_DevmDeviceStatus_UssStatusEntry_DoNotUse_devm_5ftool_2eproto.base,
  &scc_info_DevmDidInfo_devm_5ftool_2eproto.base,
  &scc_info_DevmReq_devm_5ftool_2eproto.base,
  &scc_info_DevmTemperature_devm_5ftool_2eproto.base,
  &scc_info_DevmVoltage_devm_5ftool_2eproto.base,
  &scc_info_UpgradeCommonReq_devm_5ftool_2eproto.base,
  &scc_info_UpgradeCurPartitionResp_devm_5ftool_2eproto.base,
  &scc_info_UpgradeFinishResp_devm_5ftool_2eproto.base,
  &scc_info_UpgradePrecheckResp_devm_5ftool_2eproto.base,
  &scc_info_UpgradeProgressResp_devm_5ftool_2eproto.base,
  &scc_info_UpgradeStatusResp_devm_5ftool_2eproto.base,
  &scc_info_UpgradeSwitchSlotResp_devm_5ftool_2eproto.base,
  &scc_info_UpgradeUpdateReq_devm_5ftool_2eproto.base,
  &scc_info_UpgradeUpdateResp_devm_5ftool_2eproto.base,
  &scc_info_UpgradeVersionResp_devm_5ftool_2eproto.base,
  &scc_info_UpgradeVersionResp_SensorVersionEntry_DoNotUse_devm_5ftool_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_devm_5ftool_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_devm_5ftool_2eproto = {
  false, false, descriptor_table_protodef_devm_5ftool_2eproto, "devm_tool.proto", 2768,
  &descriptor_table_devm_5ftool_2eproto_once, descriptor_table_devm_5ftool_2eproto_sccs, descriptor_table_devm_5ftool_2eproto_deps, 25, 0,
  schemas, file_default_instances, TableStruct_devm_5ftool_2eproto::offsets,
  file_level_metadata_devm_5ftool_2eproto, 25, file_level_enum_descriptors_devm_5ftool_2eproto, file_level_service_descriptors_devm_5ftool_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_devm_5ftool_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_devm_5ftool_2eproto)), true);
namespace hozon {
namespace netaos {
namespace zmqipc {

// ===================================================================

void DevmDidInfo::InitAsDefaultInstance() {
}
class DevmDidInfo::_Internal {
 public:
};

DevmDidInfo::DevmDidInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hozon.netaos.zmqipc.DevmDidInfo)
}
DevmDidInfo::DevmDidInfo(const DevmDidInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  data_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_data_value().empty()) {
    data_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_data_value(),
      GetArena());
  }
  did_ = from.did_;
  // @@protoc_insertion_point(copy_constructor:hozon.netaos.zmqipc.DevmDidInfo)
}

void DevmDidInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DevmDidInfo_devm_5ftool_2eproto.base);
  data_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  did_ = 0u;
}

DevmDidInfo::~DevmDidInfo() {
  // @@protoc_insertion_point(destructor:hozon.netaos.zmqipc.DevmDidInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DevmDidInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  data_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DevmDidInfo::ArenaDtor(void* object) {
  DevmDidInfo* _this = reinterpret_cast< DevmDidInfo* >(object);
  (void)_this;
}
void DevmDidInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DevmDidInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DevmDidInfo& DevmDidInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DevmDidInfo_devm_5ftool_2eproto.base);
  return *internal_default_instance();
}


void DevmDidInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:hozon.netaos.zmqipc.DevmDidInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_value_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  did_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DevmDidInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 did = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          did_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string data_value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_data_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hozon.netaos.zmqipc.DevmDidInfo.data_value"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DevmDidInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hozon.netaos.zmqipc.DevmDidInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 did = 1;
  if (this->did() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_did(), target);
  }

  // string data_value = 2;
  if (this->data_value().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_data_value().data(), static_cast<int>(this->_internal_data_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hozon.netaos.zmqipc.DevmDidInfo.data_value");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_data_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hozon.netaos.zmqipc.DevmDidInfo)
  return target;
}

size_t DevmDidInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hozon.netaos.zmqipc.DevmDidInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string data_value = 2;
  if (this->data_value().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_data_value());
  }

  // uint32 did = 1;
  if (this->did() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_did());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DevmDidInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hozon.netaos.zmqipc.DevmDidInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const DevmDidInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DevmDidInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hozon.netaos.zmqipc.DevmDidInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hozon.netaos.zmqipc.DevmDidInfo)
    MergeFrom(*source);
  }
}

void DevmDidInfo::MergeFrom(const DevmDidInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hozon.netaos.zmqipc.DevmDidInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data_value().size() > 0) {
    _internal_set_data_value(from._internal_data_value());
  }
  if (from.did() != 0) {
    _internal_set_did(from._internal_did());
  }
}

void DevmDidInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hozon.netaos.zmqipc.DevmDidInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DevmDidInfo::CopyFrom(const DevmDidInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hozon.netaos.zmqipc.DevmDidInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DevmDidInfo::IsInitialized() const {
  return true;
}

void DevmDidInfo::InternalSwap(DevmDidInfo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  data_value_.Swap(&other->data_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(did_, other->did_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DevmDidInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DevmReq::InitAsDefaultInstance() {
}
class DevmReq::_Internal {
 public:
};

DevmReq::DevmReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hozon.netaos.zmqipc.DevmReq)
}
DevmReq::DevmReq(const DevmReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  req_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_req_type().empty()) {
    req_type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_req_type(),
      GetArena());
  }
  data_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_data_value().empty()) {
    data_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_data_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:hozon.netaos.zmqipc.DevmReq)
}

void DevmReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DevmReq_devm_5ftool_2eproto.base);
  req_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DevmReq::~DevmReq() {
  // @@protoc_insertion_point(destructor:hozon.netaos.zmqipc.DevmReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DevmReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  req_type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DevmReq::ArenaDtor(void* object) {
  DevmReq* _this = reinterpret_cast< DevmReq* >(object);
  (void)_this;
}
void DevmReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DevmReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DevmReq& DevmReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DevmReq_devm_5ftool_2eproto.base);
  return *internal_default_instance();
}


void DevmReq::Clear() {
// @@protoc_insertion_point(message_clear_start:hozon.netaos.zmqipc.DevmReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  req_type_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  data_value_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DevmReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string req_type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_req_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hozon.netaos.zmqipc.DevmReq.req_type"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string data_value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_data_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hozon.netaos.zmqipc.DevmReq.data_value"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DevmReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hozon.netaos.zmqipc.DevmReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string req_type = 1;
  if (this->req_type().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_req_type().data(), static_cast<int>(this->_internal_req_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hozon.netaos.zmqipc.DevmReq.req_type");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_req_type(), target);
  }

  // string data_value = 2;
  if (this->data_value().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_data_value().data(), static_cast<int>(this->_internal_data_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hozon.netaos.zmqipc.DevmReq.data_value");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_data_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hozon.netaos.zmqipc.DevmReq)
  return target;
}

size_t DevmReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hozon.netaos.zmqipc.DevmReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string req_type = 1;
  if (this->req_type().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_req_type());
  }

  // string data_value = 2;
  if (this->data_value().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_data_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DevmReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hozon.netaos.zmqipc.DevmReq)
  GOOGLE_DCHECK_NE(&from, this);
  const DevmReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DevmReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hozon.netaos.zmqipc.DevmReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hozon.netaos.zmqipc.DevmReq)
    MergeFrom(*source);
  }
}

void DevmReq::MergeFrom(const DevmReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hozon.netaos.zmqipc.DevmReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.req_type().size() > 0) {
    _internal_set_req_type(from._internal_req_type());
  }
  if (from.data_value().size() > 0) {
    _internal_set_data_value(from._internal_data_value());
  }
}

void DevmReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hozon.netaos.zmqipc.DevmReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DevmReq::CopyFrom(const DevmReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hozon.netaos.zmqipc.DevmReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DevmReq::IsInitialized() const {
  return true;
}

void DevmReq::InternalSwap(DevmReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  req_type_.Swap(&other->req_type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  data_value_.Swap(&other->data_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata DevmReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

DevmCpuInfo_CpuBindingEntry_DoNotUse::DevmCpuInfo_CpuBindingEntry_DoNotUse() {}
DevmCpuInfo_CpuBindingEntry_DoNotUse::DevmCpuInfo_CpuBindingEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void DevmCpuInfo_CpuBindingEntry_DoNotUse::MergeFrom(const DevmCpuInfo_CpuBindingEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata DevmCpuInfo_CpuBindingEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void DevmCpuInfo_CpuBindingEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void DevmCpuInfo::InitAsDefaultInstance() {
}
class DevmCpuInfo::_Internal {
 public:
};

DevmCpuInfo::DevmCpuInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  cpu_binding_(arena),
  cpus_usage_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hozon.netaos.zmqipc.DevmCpuInfo)
}
DevmCpuInfo::DevmCpuInfo(const DevmCpuInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      cpus_usage_(from.cpus_usage_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  cpu_binding_.MergeFrom(from.cpu_binding_);
  architecture_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_architecture().empty()) {
    architecture_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_architecture(),
      GetArena());
  }
  online_cpus_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_online_cpus().empty()) {
    online_cpus_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_online_cpus(),
      GetArena());
  }
  offline_cpus_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_offline_cpus().empty()) {
    offline_cpus_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_offline_cpus(),
      GetArena());
  }
  model_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_model_name().empty()) {
    model_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_model_name(),
      GetArena());
  }
  ::memcpy(&cpus_, &from.cpus_,
    static_cast<size_t>(reinterpret_cast<char*>(&temp_soc2_) -
    reinterpret_cast<char*>(&cpus_)) + sizeof(temp_soc2_));
  // @@protoc_insertion_point(copy_constructor:hozon.netaos.zmqipc.DevmCpuInfo)
}

void DevmCpuInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DevmCpuInfo_devm_5ftool_2eproto.base);
  architecture_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  online_cpus_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  offline_cpus_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  model_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&cpus_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&temp_soc2_) -
      reinterpret_cast<char*>(&cpus_)) + sizeof(temp_soc2_));
}

DevmCpuInfo::~DevmCpuInfo() {
  // @@protoc_insertion_point(destructor:hozon.netaos.zmqipc.DevmCpuInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DevmCpuInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  architecture_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  online_cpus_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  offline_cpus_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  model_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DevmCpuInfo::ArenaDtor(void* object) {
  DevmCpuInfo* _this = reinterpret_cast< DevmCpuInfo* >(object);
  (void)_this;
}
void DevmCpuInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DevmCpuInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DevmCpuInfo& DevmCpuInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DevmCpuInfo_devm_5ftool_2eproto.base);
  return *internal_default_instance();
}


void DevmCpuInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:hozon.netaos.zmqipc.DevmCpuInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cpu_binding_.Clear();
  cpus_usage_.Clear();
  architecture_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  online_cpus_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  offline_cpus_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  model_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&cpus_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&temp_soc2_) -
      reinterpret_cast<char*>(&cpus_)) + sizeof(temp_soc2_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DevmCpuInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string architecture = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_architecture();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hozon.netaos.zmqipc.DevmCpuInfo.architecture"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 cpus = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          cpus_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string online_cpus = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_online_cpus();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hozon.netaos.zmqipc.DevmCpuInfo.online_cpus"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string offline_cpus = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_offline_cpus();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hozon.netaos.zmqipc.DevmCpuInfo.offline_cpus"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string model_name = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_model_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hozon.netaos.zmqipc.DevmCpuInfo.model_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float cpu_max_mhz = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 53)) {
          cpu_max_mhz_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float cpu_min_mhz = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 61)) {
          cpu_min_mhz_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // int64 l1d_catch = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          l1d_catch_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 l1i_catch = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          l1i_catch_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 l2_catch = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          l2_catch_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 l3_catch = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          l3_catch_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float temp_cpu = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 101)) {
          temp_cpu_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float temp_soc0 = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 109)) {
          temp_soc0_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float temp_soc1 = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 117)) {
          temp_soc1_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float temp_soc2 = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 125)) {
          temp_soc2_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // map<string, string> cpu_binding = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 130)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(&cpu_binding_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<130>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated float cpus_usage = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 138)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFloatParser(_internal_mutable_cpus_usage(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 141) {
          _internal_add_cpus_usage(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DevmCpuInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hozon.netaos.zmqipc.DevmCpuInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string architecture = 1;
  if (this->architecture().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_architecture().data(), static_cast<int>(this->_internal_architecture().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hozon.netaos.zmqipc.DevmCpuInfo.architecture");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_architecture(), target);
  }

  // int64 cpus = 2;
  if (this->cpus() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_cpus(), target);
  }

  // string online_cpus = 3;
  if (this->online_cpus().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_online_cpus().data(), static_cast<int>(this->_internal_online_cpus().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hozon.netaos.zmqipc.DevmCpuInfo.online_cpus");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_online_cpus(), target);
  }

  // string offline_cpus = 4;
  if (this->offline_cpus().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_offline_cpus().data(), static_cast<int>(this->_internal_offline_cpus().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hozon.netaos.zmqipc.DevmCpuInfo.offline_cpus");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_offline_cpus(), target);
  }

  // string model_name = 5;
  if (this->model_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_model_name().data(), static_cast<int>(this->_internal_model_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hozon.netaos.zmqipc.DevmCpuInfo.model_name");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_model_name(), target);
  }

  // float cpu_max_mhz = 6;
  if (!(this->cpu_max_mhz() <= 0 && this->cpu_max_mhz() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(6, this->_internal_cpu_max_mhz(), target);
  }

  // float cpu_min_mhz = 7;
  if (!(this->cpu_min_mhz() <= 0 && this->cpu_min_mhz() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(7, this->_internal_cpu_min_mhz(), target);
  }

  // int64 l1d_catch = 8;
  if (this->l1d_catch() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(8, this->_internal_l1d_catch(), target);
  }

  // int64 l1i_catch = 9;
  if (this->l1i_catch() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(9, this->_internal_l1i_catch(), target);
  }

  // int64 l2_catch = 10;
  if (this->l2_catch() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(10, this->_internal_l2_catch(), target);
  }

  // int64 l3_catch = 11;
  if (this->l3_catch() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(11, this->_internal_l3_catch(), target);
  }

  // float temp_cpu = 12;
  if (!(this->temp_cpu() <= 0 && this->temp_cpu() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(12, this->_internal_temp_cpu(), target);
  }

  // float temp_soc0 = 13;
  if (!(this->temp_soc0() <= 0 && this->temp_soc0() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(13, this->_internal_temp_soc0(), target);
  }

  // float temp_soc1 = 14;
  if (!(this->temp_soc1() <= 0 && this->temp_soc1() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(14, this->_internal_temp_soc1(), target);
  }

  // float temp_soc2 = 15;
  if (!(this->temp_soc2() <= 0 && this->temp_soc2() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(15, this->_internal_temp_soc2(), target);
  }

  // map<string, string> cpu_binding = 16;
  if (!this->_internal_cpu_binding().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "hozon.netaos.zmqipc.DevmCpuInfo.CpuBindingEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "hozon.netaos.zmqipc.DevmCpuInfo.CpuBindingEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_cpu_binding().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_cpu_binding().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_cpu_binding().begin();
          it != this->_internal_cpu_binding().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = DevmCpuInfo_CpuBindingEntry_DoNotUse::Funcs::InternalSerialize(16, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_cpu_binding().begin();
          it != this->_internal_cpu_binding().end(); ++it) {
        target = DevmCpuInfo_CpuBindingEntry_DoNotUse::Funcs::InternalSerialize(16, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // repeated float cpus_usage = 17;
  if (this->_internal_cpus_usage_size() > 0) {
    target = stream->WriteFixedPacked(17, _internal_cpus_usage(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hozon.netaos.zmqipc.DevmCpuInfo)
  return target;
}

size_t DevmCpuInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hozon.netaos.zmqipc.DevmCpuInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> cpu_binding = 16;
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_cpu_binding_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_cpu_binding().begin();
      it != this->_internal_cpu_binding().end(); ++it) {
    total_size += DevmCpuInfo_CpuBindingEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // repeated float cpus_usage = 17;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_cpus_usage_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _cpus_usage_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // string architecture = 1;
  if (this->architecture().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_architecture());
  }

  // string online_cpus = 3;
  if (this->online_cpus().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_online_cpus());
  }

  // string offline_cpus = 4;
  if (this->offline_cpus().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_offline_cpus());
  }

  // string model_name = 5;
  if (this->model_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_model_name());
  }

  // int64 cpus = 2;
  if (this->cpus() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_cpus());
  }

  // float cpu_max_mhz = 6;
  if (!(this->cpu_max_mhz() <= 0 && this->cpu_max_mhz() >= 0)) {
    total_size += 1 + 4;
  }

  // float cpu_min_mhz = 7;
  if (!(this->cpu_min_mhz() <= 0 && this->cpu_min_mhz() >= 0)) {
    total_size += 1 + 4;
  }

  // int64 l1d_catch = 8;
  if (this->l1d_catch() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_l1d_catch());
  }

  // int64 l1i_catch = 9;
  if (this->l1i_catch() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_l1i_catch());
  }

  // int64 l2_catch = 10;
  if (this->l2_catch() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_l2_catch());
  }

  // int64 l3_catch = 11;
  if (this->l3_catch() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_l3_catch());
  }

  // float temp_cpu = 12;
  if (!(this->temp_cpu() <= 0 && this->temp_cpu() >= 0)) {
    total_size += 1 + 4;
  }

  // float temp_soc0 = 13;
  if (!(this->temp_soc0() <= 0 && this->temp_soc0() >= 0)) {
    total_size += 1 + 4;
  }

  // float temp_soc1 = 14;
  if (!(this->temp_soc1() <= 0 && this->temp_soc1() >= 0)) {
    total_size += 1 + 4;
  }

  // float temp_soc2 = 15;
  if (!(this->temp_soc2() <= 0 && this->temp_soc2() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DevmCpuInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hozon.netaos.zmqipc.DevmCpuInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const DevmCpuInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DevmCpuInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hozon.netaos.zmqipc.DevmCpuInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hozon.netaos.zmqipc.DevmCpuInfo)
    MergeFrom(*source);
  }
}

void DevmCpuInfo::MergeFrom(const DevmCpuInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hozon.netaos.zmqipc.DevmCpuInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cpu_binding_.MergeFrom(from.cpu_binding_);
  cpus_usage_.MergeFrom(from.cpus_usage_);
  if (from.architecture().size() > 0) {
    _internal_set_architecture(from._internal_architecture());
  }
  if (from.online_cpus().size() > 0) {
    _internal_set_online_cpus(from._internal_online_cpus());
  }
  if (from.offline_cpus().size() > 0) {
    _internal_set_offline_cpus(from._internal_offline_cpus());
  }
  if (from.model_name().size() > 0) {
    _internal_set_model_name(from._internal_model_name());
  }
  if (from.cpus() != 0) {
    _internal_set_cpus(from._internal_cpus());
  }
  if (!(from.cpu_max_mhz() <= 0 && from.cpu_max_mhz() >= 0)) {
    _internal_set_cpu_max_mhz(from._internal_cpu_max_mhz());
  }
  if (!(from.cpu_min_mhz() <= 0 && from.cpu_min_mhz() >= 0)) {
    _internal_set_cpu_min_mhz(from._internal_cpu_min_mhz());
  }
  if (from.l1d_catch() != 0) {
    _internal_set_l1d_catch(from._internal_l1d_catch());
  }
  if (from.l1i_catch() != 0) {
    _internal_set_l1i_catch(from._internal_l1i_catch());
  }
  if (from.l2_catch() != 0) {
    _internal_set_l2_catch(from._internal_l2_catch());
  }
  if (from.l3_catch() != 0) {
    _internal_set_l3_catch(from._internal_l3_catch());
  }
  if (!(from.temp_cpu() <= 0 && from.temp_cpu() >= 0)) {
    _internal_set_temp_cpu(from._internal_temp_cpu());
  }
  if (!(from.temp_soc0() <= 0 && from.temp_soc0() >= 0)) {
    _internal_set_temp_soc0(from._internal_temp_soc0());
  }
  if (!(from.temp_soc1() <= 0 && from.temp_soc1() >= 0)) {
    _internal_set_temp_soc1(from._internal_temp_soc1());
  }
  if (!(from.temp_soc2() <= 0 && from.temp_soc2() >= 0)) {
    _internal_set_temp_soc2(from._internal_temp_soc2());
  }
}

void DevmCpuInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hozon.netaos.zmqipc.DevmCpuInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DevmCpuInfo::CopyFrom(const DevmCpuInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hozon.netaos.zmqipc.DevmCpuInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DevmCpuInfo::IsInitialized() const {
  return true;
}

void DevmCpuInfo::InternalSwap(DevmCpuInfo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  cpu_binding_.Swap(&other->cpu_binding_);
  cpus_usage_.InternalSwap(&other->cpus_usage_);
  architecture_.Swap(&other->architecture_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  online_cpus_.Swap(&other->online_cpus_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  offline_cpus_.Swap(&other->offline_cpus_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  model_name_.Swap(&other->model_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DevmCpuInfo, temp_soc2_)
      + sizeof(DevmCpuInfo::temp_soc2_)
      - PROTOBUF_FIELD_OFFSET(DevmCpuInfo, cpus_)>(
          reinterpret_cast<char*>(&cpus_),
          reinterpret_cast<char*>(&other->cpus_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DevmCpuInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DevmTemperature::InitAsDefaultInstance() {
}
class DevmTemperature::_Internal {
 public:
};

DevmTemperature::DevmTemperature(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hozon.netaos.zmqipc.DevmTemperature)
}
DevmTemperature::DevmTemperature(const DevmTemperature& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&soc_temp_, &from.soc_temp_,
    static_cast<size_t>(reinterpret_cast<char*>(&ext1_temp_) -
    reinterpret_cast<char*>(&soc_temp_)) + sizeof(ext1_temp_));
  // @@protoc_insertion_point(copy_constructor:hozon.netaos.zmqipc.DevmTemperature)
}

void DevmTemperature::SharedCtor() {
  ::memset(&soc_temp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ext1_temp_) -
      reinterpret_cast<char*>(&soc_temp_)) + sizeof(ext1_temp_));
}

DevmTemperature::~DevmTemperature() {
  // @@protoc_insertion_point(destructor:hozon.netaos.zmqipc.DevmTemperature)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DevmTemperature::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DevmTemperature::ArenaDtor(void* object) {
  DevmTemperature* _this = reinterpret_cast< DevmTemperature* >(object);
  (void)_this;
}
void DevmTemperature::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DevmTemperature::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DevmTemperature& DevmTemperature::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DevmTemperature_devm_5ftool_2eproto.base);
  return *internal_default_instance();
}


void DevmTemperature::Clear() {
// @@protoc_insertion_point(message_clear_start:hozon.netaos.zmqipc.DevmTemperature)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&soc_temp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ext1_temp_) -
      reinterpret_cast<char*>(&soc_temp_)) + sizeof(ext1_temp_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DevmTemperature::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // float soc_temp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 13)) {
          soc_temp_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float mcu_temp = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          mcu_temp_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float ext0_temp = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 29)) {
          ext0_temp_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float ext1_temp = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 37)) {
          ext1_temp_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DevmTemperature::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hozon.netaos.zmqipc.DevmTemperature)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float soc_temp = 1;
  if (!(this->soc_temp() <= 0 && this->soc_temp() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(1, this->_internal_soc_temp(), target);
  }

  // float mcu_temp = 2;
  if (!(this->mcu_temp() <= 0 && this->mcu_temp() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->_internal_mcu_temp(), target);
  }

  // float ext0_temp = 3;
  if (!(this->ext0_temp() <= 0 && this->ext0_temp() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(3, this->_internal_ext0_temp(), target);
  }

  // float ext1_temp = 4;
  if (!(this->ext1_temp() <= 0 && this->ext1_temp() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(4, this->_internal_ext1_temp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hozon.netaos.zmqipc.DevmTemperature)
  return target;
}

size_t DevmTemperature::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hozon.netaos.zmqipc.DevmTemperature)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float soc_temp = 1;
  if (!(this->soc_temp() <= 0 && this->soc_temp() >= 0)) {
    total_size += 1 + 4;
  }

  // float mcu_temp = 2;
  if (!(this->mcu_temp() <= 0 && this->mcu_temp() >= 0)) {
    total_size += 1 + 4;
  }

  // float ext0_temp = 3;
  if (!(this->ext0_temp() <= 0 && this->ext0_temp() >= 0)) {
    total_size += 1 + 4;
  }

  // float ext1_temp = 4;
  if (!(this->ext1_temp() <= 0 && this->ext1_temp() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DevmTemperature::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hozon.netaos.zmqipc.DevmTemperature)
  GOOGLE_DCHECK_NE(&from, this);
  const DevmTemperature* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DevmTemperature>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hozon.netaos.zmqipc.DevmTemperature)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hozon.netaos.zmqipc.DevmTemperature)
    MergeFrom(*source);
  }
}

void DevmTemperature::MergeFrom(const DevmTemperature& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hozon.netaos.zmqipc.DevmTemperature)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.soc_temp() <= 0 && from.soc_temp() >= 0)) {
    _internal_set_soc_temp(from._internal_soc_temp());
  }
  if (!(from.mcu_temp() <= 0 && from.mcu_temp() >= 0)) {
    _internal_set_mcu_temp(from._internal_mcu_temp());
  }
  if (!(from.ext0_temp() <= 0 && from.ext0_temp() >= 0)) {
    _internal_set_ext0_temp(from._internal_ext0_temp());
  }
  if (!(from.ext1_temp() <= 0 && from.ext1_temp() >= 0)) {
    _internal_set_ext1_temp(from._internal_ext1_temp());
  }
}

void DevmTemperature::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hozon.netaos.zmqipc.DevmTemperature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DevmTemperature::CopyFrom(const DevmTemperature& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hozon.netaos.zmqipc.DevmTemperature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DevmTemperature::IsInitialized() const {
  return true;
}

void DevmTemperature::InternalSwap(DevmTemperature* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DevmTemperature, ext1_temp_)
      + sizeof(DevmTemperature::ext1_temp_)
      - PROTOBUF_FIELD_OFFSET(DevmTemperature, soc_temp_)>(
          reinterpret_cast<char*>(&soc_temp_),
          reinterpret_cast<char*>(&other->soc_temp_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DevmTemperature::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DevmVoltage::InitAsDefaultInstance() {
}
class DevmVoltage::_Internal {
 public:
};

DevmVoltage::DevmVoltage(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hozon.netaos.zmqipc.DevmVoltage)
}
DevmVoltage::DevmVoltage(const DevmVoltage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&kl15_vol_, &from.kl15_vol_,
    static_cast<size_t>(reinterpret_cast<char*>(&kl30_vol_) -
    reinterpret_cast<char*>(&kl15_vol_)) + sizeof(kl30_vol_));
  // @@protoc_insertion_point(copy_constructor:hozon.netaos.zmqipc.DevmVoltage)
}

void DevmVoltage::SharedCtor() {
  ::memset(&kl15_vol_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&kl30_vol_) -
      reinterpret_cast<char*>(&kl15_vol_)) + sizeof(kl30_vol_));
}

DevmVoltage::~DevmVoltage() {
  // @@protoc_insertion_point(destructor:hozon.netaos.zmqipc.DevmVoltage)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DevmVoltage::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DevmVoltage::ArenaDtor(void* object) {
  DevmVoltage* _this = reinterpret_cast< DevmVoltage* >(object);
  (void)_this;
}
void DevmVoltage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DevmVoltage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DevmVoltage& DevmVoltage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DevmVoltage_devm_5ftool_2eproto.base);
  return *internal_default_instance();
}


void DevmVoltage::Clear() {
// @@protoc_insertion_point(message_clear_start:hozon.netaos.zmqipc.DevmVoltage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&kl15_vol_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&kl30_vol_) -
      reinterpret_cast<char*>(&kl15_vol_)) + sizeof(kl30_vol_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DevmVoltage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 kl15_vol = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          kl15_vol_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float kl30_vol = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          kl30_vol_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DevmVoltage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hozon.netaos.zmqipc.DevmVoltage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 kl15_vol = 1;
  if (this->kl15_vol() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_kl15_vol(), target);
  }

  // float kl30_vol = 2;
  if (!(this->kl30_vol() <= 0 && this->kl30_vol() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->_internal_kl30_vol(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hozon.netaos.zmqipc.DevmVoltage)
  return target;
}

size_t DevmVoltage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hozon.netaos.zmqipc.DevmVoltage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 kl15_vol = 1;
  if (this->kl15_vol() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_kl15_vol());
  }

  // float kl30_vol = 2;
  if (!(this->kl30_vol() <= 0 && this->kl30_vol() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DevmVoltage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hozon.netaos.zmqipc.DevmVoltage)
  GOOGLE_DCHECK_NE(&from, this);
  const DevmVoltage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DevmVoltage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hozon.netaos.zmqipc.DevmVoltage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hozon.netaos.zmqipc.DevmVoltage)
    MergeFrom(*source);
  }
}

void DevmVoltage::MergeFrom(const DevmVoltage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hozon.netaos.zmqipc.DevmVoltage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.kl15_vol() != 0) {
    _internal_set_kl15_vol(from._internal_kl15_vol());
  }
  if (!(from.kl30_vol() <= 0 && from.kl30_vol() >= 0)) {
    _internal_set_kl30_vol(from._internal_kl30_vol());
  }
}

void DevmVoltage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hozon.netaos.zmqipc.DevmVoltage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DevmVoltage::CopyFrom(const DevmVoltage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hozon.netaos.zmqipc.DevmVoltage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DevmVoltage::IsInitialized() const {
  return true;
}

void DevmVoltage::InternalSwap(DevmVoltage* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DevmVoltage, kl30_vol_)
      + sizeof(DevmVoltage::kl30_vol_)
      - PROTOBUF_FIELD_OFFSET(DevmVoltage, kl15_vol_)>(
          reinterpret_cast<char*>(&kl15_vol_),
          reinterpret_cast<char*>(&other->kl15_vol_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DevmVoltage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

DevmDeviceInfo_SensorVersionEntry_DoNotUse::DevmDeviceInfo_SensorVersionEntry_DoNotUse() {}
DevmDeviceInfo_SensorVersionEntry_DoNotUse::DevmDeviceInfo_SensorVersionEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void DevmDeviceInfo_SensorVersionEntry_DoNotUse::MergeFrom(const DevmDeviceInfo_SensorVersionEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata DevmDeviceInfo_SensorVersionEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void DevmDeviceInfo_SensorVersionEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void DevmDeviceInfo::InitAsDefaultInstance() {
}
class DevmDeviceInfo::_Internal {
 public:
};

DevmDeviceInfo::DevmDeviceInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  sensor_version_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hozon.netaos.zmqipc.DevmDeviceInfo)
}
DevmDeviceInfo::DevmDeviceInfo(const DevmDeviceInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  sensor_version_.MergeFrom(from.sensor_version_);
  soc_version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_soc_version().empty()) {
    soc_version_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_soc_version(),
      GetArena());
  }
  mcu_version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_mcu_version().empty()) {
    mcu_version_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_mcu_version(),
      GetArena());
  }
  dsv_version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_dsv_version().empty()) {
    dsv_version_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_dsv_version(),
      GetArena());
  }
  swt_version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_swt_version().empty()) {
    swt_version_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_swt_version(),
      GetArena());
  }
  uss_version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_uss_version().empty()) {
    uss_version_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_uss_version(),
      GetArena());
  }
  soc_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_soc_type().empty()) {
    soc_type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_soc_type(),
      GetArena());
  }
  mcu_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_mcu_type().empty()) {
    mcu_type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_mcu_type(),
      GetArena());
  }
  switch_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_switch_type().empty()) {
    switch_type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_switch_type(),
      GetArena());
  }
  dsv_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_dsv_type().empty()) {
    dsv_type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_dsv_type(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:hozon.netaos.zmqipc.DevmDeviceInfo)
}

void DevmDeviceInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DevmDeviceInfo_devm_5ftool_2eproto.base);
  soc_version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  mcu_version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  dsv_version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  swt_version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  uss_version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  soc_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  mcu_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  switch_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  dsv_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DevmDeviceInfo::~DevmDeviceInfo() {
  // @@protoc_insertion_point(destructor:hozon.netaos.zmqipc.DevmDeviceInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DevmDeviceInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  soc_version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  mcu_version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  dsv_version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  swt_version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  uss_version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  soc_type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  mcu_type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  switch_type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  dsv_type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DevmDeviceInfo::ArenaDtor(void* object) {
  DevmDeviceInfo* _this = reinterpret_cast< DevmDeviceInfo* >(object);
  (void)_this;
}
void DevmDeviceInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DevmDeviceInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DevmDeviceInfo& DevmDeviceInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DevmDeviceInfo_devm_5ftool_2eproto.base);
  return *internal_default_instance();
}


void DevmDeviceInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:hozon.netaos.zmqipc.DevmDeviceInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sensor_version_.Clear();
  soc_version_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  mcu_version_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  dsv_version_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swt_version_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  uss_version_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  soc_type_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  mcu_type_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  switch_type_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  dsv_type_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DevmDeviceInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string soc_version = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_soc_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hozon.netaos.zmqipc.DevmDeviceInfo.soc_version"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string mcu_version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_mcu_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hozon.netaos.zmqipc.DevmDeviceInfo.mcu_version"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string dsv_version = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_dsv_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hozon.netaos.zmqipc.DevmDeviceInfo.dsv_version"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string swt_version = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_swt_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hozon.netaos.zmqipc.DevmDeviceInfo.swt_version"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string uss_version = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_uss_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hozon.netaos.zmqipc.DevmDeviceInfo.uss_version"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string soc_type = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_soc_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hozon.netaos.zmqipc.DevmDeviceInfo.soc_type"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string mcu_type = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_mcu_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hozon.netaos.zmqipc.DevmDeviceInfo.mcu_type"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string switch_type = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_switch_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hozon.netaos.zmqipc.DevmDeviceInfo.switch_type"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string dsv_type = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          auto str = _internal_mutable_dsv_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hozon.netaos.zmqipc.DevmDeviceInfo.dsv_type"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, string> sensor_version = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&sensor_version_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<82>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DevmDeviceInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hozon.netaos.zmqipc.DevmDeviceInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string soc_version = 1;
  if (this->soc_version().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_soc_version().data(), static_cast<int>(this->_internal_soc_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hozon.netaos.zmqipc.DevmDeviceInfo.soc_version");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_soc_version(), target);
  }

  // string mcu_version = 2;
  if (this->mcu_version().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mcu_version().data(), static_cast<int>(this->_internal_mcu_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hozon.netaos.zmqipc.DevmDeviceInfo.mcu_version");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_mcu_version(), target);
  }

  // string dsv_version = 3;
  if (this->dsv_version().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_dsv_version().data(), static_cast<int>(this->_internal_dsv_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hozon.netaos.zmqipc.DevmDeviceInfo.dsv_version");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_dsv_version(), target);
  }

  // string swt_version = 4;
  if (this->swt_version().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_swt_version().data(), static_cast<int>(this->_internal_swt_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hozon.netaos.zmqipc.DevmDeviceInfo.swt_version");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_swt_version(), target);
  }

  // string uss_version = 5;
  if (this->uss_version().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_uss_version().data(), static_cast<int>(this->_internal_uss_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hozon.netaos.zmqipc.DevmDeviceInfo.uss_version");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_uss_version(), target);
  }

  // string soc_type = 6;
  if (this->soc_type().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_soc_type().data(), static_cast<int>(this->_internal_soc_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hozon.netaos.zmqipc.DevmDeviceInfo.soc_type");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_soc_type(), target);
  }

  // string mcu_type = 7;
  if (this->mcu_type().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mcu_type().data(), static_cast<int>(this->_internal_mcu_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hozon.netaos.zmqipc.DevmDeviceInfo.mcu_type");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_mcu_type(), target);
  }

  // string switch_type = 8;
  if (this->switch_type().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_switch_type().data(), static_cast<int>(this->_internal_switch_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hozon.netaos.zmqipc.DevmDeviceInfo.switch_type");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_switch_type(), target);
  }

  // string dsv_type = 9;
  if (this->dsv_type().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_dsv_type().data(), static_cast<int>(this->_internal_dsv_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hozon.netaos.zmqipc.DevmDeviceInfo.dsv_type");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_dsv_type(), target);
  }

  // map<string, string> sensor_version = 10;
  if (!this->_internal_sensor_version().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "hozon.netaos.zmqipc.DevmDeviceInfo.SensorVersionEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "hozon.netaos.zmqipc.DevmDeviceInfo.SensorVersionEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_sensor_version().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_sensor_version().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_sensor_version().begin();
          it != this->_internal_sensor_version().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = DevmDeviceInfo_SensorVersionEntry_DoNotUse::Funcs::InternalSerialize(10, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_sensor_version().begin();
          it != this->_internal_sensor_version().end(); ++it) {
        target = DevmDeviceInfo_SensorVersionEntry_DoNotUse::Funcs::InternalSerialize(10, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hozon.netaos.zmqipc.DevmDeviceInfo)
  return target;
}

size_t DevmDeviceInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hozon.netaos.zmqipc.DevmDeviceInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> sensor_version = 10;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_sensor_version_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_sensor_version().begin();
      it != this->_internal_sensor_version().end(); ++it) {
    total_size += DevmDeviceInfo_SensorVersionEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string soc_version = 1;
  if (this->soc_version().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_soc_version());
  }

  // string mcu_version = 2;
  if (this->mcu_version().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mcu_version());
  }

  // string dsv_version = 3;
  if (this->dsv_version().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_dsv_version());
  }

  // string swt_version = 4;
  if (this->swt_version().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_swt_version());
  }

  // string uss_version = 5;
  if (this->uss_version().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uss_version());
  }

  // string soc_type = 6;
  if (this->soc_type().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_soc_type());
  }

  // string mcu_type = 7;
  if (this->mcu_type().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mcu_type());
  }

  // string switch_type = 8;
  if (this->switch_type().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_switch_type());
  }

  // string dsv_type = 9;
  if (this->dsv_type().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_dsv_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DevmDeviceInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hozon.netaos.zmqipc.DevmDeviceInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const DevmDeviceInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DevmDeviceInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hozon.netaos.zmqipc.DevmDeviceInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hozon.netaos.zmqipc.DevmDeviceInfo)
    MergeFrom(*source);
  }
}

void DevmDeviceInfo::MergeFrom(const DevmDeviceInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hozon.netaos.zmqipc.DevmDeviceInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sensor_version_.MergeFrom(from.sensor_version_);
  if (from.soc_version().size() > 0) {
    _internal_set_soc_version(from._internal_soc_version());
  }
  if (from.mcu_version().size() > 0) {
    _internal_set_mcu_version(from._internal_mcu_version());
  }
  if (from.dsv_version().size() > 0) {
    _internal_set_dsv_version(from._internal_dsv_version());
  }
  if (from.swt_version().size() > 0) {
    _internal_set_swt_version(from._internal_swt_version());
  }
  if (from.uss_version().size() > 0) {
    _internal_set_uss_version(from._internal_uss_version());
  }
  if (from.soc_type().size() > 0) {
    _internal_set_soc_type(from._internal_soc_type());
  }
  if (from.mcu_type().size() > 0) {
    _internal_set_mcu_type(from._internal_mcu_type());
  }
  if (from.switch_type().size() > 0) {
    _internal_set_switch_type(from._internal_switch_type());
  }
  if (from.dsv_type().size() > 0) {
    _internal_set_dsv_type(from._internal_dsv_type());
  }
}

void DevmDeviceInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hozon.netaos.zmqipc.DevmDeviceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DevmDeviceInfo::CopyFrom(const DevmDeviceInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hozon.netaos.zmqipc.DevmDeviceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DevmDeviceInfo::IsInitialized() const {
  return true;
}

void DevmDeviceInfo::InternalSwap(DevmDeviceInfo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  sensor_version_.Swap(&other->sensor_version_);
  soc_version_.Swap(&other->soc_version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  mcu_version_.Swap(&other->mcu_version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  dsv_version_.Swap(&other->dsv_version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swt_version_.Swap(&other->swt_version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  uss_version_.Swap(&other->uss_version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  soc_type_.Swap(&other->soc_type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  mcu_type_.Swap(&other->mcu_type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  switch_type_.Swap(&other->switch_type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  dsv_type_.Swap(&other->dsv_type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata DevmDeviceInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

DevmDeviceStatus_CameraStatusEntry_DoNotUse::DevmDeviceStatus_CameraStatusEntry_DoNotUse() {}
DevmDeviceStatus_CameraStatusEntry_DoNotUse::DevmDeviceStatus_CameraStatusEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void DevmDeviceStatus_CameraStatusEntry_DoNotUse::MergeFrom(const DevmDeviceStatus_CameraStatusEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata DevmDeviceStatus_CameraStatusEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void DevmDeviceStatus_CameraStatusEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

DevmDeviceStatus_LidarStatusEntry_DoNotUse::DevmDeviceStatus_LidarStatusEntry_DoNotUse() {}
DevmDeviceStatus_LidarStatusEntry_DoNotUse::DevmDeviceStatus_LidarStatusEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void DevmDeviceStatus_LidarStatusEntry_DoNotUse::MergeFrom(const DevmDeviceStatus_LidarStatusEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata DevmDeviceStatus_LidarStatusEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void DevmDeviceStatus_LidarStatusEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

DevmDeviceStatus_RadarStatusEntry_DoNotUse::DevmDeviceStatus_RadarStatusEntry_DoNotUse() {}
DevmDeviceStatus_RadarStatusEntry_DoNotUse::DevmDeviceStatus_RadarStatusEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void DevmDeviceStatus_RadarStatusEntry_DoNotUse::MergeFrom(const DevmDeviceStatus_RadarStatusEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata DevmDeviceStatus_RadarStatusEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void DevmDeviceStatus_RadarStatusEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

DevmDeviceStatus_ImuStatusEntry_DoNotUse::DevmDeviceStatus_ImuStatusEntry_DoNotUse() {}
DevmDeviceStatus_ImuStatusEntry_DoNotUse::DevmDeviceStatus_ImuStatusEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void DevmDeviceStatus_ImuStatusEntry_DoNotUse::MergeFrom(const DevmDeviceStatus_ImuStatusEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata DevmDeviceStatus_ImuStatusEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void DevmDeviceStatus_ImuStatusEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

DevmDeviceStatus_UssStatusEntry_DoNotUse::DevmDeviceStatus_UssStatusEntry_DoNotUse() {}
DevmDeviceStatus_UssStatusEntry_DoNotUse::DevmDeviceStatus_UssStatusEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void DevmDeviceStatus_UssStatusEntry_DoNotUse::MergeFrom(const DevmDeviceStatus_UssStatusEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata DevmDeviceStatus_UssStatusEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void DevmDeviceStatus_UssStatusEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void DevmDeviceStatus::InitAsDefaultInstance() {
}
class DevmDeviceStatus::_Internal {
 public:
};

DevmDeviceStatus::DevmDeviceStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  camera_status_(arena),
  lidar_status_(arena),
  radar_status_(arena),
  imu_status_(arena),
  uss_status_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hozon.netaos.zmqipc.DevmDeviceStatus)
}
DevmDeviceStatus::DevmDeviceStatus(const DevmDeviceStatus& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  camera_status_.MergeFrom(from.camera_status_);
  lidar_status_.MergeFrom(from.lidar_status_);
  radar_status_.MergeFrom(from.radar_status_);
  imu_status_.MergeFrom(from.imu_status_);
  uss_status_.MergeFrom(from.uss_status_);
  soc_status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_soc_status().empty()) {
    soc_status_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_soc_status(),
      GetArena());
  }
  mcu_status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_mcu_status().empty()) {
    mcu_status_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_mcu_status(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:hozon.netaos.zmqipc.DevmDeviceStatus)
}

void DevmDeviceStatus::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DevmDeviceStatus_devm_5ftool_2eproto.base);
  soc_status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  mcu_status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DevmDeviceStatus::~DevmDeviceStatus() {
  // @@protoc_insertion_point(destructor:hozon.netaos.zmqipc.DevmDeviceStatus)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DevmDeviceStatus::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  soc_status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  mcu_status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DevmDeviceStatus::ArenaDtor(void* object) {
  DevmDeviceStatus* _this = reinterpret_cast< DevmDeviceStatus* >(object);
  (void)_this;
}
void DevmDeviceStatus::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DevmDeviceStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DevmDeviceStatus& DevmDeviceStatus::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DevmDeviceStatus_devm_5ftool_2eproto.base);
  return *internal_default_instance();
}


void DevmDeviceStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:hozon.netaos.zmqipc.DevmDeviceStatus)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  camera_status_.Clear();
  lidar_status_.Clear();
  radar_status_.Clear();
  imu_status_.Clear();
  uss_status_.Clear();
  soc_status_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  mcu_status_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DevmDeviceStatus::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string soc_status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_soc_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hozon.netaos.zmqipc.DevmDeviceStatus.soc_status"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string mcu_status = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_mcu_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hozon.netaos.zmqipc.DevmDeviceStatus.mcu_status"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, string> camera_status = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&camera_status_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // map<string, string> lidar_status = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&lidar_status_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      // map<string, string> radar_status = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&radar_status_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      // map<string, string> imu_status = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&imu_status_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else goto handle_unusual;
        continue;
      // map<string, string> uss_status = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&uss_status_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<58>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DevmDeviceStatus::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hozon.netaos.zmqipc.DevmDeviceStatus)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string soc_status = 1;
  if (this->soc_status().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_soc_status().data(), static_cast<int>(this->_internal_soc_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hozon.netaos.zmqipc.DevmDeviceStatus.soc_status");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_soc_status(), target);
  }

  // string mcu_status = 2;
  if (this->mcu_status().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mcu_status().data(), static_cast<int>(this->_internal_mcu_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hozon.netaos.zmqipc.DevmDeviceStatus.mcu_status");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_mcu_status(), target);
  }

  // map<string, string> camera_status = 3;
  if (!this->_internal_camera_status().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "hozon.netaos.zmqipc.DevmDeviceStatus.CameraStatusEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "hozon.netaos.zmqipc.DevmDeviceStatus.CameraStatusEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_camera_status().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_camera_status().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_camera_status().begin();
          it != this->_internal_camera_status().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = DevmDeviceStatus_CameraStatusEntry_DoNotUse::Funcs::InternalSerialize(3, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_camera_status().begin();
          it != this->_internal_camera_status().end(); ++it) {
        target = DevmDeviceStatus_CameraStatusEntry_DoNotUse::Funcs::InternalSerialize(3, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // map<string, string> lidar_status = 4;
  if (!this->_internal_lidar_status().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "hozon.netaos.zmqipc.DevmDeviceStatus.LidarStatusEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "hozon.netaos.zmqipc.DevmDeviceStatus.LidarStatusEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_lidar_status().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_lidar_status().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_lidar_status().begin();
          it != this->_internal_lidar_status().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = DevmDeviceStatus_LidarStatusEntry_DoNotUse::Funcs::InternalSerialize(4, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_lidar_status().begin();
          it != this->_internal_lidar_status().end(); ++it) {
        target = DevmDeviceStatus_LidarStatusEntry_DoNotUse::Funcs::InternalSerialize(4, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // map<string, string> radar_status = 5;
  if (!this->_internal_radar_status().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "hozon.netaos.zmqipc.DevmDeviceStatus.RadarStatusEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "hozon.netaos.zmqipc.DevmDeviceStatus.RadarStatusEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_radar_status().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_radar_status().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_radar_status().begin();
          it != this->_internal_radar_status().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = DevmDeviceStatus_RadarStatusEntry_DoNotUse::Funcs::InternalSerialize(5, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_radar_status().begin();
          it != this->_internal_radar_status().end(); ++it) {
        target = DevmDeviceStatus_RadarStatusEntry_DoNotUse::Funcs::InternalSerialize(5, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // map<string, string> imu_status = 6;
  if (!this->_internal_imu_status().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "hozon.netaos.zmqipc.DevmDeviceStatus.ImuStatusEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "hozon.netaos.zmqipc.DevmDeviceStatus.ImuStatusEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_imu_status().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_imu_status().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_imu_status().begin();
          it != this->_internal_imu_status().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = DevmDeviceStatus_ImuStatusEntry_DoNotUse::Funcs::InternalSerialize(6, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_imu_status().begin();
          it != this->_internal_imu_status().end(); ++it) {
        target = DevmDeviceStatus_ImuStatusEntry_DoNotUse::Funcs::InternalSerialize(6, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // map<string, string> uss_status = 7;
  if (!this->_internal_uss_status().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "hozon.netaos.zmqipc.DevmDeviceStatus.UssStatusEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "hozon.netaos.zmqipc.DevmDeviceStatus.UssStatusEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_uss_status().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_uss_status().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_uss_status().begin();
          it != this->_internal_uss_status().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = DevmDeviceStatus_UssStatusEntry_DoNotUse::Funcs::InternalSerialize(7, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_uss_status().begin();
          it != this->_internal_uss_status().end(); ++it) {
        target = DevmDeviceStatus_UssStatusEntry_DoNotUse::Funcs::InternalSerialize(7, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hozon.netaos.zmqipc.DevmDeviceStatus)
  return target;
}

size_t DevmDeviceStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hozon.netaos.zmqipc.DevmDeviceStatus)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> camera_status = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_camera_status_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_camera_status().begin();
      it != this->_internal_camera_status().end(); ++it) {
    total_size += DevmDeviceStatus_CameraStatusEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<string, string> lidar_status = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_lidar_status_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_lidar_status().begin();
      it != this->_internal_lidar_status().end(); ++it) {
    total_size += DevmDeviceStatus_LidarStatusEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<string, string> radar_status = 5;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_radar_status_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_radar_status().begin();
      it != this->_internal_radar_status().end(); ++it) {
    total_size += DevmDeviceStatus_RadarStatusEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<string, string> imu_status = 6;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_imu_status_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_imu_status().begin();
      it != this->_internal_imu_status().end(); ++it) {
    total_size += DevmDeviceStatus_ImuStatusEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<string, string> uss_status = 7;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_uss_status_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_uss_status().begin();
      it != this->_internal_uss_status().end(); ++it) {
    total_size += DevmDeviceStatus_UssStatusEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string soc_status = 1;
  if (this->soc_status().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_soc_status());
  }

  // string mcu_status = 2;
  if (this->mcu_status().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mcu_status());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DevmDeviceStatus::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hozon.netaos.zmqipc.DevmDeviceStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const DevmDeviceStatus* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DevmDeviceStatus>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hozon.netaos.zmqipc.DevmDeviceStatus)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hozon.netaos.zmqipc.DevmDeviceStatus)
    MergeFrom(*source);
  }
}

void DevmDeviceStatus::MergeFrom(const DevmDeviceStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hozon.netaos.zmqipc.DevmDeviceStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  camera_status_.MergeFrom(from.camera_status_);
  lidar_status_.MergeFrom(from.lidar_status_);
  radar_status_.MergeFrom(from.radar_status_);
  imu_status_.MergeFrom(from.imu_status_);
  uss_status_.MergeFrom(from.uss_status_);
  if (from.soc_status().size() > 0) {
    _internal_set_soc_status(from._internal_soc_status());
  }
  if (from.mcu_status().size() > 0) {
    _internal_set_mcu_status(from._internal_mcu_status());
  }
}

void DevmDeviceStatus::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hozon.netaos.zmqipc.DevmDeviceStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DevmDeviceStatus::CopyFrom(const DevmDeviceStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hozon.netaos.zmqipc.DevmDeviceStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DevmDeviceStatus::IsInitialized() const {
  return true;
}

void DevmDeviceStatus::InternalSwap(DevmDeviceStatus* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  camera_status_.Swap(&other->camera_status_);
  lidar_status_.Swap(&other->lidar_status_);
  radar_status_.Swap(&other->radar_status_);
  imu_status_.Swap(&other->imu_status_);
  uss_status_.Swap(&other->uss_status_);
  soc_status_.Swap(&other->soc_status_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  mcu_status_.Swap(&other->mcu_status_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata DevmDeviceStatus::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpgradeCommonReq::InitAsDefaultInstance() {
}
class UpgradeCommonReq::_Internal {
 public:
};

UpgradeCommonReq::UpgradeCommonReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hozon.netaos.zmqipc.UpgradeCommonReq)
}
UpgradeCommonReq::UpgradeCommonReq(const UpgradeCommonReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  platform_ = from.platform_;
  // @@protoc_insertion_point(copy_constructor:hozon.netaos.zmqipc.UpgradeCommonReq)
}

void UpgradeCommonReq::SharedCtor() {
  platform_ = 0u;
}

UpgradeCommonReq::~UpgradeCommonReq() {
  // @@protoc_insertion_point(destructor:hozon.netaos.zmqipc.UpgradeCommonReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpgradeCommonReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void UpgradeCommonReq::ArenaDtor(void* object) {
  UpgradeCommonReq* _this = reinterpret_cast< UpgradeCommonReq* >(object);
  (void)_this;
}
void UpgradeCommonReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpgradeCommonReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpgradeCommonReq& UpgradeCommonReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpgradeCommonReq_devm_5ftool_2eproto.base);
  return *internal_default_instance();
}


void UpgradeCommonReq::Clear() {
// @@protoc_insertion_point(message_clear_start:hozon.netaos.zmqipc.UpgradeCommonReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  platform_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpgradeCommonReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 platform = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          platform_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpgradeCommonReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hozon.netaos.zmqipc.UpgradeCommonReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 platform = 1;
  if (this->platform() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_platform(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hozon.netaos.zmqipc.UpgradeCommonReq)
  return target;
}

size_t UpgradeCommonReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hozon.netaos.zmqipc.UpgradeCommonReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 platform = 1;
  if (this->platform() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_platform());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpgradeCommonReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hozon.netaos.zmqipc.UpgradeCommonReq)
  GOOGLE_DCHECK_NE(&from, this);
  const UpgradeCommonReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpgradeCommonReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hozon.netaos.zmqipc.UpgradeCommonReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hozon.netaos.zmqipc.UpgradeCommonReq)
    MergeFrom(*source);
  }
}

void UpgradeCommonReq::MergeFrom(const UpgradeCommonReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hozon.netaos.zmqipc.UpgradeCommonReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.platform() != 0) {
    _internal_set_platform(from._internal_platform());
  }
}

void UpgradeCommonReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hozon.netaos.zmqipc.UpgradeCommonReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpgradeCommonReq::CopyFrom(const UpgradeCommonReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hozon.netaos.zmqipc.UpgradeCommonReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpgradeCommonReq::IsInitialized() const {
  return true;
}

void UpgradeCommonReq::InternalSwap(UpgradeCommonReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(platform_, other->platform_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpgradeCommonReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpgradeStatusResp::InitAsDefaultInstance() {
}
class UpgradeStatusResp::_Internal {
 public:
};

UpgradeStatusResp::UpgradeStatusResp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hozon.netaos.zmqipc.UpgradeStatusResp)
}
UpgradeStatusResp::UpgradeStatusResp(const UpgradeStatusResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  update_status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_update_status().empty()) {
    update_status_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_update_status(),
      GetArena());
  }
  error_msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_error_msg().empty()) {
    error_msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_error_msg(),
      GetArena());
  }
  error_code_ = from.error_code_;
  // @@protoc_insertion_point(copy_constructor:hozon.netaos.zmqipc.UpgradeStatusResp)
}

void UpgradeStatusResp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpgradeStatusResp_devm_5ftool_2eproto.base);
  update_status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  error_msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  error_code_ = 0u;
}

UpgradeStatusResp::~UpgradeStatusResp() {
  // @@protoc_insertion_point(destructor:hozon.netaos.zmqipc.UpgradeStatusResp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpgradeStatusResp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  update_status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  error_msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UpgradeStatusResp::ArenaDtor(void* object) {
  UpgradeStatusResp* _this = reinterpret_cast< UpgradeStatusResp* >(object);
  (void)_this;
}
void UpgradeStatusResp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpgradeStatusResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpgradeStatusResp& UpgradeStatusResp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpgradeStatusResp_devm_5ftool_2eproto.base);
  return *internal_default_instance();
}


void UpgradeStatusResp::Clear() {
// @@protoc_insertion_point(message_clear_start:hozon.netaos.zmqipc.UpgradeStatusResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  update_status_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  error_msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  error_code_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpgradeStatusResp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string update_status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_update_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hozon.netaos.zmqipc.UpgradeStatusResp.update_status"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 error_code = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          error_code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string error_msg = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_error_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hozon.netaos.zmqipc.UpgradeStatusResp.error_msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpgradeStatusResp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hozon.netaos.zmqipc.UpgradeStatusResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string update_status = 1;
  if (this->update_status().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_update_status().data(), static_cast<int>(this->_internal_update_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hozon.netaos.zmqipc.UpgradeStatusResp.update_status");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_update_status(), target);
  }

  // uint32 error_code = 2;
  if (this->error_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_error_code(), target);
  }

  // string error_msg = 3;
  if (this->error_msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error_msg().data(), static_cast<int>(this->_internal_error_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hozon.netaos.zmqipc.UpgradeStatusResp.error_msg");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_error_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hozon.netaos.zmqipc.UpgradeStatusResp)
  return target;
}

size_t UpgradeStatusResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hozon.netaos.zmqipc.UpgradeStatusResp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string update_status = 1;
  if (this->update_status().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_update_status());
  }

  // string error_msg = 3;
  if (this->error_msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error_msg());
  }

  // uint32 error_code = 2;
  if (this->error_code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_error_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpgradeStatusResp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hozon.netaos.zmqipc.UpgradeStatusResp)
  GOOGLE_DCHECK_NE(&from, this);
  const UpgradeStatusResp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpgradeStatusResp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hozon.netaos.zmqipc.UpgradeStatusResp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hozon.netaos.zmqipc.UpgradeStatusResp)
    MergeFrom(*source);
  }
}

void UpgradeStatusResp::MergeFrom(const UpgradeStatusResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hozon.netaos.zmqipc.UpgradeStatusResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.update_status().size() > 0) {
    _internal_set_update_status(from._internal_update_status());
  }
  if (from.error_msg().size() > 0) {
    _internal_set_error_msg(from._internal_error_msg());
  }
  if (from.error_code() != 0) {
    _internal_set_error_code(from._internal_error_code());
  }
}

void UpgradeStatusResp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hozon.netaos.zmqipc.UpgradeStatusResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpgradeStatusResp::CopyFrom(const UpgradeStatusResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hozon.netaos.zmqipc.UpgradeStatusResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpgradeStatusResp::IsInitialized() const {
  return true;
}

void UpgradeStatusResp::InternalSwap(UpgradeStatusResp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  update_status_.Swap(&other->update_status_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  error_msg_.Swap(&other->error_msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(error_code_, other->error_code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpgradeStatusResp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpgradePrecheckResp::InitAsDefaultInstance() {
}
class UpgradePrecheckResp::_Internal {
 public:
};

UpgradePrecheckResp::UpgradePrecheckResp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hozon.netaos.zmqipc.UpgradePrecheckResp)
}
UpgradePrecheckResp::UpgradePrecheckResp(const UpgradePrecheckResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  error_msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_error_msg().empty()) {
    error_msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_error_msg(),
      GetArena());
  }
  ::memcpy(&space_, &from.space_,
    static_cast<size_t>(reinterpret_cast<char*>(&error_code_) -
    reinterpret_cast<char*>(&space_)) + sizeof(error_code_));
  // @@protoc_insertion_point(copy_constructor:hozon.netaos.zmqipc.UpgradePrecheckResp)
}

void UpgradePrecheckResp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpgradePrecheckResp_devm_5ftool_2eproto.base);
  error_msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&space_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_code_) -
      reinterpret_cast<char*>(&space_)) + sizeof(error_code_));
}

UpgradePrecheckResp::~UpgradePrecheckResp() {
  // @@protoc_insertion_point(destructor:hozon.netaos.zmqipc.UpgradePrecheckResp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpgradePrecheckResp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  error_msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UpgradePrecheckResp::ArenaDtor(void* object) {
  UpgradePrecheckResp* _this = reinterpret_cast< UpgradePrecheckResp* >(object);
  (void)_this;
}
void UpgradePrecheckResp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpgradePrecheckResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpgradePrecheckResp& UpgradePrecheckResp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpgradePrecheckResp_devm_5ftool_2eproto.base);
  return *internal_default_instance();
}


void UpgradePrecheckResp::Clear() {
// @@protoc_insertion_point(message_clear_start:hozon.netaos.zmqipc.UpgradePrecheckResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&space_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_code_) -
      reinterpret_cast<char*>(&space_)) + sizeof(error_code_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpgradePrecheckResp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool space = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          space_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool speed = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          speed_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool gear = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          gear_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 error_code = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          error_code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string error_msg = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_error_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hozon.netaos.zmqipc.UpgradePrecheckResp.error_msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpgradePrecheckResp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hozon.netaos.zmqipc.UpgradePrecheckResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool space = 1;
  if (this->space() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_space(), target);
  }

  // bool speed = 2;
  if (this->speed() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_speed(), target);
  }

  // bool gear = 3;
  if (this->gear() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_gear(), target);
  }

  // uint32 error_code = 4;
  if (this->error_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_error_code(), target);
  }

  // string error_msg = 5;
  if (this->error_msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error_msg().data(), static_cast<int>(this->_internal_error_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hozon.netaos.zmqipc.UpgradePrecheckResp.error_msg");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_error_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hozon.netaos.zmqipc.UpgradePrecheckResp)
  return target;
}

size_t UpgradePrecheckResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hozon.netaos.zmqipc.UpgradePrecheckResp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string error_msg = 5;
  if (this->error_msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error_msg());
  }

  // bool space = 1;
  if (this->space() != 0) {
    total_size += 1 + 1;
  }

  // bool speed = 2;
  if (this->speed() != 0) {
    total_size += 1 + 1;
  }

  // bool gear = 3;
  if (this->gear() != 0) {
    total_size += 1 + 1;
  }

  // uint32 error_code = 4;
  if (this->error_code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_error_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpgradePrecheckResp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hozon.netaos.zmqipc.UpgradePrecheckResp)
  GOOGLE_DCHECK_NE(&from, this);
  const UpgradePrecheckResp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpgradePrecheckResp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hozon.netaos.zmqipc.UpgradePrecheckResp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hozon.netaos.zmqipc.UpgradePrecheckResp)
    MergeFrom(*source);
  }
}

void UpgradePrecheckResp::MergeFrom(const UpgradePrecheckResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hozon.netaos.zmqipc.UpgradePrecheckResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error_msg().size() > 0) {
    _internal_set_error_msg(from._internal_error_msg());
  }
  if (from.space() != 0) {
    _internal_set_space(from._internal_space());
  }
  if (from.speed() != 0) {
    _internal_set_speed(from._internal_speed());
  }
  if (from.gear() != 0) {
    _internal_set_gear(from._internal_gear());
  }
  if (from.error_code() != 0) {
    _internal_set_error_code(from._internal_error_code());
  }
}

void UpgradePrecheckResp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hozon.netaos.zmqipc.UpgradePrecheckResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpgradePrecheckResp::CopyFrom(const UpgradePrecheckResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hozon.netaos.zmqipc.UpgradePrecheckResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpgradePrecheckResp::IsInitialized() const {
  return true;
}

void UpgradePrecheckResp::InternalSwap(UpgradePrecheckResp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  error_msg_.Swap(&other->error_msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpgradePrecheckResp, error_code_)
      + sizeof(UpgradePrecheckResp::error_code_)
      - PROTOBUF_FIELD_OFFSET(UpgradePrecheckResp, space_)>(
          reinterpret_cast<char*>(&space_),
          reinterpret_cast<char*>(&other->space_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UpgradePrecheckResp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpgradeProgressResp::InitAsDefaultInstance() {
}
class UpgradeProgressResp::_Internal {
 public:
};

UpgradeProgressResp::UpgradeProgressResp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hozon.netaos.zmqipc.UpgradeProgressResp)
}
UpgradeProgressResp::UpgradeProgressResp(const UpgradeProgressResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  error_msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_error_msg().empty()) {
    error_msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_error_msg(),
      GetArena());
  }
  ::memcpy(&progress_, &from.progress_,
    static_cast<size_t>(reinterpret_cast<char*>(&error_code_) -
    reinterpret_cast<char*>(&progress_)) + sizeof(error_code_));
  // @@protoc_insertion_point(copy_constructor:hozon.netaos.zmqipc.UpgradeProgressResp)
}

void UpgradeProgressResp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpgradeProgressResp_devm_5ftool_2eproto.base);
  error_msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&progress_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_code_) -
      reinterpret_cast<char*>(&progress_)) + sizeof(error_code_));
}

UpgradeProgressResp::~UpgradeProgressResp() {
  // @@protoc_insertion_point(destructor:hozon.netaos.zmqipc.UpgradeProgressResp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpgradeProgressResp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  error_msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UpgradeProgressResp::ArenaDtor(void* object) {
  UpgradeProgressResp* _this = reinterpret_cast< UpgradeProgressResp* >(object);
  (void)_this;
}
void UpgradeProgressResp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpgradeProgressResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpgradeProgressResp& UpgradeProgressResp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpgradeProgressResp_devm_5ftool_2eproto.base);
  return *internal_default_instance();
}


void UpgradeProgressResp::Clear() {
// @@protoc_insertion_point(message_clear_start:hozon.netaos.zmqipc.UpgradeProgressResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&progress_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_code_) -
      reinterpret_cast<char*>(&progress_)) + sizeof(error_code_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpgradeProgressResp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 progress = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          progress_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 error_code = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          error_code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string error_msg = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_error_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hozon.netaos.zmqipc.UpgradeProgressResp.error_msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpgradeProgressResp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hozon.netaos.zmqipc.UpgradeProgressResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 progress = 1;
  if (this->progress() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_progress(), target);
  }

  // uint32 error_code = 2;
  if (this->error_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_error_code(), target);
  }

  // string error_msg = 3;
  if (this->error_msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error_msg().data(), static_cast<int>(this->_internal_error_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hozon.netaos.zmqipc.UpgradeProgressResp.error_msg");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_error_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hozon.netaos.zmqipc.UpgradeProgressResp)
  return target;
}

size_t UpgradeProgressResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hozon.netaos.zmqipc.UpgradeProgressResp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string error_msg = 3;
  if (this->error_msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error_msg());
  }

  // uint32 progress = 1;
  if (this->progress() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_progress());
  }

  // uint32 error_code = 2;
  if (this->error_code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_error_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpgradeProgressResp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hozon.netaos.zmqipc.UpgradeProgressResp)
  GOOGLE_DCHECK_NE(&from, this);
  const UpgradeProgressResp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpgradeProgressResp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hozon.netaos.zmqipc.UpgradeProgressResp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hozon.netaos.zmqipc.UpgradeProgressResp)
    MergeFrom(*source);
  }
}

void UpgradeProgressResp::MergeFrom(const UpgradeProgressResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hozon.netaos.zmqipc.UpgradeProgressResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error_msg().size() > 0) {
    _internal_set_error_msg(from._internal_error_msg());
  }
  if (from.progress() != 0) {
    _internal_set_progress(from._internal_progress());
  }
  if (from.error_code() != 0) {
    _internal_set_error_code(from._internal_error_code());
  }
}

void UpgradeProgressResp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hozon.netaos.zmqipc.UpgradeProgressResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpgradeProgressResp::CopyFrom(const UpgradeProgressResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hozon.netaos.zmqipc.UpgradeProgressResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpgradeProgressResp::IsInitialized() const {
  return true;
}

void UpgradeProgressResp::InternalSwap(UpgradeProgressResp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  error_msg_.Swap(&other->error_msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpgradeProgressResp, error_code_)
      + sizeof(UpgradeProgressResp::error_code_)
      - PROTOBUF_FIELD_OFFSET(UpgradeProgressResp, progress_)>(
          reinterpret_cast<char*>(&progress_),
          reinterpret_cast<char*>(&other->progress_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UpgradeProgressResp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpgradeUpdateReq::InitAsDefaultInstance() {
}
class UpgradeUpdateReq::_Internal {
 public:
};

UpgradeUpdateReq::UpgradeUpdateReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hozon.netaos.zmqipc.UpgradeUpdateReq)
}
UpgradeUpdateReq::UpgradeUpdateReq(const UpgradeUpdateReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  package_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_package_path().empty()) {
    package_path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_package_path(),
      GetArena());
  }
  ::memcpy(&start_with_precheck_, &from.start_with_precheck_,
    static_cast<size_t>(reinterpret_cast<char*>(&ecu_mode_) -
    reinterpret_cast<char*>(&start_with_precheck_)) + sizeof(ecu_mode_));
  // @@protoc_insertion_point(copy_constructor:hozon.netaos.zmqipc.UpgradeUpdateReq)
}

void UpgradeUpdateReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpgradeUpdateReq_devm_5ftool_2eproto.base);
  package_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&start_with_precheck_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ecu_mode_) -
      reinterpret_cast<char*>(&start_with_precheck_)) + sizeof(ecu_mode_));
}

UpgradeUpdateReq::~UpgradeUpdateReq() {
  // @@protoc_insertion_point(destructor:hozon.netaos.zmqipc.UpgradeUpdateReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpgradeUpdateReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  package_path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UpgradeUpdateReq::ArenaDtor(void* object) {
  UpgradeUpdateReq* _this = reinterpret_cast< UpgradeUpdateReq* >(object);
  (void)_this;
}
void UpgradeUpdateReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpgradeUpdateReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpgradeUpdateReq& UpgradeUpdateReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpgradeUpdateReq_devm_5ftool_2eproto.base);
  return *internal_default_instance();
}


void UpgradeUpdateReq::Clear() {
// @@protoc_insertion_point(message_clear_start:hozon.netaos.zmqipc.UpgradeUpdateReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  package_path_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&start_with_precheck_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ecu_mode_) -
      reinterpret_cast<char*>(&start_with_precheck_)) + sizeof(ecu_mode_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpgradeUpdateReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool start_with_precheck = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          start_with_precheck_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool skip_version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          skip_version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 ecu_mode = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ecu_mode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string package_path = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_package_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hozon.netaos.zmqipc.UpgradeUpdateReq.package_path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpgradeUpdateReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hozon.netaos.zmqipc.UpgradeUpdateReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool start_with_precheck = 1;
  if (this->start_with_precheck() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_start_with_precheck(), target);
  }

  // bool skip_version = 2;
  if (this->skip_version() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_skip_version(), target);
  }

  // uint32 ecu_mode = 3;
  if (this->ecu_mode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_ecu_mode(), target);
  }

  // string package_path = 4;
  if (this->package_path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_package_path().data(), static_cast<int>(this->_internal_package_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hozon.netaos.zmqipc.UpgradeUpdateReq.package_path");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_package_path(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hozon.netaos.zmqipc.UpgradeUpdateReq)
  return target;
}

size_t UpgradeUpdateReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hozon.netaos.zmqipc.UpgradeUpdateReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string package_path = 4;
  if (this->package_path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_package_path());
  }

  // bool start_with_precheck = 1;
  if (this->start_with_precheck() != 0) {
    total_size += 1 + 1;
  }

  // bool skip_version = 2;
  if (this->skip_version() != 0) {
    total_size += 1 + 1;
  }

  // uint32 ecu_mode = 3;
  if (this->ecu_mode() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_ecu_mode());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpgradeUpdateReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hozon.netaos.zmqipc.UpgradeUpdateReq)
  GOOGLE_DCHECK_NE(&from, this);
  const UpgradeUpdateReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpgradeUpdateReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hozon.netaos.zmqipc.UpgradeUpdateReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hozon.netaos.zmqipc.UpgradeUpdateReq)
    MergeFrom(*source);
  }
}

void UpgradeUpdateReq::MergeFrom(const UpgradeUpdateReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hozon.netaos.zmqipc.UpgradeUpdateReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.package_path().size() > 0) {
    _internal_set_package_path(from._internal_package_path());
  }
  if (from.start_with_precheck() != 0) {
    _internal_set_start_with_precheck(from._internal_start_with_precheck());
  }
  if (from.skip_version() != 0) {
    _internal_set_skip_version(from._internal_skip_version());
  }
  if (from.ecu_mode() != 0) {
    _internal_set_ecu_mode(from._internal_ecu_mode());
  }
}

void UpgradeUpdateReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hozon.netaos.zmqipc.UpgradeUpdateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpgradeUpdateReq::CopyFrom(const UpgradeUpdateReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hozon.netaos.zmqipc.UpgradeUpdateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpgradeUpdateReq::IsInitialized() const {
  return true;
}

void UpgradeUpdateReq::InternalSwap(UpgradeUpdateReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  package_path_.Swap(&other->package_path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpgradeUpdateReq, ecu_mode_)
      + sizeof(UpgradeUpdateReq::ecu_mode_)
      - PROTOBUF_FIELD_OFFSET(UpgradeUpdateReq, start_with_precheck_)>(
          reinterpret_cast<char*>(&start_with_precheck_),
          reinterpret_cast<char*>(&other->start_with_precheck_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UpgradeUpdateReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpgradeUpdateResp::InitAsDefaultInstance() {
}
class UpgradeUpdateResp::_Internal {
 public:
};

UpgradeUpdateResp::UpgradeUpdateResp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hozon.netaos.zmqipc.UpgradeUpdateResp)
}
UpgradeUpdateResp::UpgradeUpdateResp(const UpgradeUpdateResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  error_msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_error_msg().empty()) {
    error_msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_error_msg(),
      GetArena());
  }
  error_code_ = from.error_code_;
  // @@protoc_insertion_point(copy_constructor:hozon.netaos.zmqipc.UpgradeUpdateResp)
}

void UpgradeUpdateResp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpgradeUpdateResp_devm_5ftool_2eproto.base);
  error_msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  error_code_ = 0u;
}

UpgradeUpdateResp::~UpgradeUpdateResp() {
  // @@protoc_insertion_point(destructor:hozon.netaos.zmqipc.UpgradeUpdateResp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpgradeUpdateResp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  error_msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UpgradeUpdateResp::ArenaDtor(void* object) {
  UpgradeUpdateResp* _this = reinterpret_cast< UpgradeUpdateResp* >(object);
  (void)_this;
}
void UpgradeUpdateResp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpgradeUpdateResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpgradeUpdateResp& UpgradeUpdateResp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpgradeUpdateResp_devm_5ftool_2eproto.base);
  return *internal_default_instance();
}


void UpgradeUpdateResp::Clear() {
// @@protoc_insertion_point(message_clear_start:hozon.netaos.zmqipc.UpgradeUpdateResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  error_code_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpgradeUpdateResp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 error_code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          error_code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string error_msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_error_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hozon.netaos.zmqipc.UpgradeUpdateResp.error_msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpgradeUpdateResp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hozon.netaos.zmqipc.UpgradeUpdateResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 error_code = 1;
  if (this->error_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_error_code(), target);
  }

  // string error_msg = 2;
  if (this->error_msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error_msg().data(), static_cast<int>(this->_internal_error_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hozon.netaos.zmqipc.UpgradeUpdateResp.error_msg");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_error_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hozon.netaos.zmqipc.UpgradeUpdateResp)
  return target;
}

size_t UpgradeUpdateResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hozon.netaos.zmqipc.UpgradeUpdateResp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string error_msg = 2;
  if (this->error_msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error_msg());
  }

  // uint32 error_code = 1;
  if (this->error_code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_error_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpgradeUpdateResp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hozon.netaos.zmqipc.UpgradeUpdateResp)
  GOOGLE_DCHECK_NE(&from, this);
  const UpgradeUpdateResp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpgradeUpdateResp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hozon.netaos.zmqipc.UpgradeUpdateResp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hozon.netaos.zmqipc.UpgradeUpdateResp)
    MergeFrom(*source);
  }
}

void UpgradeUpdateResp::MergeFrom(const UpgradeUpdateResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hozon.netaos.zmqipc.UpgradeUpdateResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error_msg().size() > 0) {
    _internal_set_error_msg(from._internal_error_msg());
  }
  if (from.error_code() != 0) {
    _internal_set_error_code(from._internal_error_code());
  }
}

void UpgradeUpdateResp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hozon.netaos.zmqipc.UpgradeUpdateResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpgradeUpdateResp::CopyFrom(const UpgradeUpdateResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hozon.netaos.zmqipc.UpgradeUpdateResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpgradeUpdateResp::IsInitialized() const {
  return true;
}

void UpgradeUpdateResp::InternalSwap(UpgradeUpdateResp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  error_msg_.Swap(&other->error_msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(error_code_, other->error_code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpgradeUpdateResp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

UpgradeVersionResp_SensorVersionEntry_DoNotUse::UpgradeVersionResp_SensorVersionEntry_DoNotUse() {}
UpgradeVersionResp_SensorVersionEntry_DoNotUse::UpgradeVersionResp_SensorVersionEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void UpgradeVersionResp_SensorVersionEntry_DoNotUse::MergeFrom(const UpgradeVersionResp_SensorVersionEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata UpgradeVersionResp_SensorVersionEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void UpgradeVersionResp_SensorVersionEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void UpgradeVersionResp::InitAsDefaultInstance() {
}
class UpgradeVersionResp::_Internal {
 public:
};

UpgradeVersionResp::UpgradeVersionResp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  sensor_version_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hozon.netaos.zmqipc.UpgradeVersionResp)
}
UpgradeVersionResp::UpgradeVersionResp(const UpgradeVersionResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  sensor_version_.MergeFrom(from.sensor_version_);
  major_version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_major_version().empty()) {
    major_version_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_major_version(),
      GetArena());
  }
  soc_version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_soc_version().empty()) {
    soc_version_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_soc_version(),
      GetArena());
  }
  mcu_version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_mcu_version().empty()) {
    mcu_version_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_mcu_version(),
      GetArena());
  }
  dsv_version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_dsv_version().empty()) {
    dsv_version_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_dsv_version(),
      GetArena());
  }
  swt_version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_swt_version().empty()) {
    swt_version_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_swt_version(),
      GetArena());
  }
  error_msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_error_msg().empty()) {
    error_msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_error_msg(),
      GetArena());
  }
  error_code_ = from.error_code_;
  // @@protoc_insertion_point(copy_constructor:hozon.netaos.zmqipc.UpgradeVersionResp)
}

void UpgradeVersionResp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpgradeVersionResp_devm_5ftool_2eproto.base);
  major_version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  soc_version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  mcu_version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  dsv_version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  swt_version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  error_msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  error_code_ = 0u;
}

UpgradeVersionResp::~UpgradeVersionResp() {
  // @@protoc_insertion_point(destructor:hozon.netaos.zmqipc.UpgradeVersionResp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpgradeVersionResp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  major_version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  soc_version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  mcu_version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  dsv_version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  swt_version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  error_msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UpgradeVersionResp::ArenaDtor(void* object) {
  UpgradeVersionResp* _this = reinterpret_cast< UpgradeVersionResp* >(object);
  (void)_this;
}
void UpgradeVersionResp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpgradeVersionResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpgradeVersionResp& UpgradeVersionResp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpgradeVersionResp_devm_5ftool_2eproto.base);
  return *internal_default_instance();
}


void UpgradeVersionResp::Clear() {
// @@protoc_insertion_point(message_clear_start:hozon.netaos.zmqipc.UpgradeVersionResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sensor_version_.Clear();
  major_version_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  soc_version_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  mcu_version_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  dsv_version_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swt_version_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  error_msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  error_code_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpgradeVersionResp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string major_version = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_major_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hozon.netaos.zmqipc.UpgradeVersionResp.major_version"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string soc_version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_soc_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hozon.netaos.zmqipc.UpgradeVersionResp.soc_version"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string mcu_version = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_mcu_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hozon.netaos.zmqipc.UpgradeVersionResp.mcu_version"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string dsv_version = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_dsv_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hozon.netaos.zmqipc.UpgradeVersionResp.dsv_version"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string swt_version = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_swt_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hozon.netaos.zmqipc.UpgradeVersionResp.swt_version"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, string> sensor_version = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&sensor_version_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else goto handle_unusual;
        continue;
      // uint32 error_code = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          error_code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string error_msg = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_error_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hozon.netaos.zmqipc.UpgradeVersionResp.error_msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpgradeVersionResp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hozon.netaos.zmqipc.UpgradeVersionResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string major_version = 1;
  if (this->major_version().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_major_version().data(), static_cast<int>(this->_internal_major_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hozon.netaos.zmqipc.UpgradeVersionResp.major_version");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_major_version(), target);
  }

  // string soc_version = 2;
  if (this->soc_version().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_soc_version().data(), static_cast<int>(this->_internal_soc_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hozon.netaos.zmqipc.UpgradeVersionResp.soc_version");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_soc_version(), target);
  }

  // string mcu_version = 3;
  if (this->mcu_version().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mcu_version().data(), static_cast<int>(this->_internal_mcu_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hozon.netaos.zmqipc.UpgradeVersionResp.mcu_version");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_mcu_version(), target);
  }

  // string dsv_version = 4;
  if (this->dsv_version().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_dsv_version().data(), static_cast<int>(this->_internal_dsv_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hozon.netaos.zmqipc.UpgradeVersionResp.dsv_version");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_dsv_version(), target);
  }

  // string swt_version = 5;
  if (this->swt_version().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_swt_version().data(), static_cast<int>(this->_internal_swt_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hozon.netaos.zmqipc.UpgradeVersionResp.swt_version");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_swt_version(), target);
  }

  // map<string, string> sensor_version = 6;
  if (!this->_internal_sensor_version().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "hozon.netaos.zmqipc.UpgradeVersionResp.SensorVersionEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "hozon.netaos.zmqipc.UpgradeVersionResp.SensorVersionEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_sensor_version().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_sensor_version().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_sensor_version().begin();
          it != this->_internal_sensor_version().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = UpgradeVersionResp_SensorVersionEntry_DoNotUse::Funcs::InternalSerialize(6, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_sensor_version().begin();
          it != this->_internal_sensor_version().end(); ++it) {
        target = UpgradeVersionResp_SensorVersionEntry_DoNotUse::Funcs::InternalSerialize(6, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // uint32 error_code = 7;
  if (this->error_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(7, this->_internal_error_code(), target);
  }

  // string error_msg = 8;
  if (this->error_msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error_msg().data(), static_cast<int>(this->_internal_error_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hozon.netaos.zmqipc.UpgradeVersionResp.error_msg");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_error_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hozon.netaos.zmqipc.UpgradeVersionResp)
  return target;
}

size_t UpgradeVersionResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hozon.netaos.zmqipc.UpgradeVersionResp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> sensor_version = 6;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_sensor_version_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_sensor_version().begin();
      it != this->_internal_sensor_version().end(); ++it) {
    total_size += UpgradeVersionResp_SensorVersionEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string major_version = 1;
  if (this->major_version().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_major_version());
  }

  // string soc_version = 2;
  if (this->soc_version().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_soc_version());
  }

  // string mcu_version = 3;
  if (this->mcu_version().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mcu_version());
  }

  // string dsv_version = 4;
  if (this->dsv_version().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_dsv_version());
  }

  // string swt_version = 5;
  if (this->swt_version().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_swt_version());
  }

  // string error_msg = 8;
  if (this->error_msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error_msg());
  }

  // uint32 error_code = 7;
  if (this->error_code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_error_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpgradeVersionResp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hozon.netaos.zmqipc.UpgradeVersionResp)
  GOOGLE_DCHECK_NE(&from, this);
  const UpgradeVersionResp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpgradeVersionResp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hozon.netaos.zmqipc.UpgradeVersionResp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hozon.netaos.zmqipc.UpgradeVersionResp)
    MergeFrom(*source);
  }
}

void UpgradeVersionResp::MergeFrom(const UpgradeVersionResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hozon.netaos.zmqipc.UpgradeVersionResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sensor_version_.MergeFrom(from.sensor_version_);
  if (from.major_version().size() > 0) {
    _internal_set_major_version(from._internal_major_version());
  }
  if (from.soc_version().size() > 0) {
    _internal_set_soc_version(from._internal_soc_version());
  }
  if (from.mcu_version().size() > 0) {
    _internal_set_mcu_version(from._internal_mcu_version());
  }
  if (from.dsv_version().size() > 0) {
    _internal_set_dsv_version(from._internal_dsv_version());
  }
  if (from.swt_version().size() > 0) {
    _internal_set_swt_version(from._internal_swt_version());
  }
  if (from.error_msg().size() > 0) {
    _internal_set_error_msg(from._internal_error_msg());
  }
  if (from.error_code() != 0) {
    _internal_set_error_code(from._internal_error_code());
  }
}

void UpgradeVersionResp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hozon.netaos.zmqipc.UpgradeVersionResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpgradeVersionResp::CopyFrom(const UpgradeVersionResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hozon.netaos.zmqipc.UpgradeVersionResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpgradeVersionResp::IsInitialized() const {
  return true;
}

void UpgradeVersionResp::InternalSwap(UpgradeVersionResp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  sensor_version_.Swap(&other->sensor_version_);
  major_version_.Swap(&other->major_version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  soc_version_.Swap(&other->soc_version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  mcu_version_.Swap(&other->mcu_version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  dsv_version_.Swap(&other->dsv_version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swt_version_.Swap(&other->swt_version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  error_msg_.Swap(&other->error_msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(error_code_, other->error_code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpgradeVersionResp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpgradeFinishResp::InitAsDefaultInstance() {
}
class UpgradeFinishResp::_Internal {
 public:
};

UpgradeFinishResp::UpgradeFinishResp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hozon.netaos.zmqipc.UpgradeFinishResp)
}
UpgradeFinishResp::UpgradeFinishResp(const UpgradeFinishResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  error_msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_error_msg().empty()) {
    error_msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_error_msg(),
      GetArena());
  }
  error_code_ = from.error_code_;
  // @@protoc_insertion_point(copy_constructor:hozon.netaos.zmqipc.UpgradeFinishResp)
}

void UpgradeFinishResp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpgradeFinishResp_devm_5ftool_2eproto.base);
  error_msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  error_code_ = 0u;
}

UpgradeFinishResp::~UpgradeFinishResp() {
  // @@protoc_insertion_point(destructor:hozon.netaos.zmqipc.UpgradeFinishResp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpgradeFinishResp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  error_msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UpgradeFinishResp::ArenaDtor(void* object) {
  UpgradeFinishResp* _this = reinterpret_cast< UpgradeFinishResp* >(object);
  (void)_this;
}
void UpgradeFinishResp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpgradeFinishResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpgradeFinishResp& UpgradeFinishResp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpgradeFinishResp_devm_5ftool_2eproto.base);
  return *internal_default_instance();
}


void UpgradeFinishResp::Clear() {
// @@protoc_insertion_point(message_clear_start:hozon.netaos.zmqipc.UpgradeFinishResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  error_code_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpgradeFinishResp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 error_code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          error_code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string error_msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_error_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hozon.netaos.zmqipc.UpgradeFinishResp.error_msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpgradeFinishResp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hozon.netaos.zmqipc.UpgradeFinishResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 error_code = 1;
  if (this->error_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_error_code(), target);
  }

  // string error_msg = 2;
  if (this->error_msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error_msg().data(), static_cast<int>(this->_internal_error_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hozon.netaos.zmqipc.UpgradeFinishResp.error_msg");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_error_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hozon.netaos.zmqipc.UpgradeFinishResp)
  return target;
}

size_t UpgradeFinishResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hozon.netaos.zmqipc.UpgradeFinishResp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string error_msg = 2;
  if (this->error_msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error_msg());
  }

  // uint32 error_code = 1;
  if (this->error_code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_error_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpgradeFinishResp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hozon.netaos.zmqipc.UpgradeFinishResp)
  GOOGLE_DCHECK_NE(&from, this);
  const UpgradeFinishResp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpgradeFinishResp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hozon.netaos.zmqipc.UpgradeFinishResp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hozon.netaos.zmqipc.UpgradeFinishResp)
    MergeFrom(*source);
  }
}

void UpgradeFinishResp::MergeFrom(const UpgradeFinishResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hozon.netaos.zmqipc.UpgradeFinishResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error_msg().size() > 0) {
    _internal_set_error_msg(from._internal_error_msg());
  }
  if (from.error_code() != 0) {
    _internal_set_error_code(from._internal_error_code());
  }
}

void UpgradeFinishResp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hozon.netaos.zmqipc.UpgradeFinishResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpgradeFinishResp::CopyFrom(const UpgradeFinishResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hozon.netaos.zmqipc.UpgradeFinishResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpgradeFinishResp::IsInitialized() const {
  return true;
}

void UpgradeFinishResp::InternalSwap(UpgradeFinishResp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  error_msg_.Swap(&other->error_msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(error_code_, other->error_code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpgradeFinishResp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpgradeCurPartitionResp::InitAsDefaultInstance() {
}
class UpgradeCurPartitionResp::_Internal {
 public:
};

UpgradeCurPartitionResp::UpgradeCurPartitionResp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hozon.netaos.zmqipc.UpgradeCurPartitionResp)
}
UpgradeCurPartitionResp::UpgradeCurPartitionResp(const UpgradeCurPartitionResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  cur_partition_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_cur_partition().empty()) {
    cur_partition_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_cur_partition(),
      GetArena());
  }
  error_msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_error_msg().empty()) {
    error_msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_error_msg(),
      GetArena());
  }
  error_code_ = from.error_code_;
  // @@protoc_insertion_point(copy_constructor:hozon.netaos.zmqipc.UpgradeCurPartitionResp)
}

void UpgradeCurPartitionResp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpgradeCurPartitionResp_devm_5ftool_2eproto.base);
  cur_partition_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  error_msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  error_code_ = 0u;
}

UpgradeCurPartitionResp::~UpgradeCurPartitionResp() {
  // @@protoc_insertion_point(destructor:hozon.netaos.zmqipc.UpgradeCurPartitionResp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpgradeCurPartitionResp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  cur_partition_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  error_msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UpgradeCurPartitionResp::ArenaDtor(void* object) {
  UpgradeCurPartitionResp* _this = reinterpret_cast< UpgradeCurPartitionResp* >(object);
  (void)_this;
}
void UpgradeCurPartitionResp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpgradeCurPartitionResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpgradeCurPartitionResp& UpgradeCurPartitionResp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpgradeCurPartitionResp_devm_5ftool_2eproto.base);
  return *internal_default_instance();
}


void UpgradeCurPartitionResp::Clear() {
// @@protoc_insertion_point(message_clear_start:hozon.netaos.zmqipc.UpgradeCurPartitionResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cur_partition_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  error_msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  error_code_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpgradeCurPartitionResp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string cur_partition = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_cur_partition();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hozon.netaos.zmqipc.UpgradeCurPartitionResp.cur_partition"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 error_code = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          error_code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string error_msg = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_error_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hozon.netaos.zmqipc.UpgradeCurPartitionResp.error_msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpgradeCurPartitionResp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hozon.netaos.zmqipc.UpgradeCurPartitionResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cur_partition = 1;
  if (this->cur_partition().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_cur_partition().data(), static_cast<int>(this->_internal_cur_partition().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hozon.netaos.zmqipc.UpgradeCurPartitionResp.cur_partition");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_cur_partition(), target);
  }

  // uint32 error_code = 2;
  if (this->error_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_error_code(), target);
  }

  // string error_msg = 3;
  if (this->error_msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error_msg().data(), static_cast<int>(this->_internal_error_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hozon.netaos.zmqipc.UpgradeCurPartitionResp.error_msg");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_error_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hozon.netaos.zmqipc.UpgradeCurPartitionResp)
  return target;
}

size_t UpgradeCurPartitionResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hozon.netaos.zmqipc.UpgradeCurPartitionResp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string cur_partition = 1;
  if (this->cur_partition().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_cur_partition());
  }

  // string error_msg = 3;
  if (this->error_msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error_msg());
  }

  // uint32 error_code = 2;
  if (this->error_code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_error_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpgradeCurPartitionResp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hozon.netaos.zmqipc.UpgradeCurPartitionResp)
  GOOGLE_DCHECK_NE(&from, this);
  const UpgradeCurPartitionResp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpgradeCurPartitionResp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hozon.netaos.zmqipc.UpgradeCurPartitionResp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hozon.netaos.zmqipc.UpgradeCurPartitionResp)
    MergeFrom(*source);
  }
}

void UpgradeCurPartitionResp::MergeFrom(const UpgradeCurPartitionResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hozon.netaos.zmqipc.UpgradeCurPartitionResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cur_partition().size() > 0) {
    _internal_set_cur_partition(from._internal_cur_partition());
  }
  if (from.error_msg().size() > 0) {
    _internal_set_error_msg(from._internal_error_msg());
  }
  if (from.error_code() != 0) {
    _internal_set_error_code(from._internal_error_code());
  }
}

void UpgradeCurPartitionResp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hozon.netaos.zmqipc.UpgradeCurPartitionResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpgradeCurPartitionResp::CopyFrom(const UpgradeCurPartitionResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hozon.netaos.zmqipc.UpgradeCurPartitionResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpgradeCurPartitionResp::IsInitialized() const {
  return true;
}

void UpgradeCurPartitionResp::InternalSwap(UpgradeCurPartitionResp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  cur_partition_.Swap(&other->cur_partition_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  error_msg_.Swap(&other->error_msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(error_code_, other->error_code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpgradeCurPartitionResp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpgradeSwitchSlotResp::InitAsDefaultInstance() {
}
class UpgradeSwitchSlotResp::_Internal {
 public:
};

UpgradeSwitchSlotResp::UpgradeSwitchSlotResp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hozon.netaos.zmqipc.UpgradeSwitchSlotResp)
}
UpgradeSwitchSlotResp::UpgradeSwitchSlotResp(const UpgradeSwitchSlotResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  error_msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_error_msg().empty()) {
    error_msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_error_msg(),
      GetArena());
  }
  error_code_ = from.error_code_;
  // @@protoc_insertion_point(copy_constructor:hozon.netaos.zmqipc.UpgradeSwitchSlotResp)
}

void UpgradeSwitchSlotResp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpgradeSwitchSlotResp_devm_5ftool_2eproto.base);
  error_msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  error_code_ = 0u;
}

UpgradeSwitchSlotResp::~UpgradeSwitchSlotResp() {
  // @@protoc_insertion_point(destructor:hozon.netaos.zmqipc.UpgradeSwitchSlotResp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpgradeSwitchSlotResp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  error_msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UpgradeSwitchSlotResp::ArenaDtor(void* object) {
  UpgradeSwitchSlotResp* _this = reinterpret_cast< UpgradeSwitchSlotResp* >(object);
  (void)_this;
}
void UpgradeSwitchSlotResp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpgradeSwitchSlotResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpgradeSwitchSlotResp& UpgradeSwitchSlotResp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpgradeSwitchSlotResp_devm_5ftool_2eproto.base);
  return *internal_default_instance();
}


void UpgradeSwitchSlotResp::Clear() {
// @@protoc_insertion_point(message_clear_start:hozon.netaos.zmqipc.UpgradeSwitchSlotResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  error_code_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpgradeSwitchSlotResp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 error_code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          error_code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string error_msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_error_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hozon.netaos.zmqipc.UpgradeSwitchSlotResp.error_msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpgradeSwitchSlotResp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hozon.netaos.zmqipc.UpgradeSwitchSlotResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 error_code = 1;
  if (this->error_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_error_code(), target);
  }

  // string error_msg = 2;
  if (this->error_msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error_msg().data(), static_cast<int>(this->_internal_error_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "hozon.netaos.zmqipc.UpgradeSwitchSlotResp.error_msg");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_error_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hozon.netaos.zmqipc.UpgradeSwitchSlotResp)
  return target;
}

size_t UpgradeSwitchSlotResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hozon.netaos.zmqipc.UpgradeSwitchSlotResp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string error_msg = 2;
  if (this->error_msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error_msg());
  }

  // uint32 error_code = 1;
  if (this->error_code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_error_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpgradeSwitchSlotResp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hozon.netaos.zmqipc.UpgradeSwitchSlotResp)
  GOOGLE_DCHECK_NE(&from, this);
  const UpgradeSwitchSlotResp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpgradeSwitchSlotResp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hozon.netaos.zmqipc.UpgradeSwitchSlotResp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hozon.netaos.zmqipc.UpgradeSwitchSlotResp)
    MergeFrom(*source);
  }
}

void UpgradeSwitchSlotResp::MergeFrom(const UpgradeSwitchSlotResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hozon.netaos.zmqipc.UpgradeSwitchSlotResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error_msg().size() > 0) {
    _internal_set_error_msg(from._internal_error_msg());
  }
  if (from.error_code() != 0) {
    _internal_set_error_code(from._internal_error_code());
  }
}

void UpgradeSwitchSlotResp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hozon.netaos.zmqipc.UpgradeSwitchSlotResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpgradeSwitchSlotResp::CopyFrom(const UpgradeSwitchSlotResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hozon.netaos.zmqipc.UpgradeSwitchSlotResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpgradeSwitchSlotResp::IsInitialized() const {
  return true;
}

void UpgradeSwitchSlotResp::InternalSwap(UpgradeSwitchSlotResp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  error_msg_.Swap(&other->error_msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(error_code_, other->error_code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpgradeSwitchSlotResp::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace zmqipc
}  // namespace netaos
}  // namespace hozon
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::hozon::netaos::zmqipc::DevmDidInfo* Arena::CreateMaybeMessage< ::hozon::netaos::zmqipc::DevmDidInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hozon::netaos::zmqipc::DevmDidInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::hozon::netaos::zmqipc::DevmReq* Arena::CreateMaybeMessage< ::hozon::netaos::zmqipc::DevmReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hozon::netaos::zmqipc::DevmReq >(arena);
}
template<> PROTOBUF_NOINLINE ::hozon::netaos::zmqipc::DevmCpuInfo_CpuBindingEntry_DoNotUse* Arena::CreateMaybeMessage< ::hozon::netaos::zmqipc::DevmCpuInfo_CpuBindingEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hozon::netaos::zmqipc::DevmCpuInfo_CpuBindingEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::hozon::netaos::zmqipc::DevmCpuInfo* Arena::CreateMaybeMessage< ::hozon::netaos::zmqipc::DevmCpuInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hozon::netaos::zmqipc::DevmCpuInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::hozon::netaos::zmqipc::DevmTemperature* Arena::CreateMaybeMessage< ::hozon::netaos::zmqipc::DevmTemperature >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hozon::netaos::zmqipc::DevmTemperature >(arena);
}
template<> PROTOBUF_NOINLINE ::hozon::netaos::zmqipc::DevmVoltage* Arena::CreateMaybeMessage< ::hozon::netaos::zmqipc::DevmVoltage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hozon::netaos::zmqipc::DevmVoltage >(arena);
}
template<> PROTOBUF_NOINLINE ::hozon::netaos::zmqipc::DevmDeviceInfo_SensorVersionEntry_DoNotUse* Arena::CreateMaybeMessage< ::hozon::netaos::zmqipc::DevmDeviceInfo_SensorVersionEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hozon::netaos::zmqipc::DevmDeviceInfo_SensorVersionEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::hozon::netaos::zmqipc::DevmDeviceInfo* Arena::CreateMaybeMessage< ::hozon::netaos::zmqipc::DevmDeviceInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hozon::netaos::zmqipc::DevmDeviceInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::hozon::netaos::zmqipc::DevmDeviceStatus_CameraStatusEntry_DoNotUse* Arena::CreateMaybeMessage< ::hozon::netaos::zmqipc::DevmDeviceStatus_CameraStatusEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hozon::netaos::zmqipc::DevmDeviceStatus_CameraStatusEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::hozon::netaos::zmqipc::DevmDeviceStatus_LidarStatusEntry_DoNotUse* Arena::CreateMaybeMessage< ::hozon::netaos::zmqipc::DevmDeviceStatus_LidarStatusEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hozon::netaos::zmqipc::DevmDeviceStatus_LidarStatusEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::hozon::netaos::zmqipc::DevmDeviceStatus_RadarStatusEntry_DoNotUse* Arena::CreateMaybeMessage< ::hozon::netaos::zmqipc::DevmDeviceStatus_RadarStatusEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hozon::netaos::zmqipc::DevmDeviceStatus_RadarStatusEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::hozon::netaos::zmqipc::DevmDeviceStatus_ImuStatusEntry_DoNotUse* Arena::CreateMaybeMessage< ::hozon::netaos::zmqipc::DevmDeviceStatus_ImuStatusEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hozon::netaos::zmqipc::DevmDeviceStatus_ImuStatusEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::hozon::netaos::zmqipc::DevmDeviceStatus_UssStatusEntry_DoNotUse* Arena::CreateMaybeMessage< ::hozon::netaos::zmqipc::DevmDeviceStatus_UssStatusEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hozon::netaos::zmqipc::DevmDeviceStatus_UssStatusEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::hozon::netaos::zmqipc::DevmDeviceStatus* Arena::CreateMaybeMessage< ::hozon::netaos::zmqipc::DevmDeviceStatus >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hozon::netaos::zmqipc::DevmDeviceStatus >(arena);
}
template<> PROTOBUF_NOINLINE ::hozon::netaos::zmqipc::UpgradeCommonReq* Arena::CreateMaybeMessage< ::hozon::netaos::zmqipc::UpgradeCommonReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hozon::netaos::zmqipc::UpgradeCommonReq >(arena);
}
template<> PROTOBUF_NOINLINE ::hozon::netaos::zmqipc::UpgradeStatusResp* Arena::CreateMaybeMessage< ::hozon::netaos::zmqipc::UpgradeStatusResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hozon::netaos::zmqipc::UpgradeStatusResp >(arena);
}
template<> PROTOBUF_NOINLINE ::hozon::netaos::zmqipc::UpgradePrecheckResp* Arena::CreateMaybeMessage< ::hozon::netaos::zmqipc::UpgradePrecheckResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hozon::netaos::zmqipc::UpgradePrecheckResp >(arena);
}
template<> PROTOBUF_NOINLINE ::hozon::netaos::zmqipc::UpgradeProgressResp* Arena::CreateMaybeMessage< ::hozon::netaos::zmqipc::UpgradeProgressResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hozon::netaos::zmqipc::UpgradeProgressResp >(arena);
}
template<> PROTOBUF_NOINLINE ::hozon::netaos::zmqipc::UpgradeUpdateReq* Arena::CreateMaybeMessage< ::hozon::netaos::zmqipc::UpgradeUpdateReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hozon::netaos::zmqipc::UpgradeUpdateReq >(arena);
}
template<> PROTOBUF_NOINLINE ::hozon::netaos::zmqipc::UpgradeUpdateResp* Arena::CreateMaybeMessage< ::hozon::netaos::zmqipc::UpgradeUpdateResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hozon::netaos::zmqipc::UpgradeUpdateResp >(arena);
}
template<> PROTOBUF_NOINLINE ::hozon::netaos::zmqipc::UpgradeVersionResp_SensorVersionEntry_DoNotUse* Arena::CreateMaybeMessage< ::hozon::netaos::zmqipc::UpgradeVersionResp_SensorVersionEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hozon::netaos::zmqipc::UpgradeVersionResp_SensorVersionEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::hozon::netaos::zmqipc::UpgradeVersionResp* Arena::CreateMaybeMessage< ::hozon::netaos::zmqipc::UpgradeVersionResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hozon::netaos::zmqipc::UpgradeVersionResp >(arena);
}
template<> PROTOBUF_NOINLINE ::hozon::netaos::zmqipc::UpgradeFinishResp* Arena::CreateMaybeMessage< ::hozon::netaos::zmqipc::UpgradeFinishResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hozon::netaos::zmqipc::UpgradeFinishResp >(arena);
}
template<> PROTOBUF_NOINLINE ::hozon::netaos::zmqipc::UpgradeCurPartitionResp* Arena::CreateMaybeMessage< ::hozon::netaos::zmqipc::UpgradeCurPartitionResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hozon::netaos::zmqipc::UpgradeCurPartitionResp >(arena);
}
template<> PROTOBUF_NOINLINE ::hozon::netaos::zmqipc::UpgradeSwitchSlotResp* Arena::CreateMaybeMessage< ::hozon::netaos::zmqipc::UpgradeSwitchSlotResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hozon::netaos::zmqipc::UpgradeSwitchSlotResp >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
