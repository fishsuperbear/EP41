/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2020-2020. All rights reserved.
 * Generated by VRTF CM-Generator
 */

#ifndef RTF_MAINTAIND_IMPL_TYPE_METHODDATATYPEINFO_H
#define RTF_MAINTAIND_IMPL_TYPE_METHODDATATYPEINFO_H
#include "rtf/basetype/impl_type_vectorstring.h"

namespace rtf {
namespace maintaind {
struct MethodDatatypeInfo {
    ::rtf::basetype::VectorString requestDatatypes_;
    ::rtf::basetype::VectorString replyDatatypes_;

    static bool IsPlane() noexcept
    {
        return false;
    }

    using IsEnumerableTag = void;
    template<typename F>
    void enumerate(F& fun) noexcept
    {
        fun(requestDatatypes_);
        fun(replyDatatypes_);
    }

    template<typename F>
    void enumerate(F& fun) const noexcept
    {
        fun(requestDatatypes_);
        fun(replyDatatypes_);
    }

    bool operator == (const ::rtf::maintaind::MethodDatatypeInfo& t) const noexcept
    {
        return (requestDatatypes_ == t.requestDatatypes_) && (replyDatatypes_ == t.replyDatatypes_);
    }
};
} // namespace maintaind
} // namespace rtf


#endif // RTF_MAINTAIND_IMPL_TYPE_METHODDATATYPEINFO_H
