#include "common.idl"

struct AlgVcuInfo {
    uint8 VCU_ActGearPosition;
    boolean VCU_ActGearPosition_Valid;
    uint8 VCU_Real_ThrottlePosition;
    boolean VCU_Real_ThrottlePos_Valid;
    uint8 VCU5_PwrTrainFailureLevel;
    uint8 VCU5_READYLightSts;
};

struct AlgSteeringInfo {
    double SteeringAngle;
    boolean SteeringAngleValid;
    double SteeringAngleSpeed;
    boolean SteeringAngleSpeedValid;
};

struct AlgWheelInfo {
    double ESC_FLWheelSpeed;
    boolean ESC_FLWheelSpeedValid;
    uint8 ESC_FLWheelDirection;
    double ESC_FRWheelSpeed;
    boolean ESC_FRWheelSpeedValid;
    uint8 ESC_FRWheelDirection;
    double ESC_RLWheelSpeed;
    boolean ESC_RLWheelSpeedValid;
    uint8 ESC_RLWheelDirection;
    double ESC_RRWheelSpeed;
    boolean ESC_RRWheelSpeedValid;
    uint8 ESC_RRWheelDirection;
    float ESC_FL_WhlPulCnt;
    float ESC_FR_WhlPulCnt;
    float ESC_RL_WhlPulCnt;
    float ESC_RR_WhlPulCnt;
    boolean ESC_FL_WhlPulCntValid;
    boolean ESC_FR_WhlPulCntValid;
    boolean ESC_RL_WhlPulCntValid;
    boolean ESC_RR_WhlPulCntValid;
};

struct AlgEscDrivingInfo {
    double ESC_VehicleSpeed;
    boolean ESC_VehicleSpeedValid;
    boolean ESC_BrakePedalSwitchStatus;
    boolean ESC_BrakePedalSwitchValid;
    float BrkPedVal;
    double VehicleSpdDisplay;
    boolean VehicleSpdDisplayValid;
    boolean ESC_ApaStandStill;
    double ESC_LongAccValue;
    boolean ESC_LongAccValue_Valid;
    boolean ESC_LongAccValueOffset_Valid;
    double ESC_LatAccValue;
    boolean ESC_LatAccValue_Valid;
    double ESC_YawRate;
    boolean ESC_YawRate_Valid;
    uint8 IDB1_FailedState;
    float IDB3_MasterCylPressure;
    boolean IDB5_BrakeDiscTempSts;
    uint8 IDB5_VehicleStanstill;
    boolean IDB5_JerkActive;
    boolean IDB5_Jerkfail;
    uint8 IDB5_ADAS_PrefillSts;
    boolean IDB5_ABAavailable;
    boolean IDB5_ABPavailable;
    boolean IDB5_ABAactive;
    boolean IDB5_AEBactive;
    uint8 IDB5_AEB_Enable;
    uint8 IDB6_EPBAvailable;
    boolean IDB7_ESCActive;
    boolean IDB7_ABSActive;
    boolean IDB7_HBAActive;
    boolean IDB7_HBAFail;
    boolean IDB7_TCSActive;
    boolean IDB7_TCSDisable;
    boolean IDB7_ARPACTIVE;
    boolean IDB7_ARPFailure;
};

struct AlgBodyStateInfo {
    uint8 BCM_FLDrOpn;
    uint8 BCM_FRDrOpn;
    uint8 BCM_RLDrOpn;
    uint8 BCM_RRDrOpn;
    uint8 BCM_TGOpn;
    boolean BCM_HodOpen;
    uint8 BCM_DrvSeatbeltBucklesta;
    uint8 BCM_FrontWiperSt;
    uint8 BCM_FrontWiperWorkSts;
    uint8 BCM_HighBeamSt;
    uint8 CS1_HighBeamReqSt;
    uint8 BCM_LowBeamSt;
    uint8 HazardLampSt;
    boolean BCM_FrontFogLampSt;
    boolean BCM_RearFogLampSt;
    boolean BCM_LeftTurnLightSt;
    boolean BCM_RightTurnLightSt;
    uint8 BCM_TurnLightSW;
    uint8 BCM_FrontLampSt;
};

struct AlgCenterConsoleInfo {
    uint8 TSR_OnOffSet;
    uint8 TSR_OverspeedOnoffSet;
    uint8 IHBC_SysSwState;
    uint8 TSR_LimitOverspeedSet;

    uint8 FactoryReset;
    uint8 ResetAllSetup;
};

struct AlgParkInfo {
    boolean TCSActive;
    boolean ABSActive;
    boolean ARPActive;
    boolean ESCActive;
    uint8 EPBStatus;
};

struct AlgSWSwitchInfo {
    uint8 SWSM_A_CruiseSpeed_Add;
    uint8 SWSM_A_CruiseSpeed_Minus;
    uint8 SWSM_A_CruiseDistance_Add;
    uint8 SWSM_A_CruiseDistance_Minus;
};

enum AlgChassisErrorCode {
    NO_ERROR ,
    CMD_NOT_IN_PERIOD ,
    MANUAL_INTERVENTION ,
    CHASSIS_CAN_NOT_IN_PERIOD ,
    CHASSIS_ERROR_ON_STEER ,
    CHASSIS_ERROR_ON_BRAKE ,
    CHASSIS_ERROR_ON_THROTTLE ,
    CHASSIS_ERROR_ON_GEAR ,
    UNKNOW_ERROR 
};
struct AlgWarnningHmiInfo {
    uint8 ADCS8_VoiceMode;
    uint8 RCTA_OnOffSet;
    uint8 FCTA_OnOffSet;
    uint8 DOW_OnOffSet;
    uint8 RCW_OnOffSet;
    uint8 LCA_OnOffSet;
};

struct AlgAvmPdsInfo {
    uint16 CDCS3_Xcoordinate;
    uint16 CDCS3_Ycoordinate;
    uint8 CDCS3_XGestureSpd;
    uint8 CDCS3_YGestureSpd;
    uint8 CDCS3_TouchEvtTyp;
    uint8 CDCS10_WorK_status;
    uint8 CDCS11_LowSpeedBSDSw;
    uint8 CDCS11_AVM_3DRotate;
    uint8 CDCS11_AVM_Turnlightstart;
    uint8 CDCS11_AVM_Steeringstart;
    uint8 CDCS11_AVM_Magnifiedview;
    uint8 CDCS11_AVM_MODdetection;
    uint8 CDCS11_GM_OnOffSet;
    uint8 CDCS11_AVM_auxiliaryline;
    uint8 CDCS11_AVM_Raderdisplay;
    uint8 CDCS11_AVM_Transparentchassis;
    uint8 CDCS11_GM_VidedIn;
    uint8 CDCS11_APA_FunctionMode;
    uint8 CDCS11_TrackreverseSW;
    uint8 CDCS11_SetPathwaySW;
    uint8 CDCS11_AVMSw;
    uint8 CDCS11_RPASw;
    uint8 CDCS11_SetSw;
    uint8 CDCS11_location_sw;
    uint8 CDCS11_Pathrefresh;
    uint8 CDCS11_HPAGuideSW;
    uint8 CDCS11_HPAPathwaytoCloudSW;
    uint8 CDCS11_PathlearningSw;
    uint8 CDCS11_PASw;
    uint8 CDCS11_PA_Recover;
    uint8 CDCS11_SelectSlotID;
    uint8 CDCS11_ParkingInReq;
    uint8 CDCS11_ParkingOutReq;
    uint8 CDCS11_AVM_ViewMode;
    uint8 CDCS11_RPA_FunctionMode;
    uint8 CDCS11_AVM_Initialization;
    uint8 CDCS11_AVM_SpeView;
    uint8 CDCS11_AVM_bodySync;
    uint8 CDCS11_AVM_licenseplateabbr;
    uint8 CDCS11_AVM_licenseplateArea;
    uint8 CDCS11_AVM_LicensePlateNO1;
    uint8 CDCS11_AVM_LicensePlateNO2;
    uint8 CDCS11_AVM_LicensePlateNO3;
    uint8 CDCS11_AVM_LicensePlateNO4;
    uint8 CDCS11_AVM_LicensePlateNO5;
    uint8 CDCS11_AVM_LicensePlateNO6;
    uint8 CDCS11_AVM_LicensePlateNO7;
    uint8 CDCS11_AVM_LicensePlateNO8;
    uint8 CDCS11_AVM_DiaphaneitySw;
    uint8 CDCS11_MOD_Sound_Sw;
    uint8 CDCS11_MOD_BSD_Sw;
    uint8 CDCS11_PA_FRS_OnOffSet;
    uint8 CDCS11_PA_3D_OnOffSet;
    uint8 CDCS11_PA_measure_OnOffSet;
    uint8 CDCS11_MODSw;
    uint8 CDCS11_HPASw;
    uint8 CDCS11_DeleteMapID;
    uint8 CDCS11_UploadMapID;
    uint8 CDCS11_HPApreparkingSw;
    uint8 CDCS11_HPAPathwaytoCloud_WorkSts;
    uint8 CDCS11_ParkingoutSlot_Type;
    uint8 CDCS11_ParkingoutSlot_Dire;
    uint8 CDCS11_OptionalSlot_Type;
    uint8 CDCS11_OptionalSlot_Dire;
    double CDCS11_OptionalSlotAngle;
    uint16 CDCS11_OptionalSlotCoor_P0_X;
    uint16 CDCS11_OptionalSlotCoor_P0_Y;
    uint16 CDCS11_OptionalSlotCoor_P1_X;
    uint16 CDCS11_OptionalSlotCoor_P1_Y;
    uint16 CDCS11_OptionalSlotCoor_P2_X;
    uint16 CDCS11_OptionalSlotCoor_P2_Y;
    uint16 CDCS11_OptionalSlotCoor_P3_X;
    uint16 CDCS11_OptionalSlotCoor_P3_Y;
    uint8 DDCU1_FLDoorAjar;
    uint8 DDCU1_RLDoorAjar;
    uint8 PDCU1_FRDoorAjar;
    uint8 PDCU1_RRDoorAjar;
    uint8 BTM1_SecuritySts;
    uint8 BTM1_PhoneBatSts;
    uint8 BTM1_RemoteIntModSel;
    uint8 BTM1_SelectSlotID;
    uint8 BTM1_Retry;
    uint8 BTM1_Fixslot;
    uint8 BTM1_parkingoutSlot_Dire;
    uint8 BTM1_parkingoutSlotType;
    uint8 BTM1_Recover;
    uint8 BTM1_ParkingReq;
    uint8 BTM1_FunctionMode;
    uint8 BTM1_OptionalSlot_Dire;
    uint8 BTM1_OptionalSlotType;
    uint8 BTM1_RollingCounter;
    uint8 BTM1_RemoteParkReq;
    uint8 BTM1_Movectrl;
    uint8 BTM1_Checksum;
    double BTM1_OptionalSlotAngle;
    uint16 BTM1_OptionalSlotCoor_P0_X;
    uint16 BTM1_OptionalSlotCoor_P0_Y;
    uint16 BTM1_OptionalSlotCoor_P1_X;
    uint16 BTM1_OptionalSlotCoor_P1_Y;
    uint16 BTM1_OptionalSlotCoor_P2_X;
    uint16 BTM1_OptionalSlotCoor_P2_Y;
    uint16 BTM1_OptionalSlotCoor_P3_X;
    uint16 BTM1_OptionalSlotCoor_P3_Y;
    uint8 TBOX2_AVMOnReq;
    uint8 TBOX2_RemoteParkStartPressReqSts;
    uint8 TBOX2_RemoteHPP;
    uint8 TBOX2_AVMviewReq;
    uint8 TBOX2_RemoteParkReq;
    uint8 TBOX2_SecuritySts;
    uint8 TBOX2_ConnectSts;
    uint8 TBOX2_PhoneInCar;
    uint8 TBOX2_RemoteParkAbortReq;
    uint8 TBOX2_RemoteParkStartPressReq;
    uint8 TBOX2_RemoteParkOutModSel;
    uint8 TBOX2_PhoneBatSts;
    uint8 TBOX2_RemoteIntModSel;
    uint8 TBOX2_RemoteSw;
    uint8 TBOX2_RemoteCtrModSel;
    uint8 TBOX2_RemoteCtrSw;
    uint8 TBOX2_Remotepick;
    uint8 TBOX2_NNSsuspend;
    uint8 TBOX2_RemoteVhpower;
    uint8 TBOX2_NRPReq;
    uint8 TBOX2_SDMapReq;
    uint8 TBOX2_NNSSW;
    uint8 TBOX2_RollingCounter;
    uint8 TBOX2_Checksum;
    uint8 TBOX2_GMOnreq;
    uint8 TBOX2_360viewReq;
    uint8 TBOX2_360SpecView;
    uint8 TBOX2_PA_PauseRecover_Req;
    uint8 CDCS11_tryHPP;
    uint8 CDCS11_AVM_Diaphaneity;
    uint8 CDCS11_HPA_ONPath_ID1;
    uint8 CDCS11_HPA_ONPath_ID2;
    uint8 CDCS11_HPA_ONPath_ID3;
    uint8 CDCS11_HPA_ONPath_ID4;
    uint8 BDCS1_PowerManageMode;
    uint8 BTM2_ConnectSts;
    uint8 BTM2_Key_Position;
    uint8 BTM3_RKECmd;
    float BMS3_StateOfCharge;
    uint8 BMS3_Charge_State;
    uint8 BDCS13_RLS_RQ_WiperSPD;
    uint8 DDCU1_FL_WinPos;
    uint8 DDCU1_RL_WinPos;
    uint8 DDCU1_MirrorFoldSt;
    uint8 PDCU1_FR_WinPos;
    uint8 PDCU1_RR_WinPos;
    uint8 CDCS11_HPA_Select_ID;
    uint8 BDCS1_PowerMode;
    uint8 BDCS10_AC_OutsideTempValid;
    uint8 BDCS10_AC_OutsideTemp;
    uint8 ADCS9_PA_FRS_Onoffset;
    uint8 BDCS1_TurnLightSW;
    uint8 BDCS1_TrunkLockSts;
    uint8 CDCS11_AVM_Powertype;
    uint8 ACU1_CrashStatus;
    uint8 TBOX2_HPA_ONPath_ID;
    uint8 TBOX2_HPA_PickPath_ID;
    uint8 CDCS11_learnpath_St;
    uint8 CDCS11_FindCarAvmReq;
    uint8 CDCS15_UserSceneMode;
    uint8 CDCS11_DCWposition;
    uint8 CDCS15_Storage_St;
    uint8 CDCS15_USB_St;
};
struct AlgFaultDidInfo {
    boolean BDCS10_AC_OutsideTempValid;
    float BDCS10_AC_OutsideTemp;
    uint8 Power_Supply_Voltage;
    boolean ICU1_VehicleSpdDisplayValid;
    float ICU1_VehicleSpdDisplay;
    float ICU2_Odometer;
    uint8 BDCS1_PowerManageMode;
    uint8 Ignition_status;
};
struct AlgIgStInfo {
    boolean IG_OFF;
    boolean ACC;
    boolean IG_ON;
    boolean Start;
    boolean Remote_IG_ON;
    boolean reserve_1;
    boolean reserve_2;
};
struct AlgChassisTimeInfo {
    uint8 CalendarYear;
    uint8 CalendarMonth;
    uint8 CalendarDay;
    uint8 HourOfDay;
    uint8 MinuteOfHour;
    uint8 SecsOfMinute;
    uint8 TimeDspFmt;
};
/* ******************************************************************************
    结构 名        :  AlgChassisInfo
    功能描述       :  车辆底盘命令信息
****************************************************************************** */
struct AlgChassisInfo : IDLBaseType {
    boolean isValid ;
    AlgVcuInfo vcu_info;
    AlgSteeringInfo steering_info;
    AlgWheelInfo wheel_info;
    AlgEscDrivingInfo esc_driving_info;
    AlgBodyStateInfo body_state_info;
    AlgCenterConsoleInfo center_console_info;
    AlgParkInfo park_info;
    AlgSWSwitchInfo swswitch_info;
    AlgAvmPdsInfo avm_pds_info;
    AlgFaultDidInfo fault_did_info;
    AlgIgStInfo ig_status_info;
    AlgChassisTimeInfo chassis_time_info;
    AlgWarnningHmiInfo warnning_hmi_info;
    AlgChassisErrorCode error_code;
};

struct AlgEgoWarningInfo {
    uint8 LCARightWarnSt;
    uint8 LCALeftWarnSt;
    uint8 LCAFaultStatus;
    uint8 LCAState;
    uint8 DOWState;
    uint8 DOWWarnAudioplay;
    uint8 DOWLeftWarnSt;
    uint8 DOWRightWarnSt;
    uint8 DOWFaultStatus;
    uint8 RCTAState;
    uint8 RCTAWarnAudioplay;
    uint8 RCTAObjType;
    uint8 RCTALeftWarnSt;
    uint8 RCTARightWarnSt;
    uint8 RCTAFaultStatus;
    uint8 FCTAState;
    uint8 FCTAWarnAudioplay;
    uint8 FCTAObjType;
    uint8 FCTALeftWarnSt;
    uint8 FCTARightWarnSt;
    uint8 FCTAFaultStatus;
    uint8 RCWState;
    uint8 RCWWarnAudioplay;
    uint8 RCWWarnSt;
    uint8 RCWFaultStatus;
    uint8 Voice_Mode;
};
struct AlgEgoParkHmiInfo {
    uint8 PA_ParkBarPercent;
    float PA_GuideLineE_a;
    float PA_GuideLineE_b;
    float PA_GuideLineE_c;
    float PA_GuideLineE_d;
    float PA_GuideLineE_Xmin;
    float PA_GuideLineE_Xmax;
    uint8 HourOfDay;
    uint8 MinuteOfHour;
    uint8 SecondOfMinute;
    uint16 NNS_distance;
    uint16 HPA_distance;
    uint16 Parkingtimeremaining;
};

/* ******************************************************************************
    结构 名        :  AlgEgoHmiFrame
    功能描述       :  规控模块写到底盘的HMI相关信息
****************************************************************************** */
struct AlgEgoHmiFrame : IDLBaseType {
    boolean isValid ;
    AlgEgoWarningInfo warnning_info;
    AlgEgoParkHmiInfo park_hmi_info;
};
